<?php
// ajax-dashboard.php  - Ken True - webmaster@saratoga-weather.org
//  Version 1.00 - 22-Dec-2007 - Initial release
//  Version 1.01 - 04-Jan-2008 - refit for WD/AJAX/PHP package
//  Version 1.02 - 18-Jan-2008 - fixed icon=34 to ra1.jpg (stopped raining)
//  Version 1.03 - 21-Feb-2008 - added icon=35 for wind/rain
//  Version 1.04 - 25-Feb-2008 - added options for UV and/or Solar display
//  Version 1.05 - 11-Mar-2008 - changed to .png for wind-rose defaults (Carterlake/AJAX/PHP templates)
//  Version 1.06 - 11-Mar-2008 - fixed fixup_time routine
//  Version 1.07 - 29-Mar-2008 - added debug features, honor $SITE['WXtags'] for testtags.php include
//  Version 1.08 - 24-Apr-2008 - added langtrans functions for languages other than English + language specific
//                               windrose.  Also support for changing ajaxWDwx.js to different language.
//  Version 1.09 - 29-Jun-2008 - added showSnow, snowShowTemp to display Snow values instead of Rain
//  Version 1.10 - 11-Jul-2008 - added moonphase fix for WD-Mac users
//  Version 1.11 - 25-Sep-2008 - minor translation fixes
//  Version 1.12 - 04-Oct-2008 - added translation for monthname/dayname from WD
//  Version 1.13 - 04-Nov-2008 - improved Snow handling+ added optional last-year, WU-Almanac info
//  Version 1.14 - 03-Jul-2009 - thermometer.php?t=, PHP5 support for TZ changes, remove Notice: alerts
//  Version 1.15 - 13-Jan-2011 - mods for universal template sets
//  Version 1.16 - 04-Feb-2011 - update to remove Notify: and Deprecated: errata with PHP5+
//  Version 1.17 - 11-Feb-2011 - fix display of dayswithnorain/dayswithrain in Rain section
//  Version 1.18 - 17-Feb-2011 - support comma for decimal point from weather station inputs
//  Version 1.19 - 23-Mar-2011 - fix display of baro trend arrow
//  Version 1.20 - 30-May-2011 - fix translation for Baro Trend
//  Version 1.21 - 01-Oct-2011 - added support for alternative animated icon set from http://www.meteotreviglio.com/
//  Version 1.22 - 13-Nov-2011 - some fixes for UTF-8 languages
//  Version 1.23 - 29-Nov-2011 - improved language translations for conditions+ DavisVP handling for forecast
//  Version 1.24 - 14-Jan-2012 - added support for WeatherSnoop display
//  Version 1.25 - 22-Jan-2012 - added fix for dd.mm.yyyy format dates
//  Version 1.26 - 12-Jan-2013 - added moonrise/set swap when moonrise is later than moonset
$ADBversion = 'ajax-dashboard.php - Version 1.26 - 12-Jan-2013 - Multilingual';
//error_reporting(E_ALL);
// --- settings for standalone use --------------------------
$Lang    = 'it';
$uomTemp = '&deg;F';
$uomBaro = ' inHg';
$uomWind = ' mph';
$uomRain = ' in';
$uomSnow = ' in';
$uomPerHour = '/hr';
$imagesDir = './ajax-images/';  // directory for ajax-images with trailing slash
$condIconDir = './ajax-images/'; // directory for condition icons
$condIconType = '.jpg'; // default type='.jpg' -- use '.gif' for animated icons from http://www.meteotreviglio.com/
//  $timeFormat = 'D, d-M-Y g:ia T';  // Fri, 31-Mar-2006 6:35pm TZone
$timeFormat = 'd-M-Y g:ia';  // Fri, 31-Mar-2006 6:35pm TZone
$timeOnlyFormat = 'g:ia';    // h:mm[am|pm];
//$timeOnlyFormat = 'H:i';     // hh:mm
$dateOnlyFormat = 'd-M-Y';   // d-Mon-YYYY
$WDdateMDY = true;     // true=dates by WD are 'month/day/year'
//                     // false=dates by WD are 'day/month/year'
$ourTZ = "America/Los_Angeles";  //NOTE: this *MUST* be set correctly to
// translate UTC times to your LOCAL time for the displays.
// optional settings for the Wind Rose graphic in ajaxwindiconwr as wrName . winddir . wrType
$wrName   = 'wr-';       // first part of the graphic filename (followed by winddir to complete it)
$wrType   = '.png';      // extension of the graphic filename
$wrHeight = '58';        // windrose graphic height=
$wrWidth  = '58';        // windrose graphic width=
$wrCalm   = 'wr-calm.png';  // set to full name of graphic for calm display ('wr-calm.gif')
$haveUV   = true;        // set to false if no UV sensor
$haveSolar = true;       // set to false if no Solar sensor
$WXtags  =  'testtags.php';  // source of our weather variables
$fcstorg =   ''; // default forecast organization ('NWS','EC','WU','WXSIM')
// $fcstscript = 'advforecast2.php'; // default forecast script
//            NWS - 'advforecast2.php', EC - 'ec-forecast.php', 
//            WU - 'WU-forecast.php', WXSIM - 'plaintext-parser.php',
$UVscript		= 'get-UV-forecast-inc.php'; // worldwide forecast script for UV Index
//	comment out above line to exclude UV forecast
$DavisVP	= true; 	// set to false if weather station is not a Davis VP
$showSnow	= true;		// set to false if Snow values not recorded manually in WD
$showSnowTemp = 4;		// display Snow instead of Rain when temp (C) is <= this temperature.
$decimalComma = false;  // set to true to process numbers with a comma for a decimal point
// --- end of settings for standalone use
include_once("common.php");  // for language translation
include_once("Settings.php"); 
// overrides from Settings.php if available
global $SITE,$forwardTrans,$reverseTrans;
$commaDecimal = false;
if (isset($SITE['lang'])) 	{$Lang = $SITE['lang'];}
if (isset($SITE['uomTemp'])) 	{$uomTemp = $SITE['uomTemp'];}
if (isset($SITE['uomBaro'])) 	{$uomBaro = $SITE['uomBaro'];}
if (isset($SITE['uomWind'])) 	{$uomWind = $SITE['uomWind'];}
if (isset($SITE['uomRain'])) 	{$uomRain = $SITE['uomRain'];}
if (isset($SITE['uomSnow'])) 	{$uomSnow = $SITE['uomSnow'];}
if (isset($SITE['uomPerHour'])) {$uomPerHour = $SITE['uomPerHour'];}
if (isset($SITE['imagesDir'])) 	{$imagesDir = $SITE['imagesDir'];}
if (isset($SITE['timeFormat'])) {$timeFormat = $SITE['timeFormat'];}
if (isset($SITE['timeOnlyFormat'])) {$timeOnlyFormat = $SITE['timeOnlyFormat'];}
if (isset($SITE['dateOnlyFormat'])) {$dateOnlyFormat = $SITE['dateOnlyFormat'];}
if (isset($SITE['WDdateMDY']))  {$WDdateMDY = $SITE['WDdateMDY'];}
if (isset($SITE['tz'])) 		{$ourTZ = $SITE['tz'];}
if (isset($SITE['UV'])) 		{$haveUV = $SITE['UV'];}
if (isset($SITE['SOLAR'])) 		{$haveSolar = $SITE['SOLAR'];}
if (isset($SITE['WXtags'])) 	{$WXtags = $SITE['WXtags'];}
if (isset($SITE['fcstorg']))	{$fcstorg = $SITE['fcstorg'];}
if (isset($SITE['fcstscript']))	{$fcstscript = $SITE['fcstscript'];}
if (isset($SITE['UVscript'])) 	{$UVscript = $SITE['UVscript'];}
if (isset($SITE['DavisVP'])) 	{$DavisVP = $SITE['DavisVP'];}
if (isset($SITE['showSnow'])) 	{$showSnow = $SITE['showSnow'];}
if (isset($SITE['commaDecimal'])) 	{$commaDecimal = $SITE['commaDecimal'];}
if (isset($SITE['fcsticonsdir'])) 	{$fcstIconDir = $SITE['fcsticonsdir'];}
if (isset($SITE['fcsticonstype'])) 	{$condIconType = $SITE['fcsticonstype'];}
if (isset($_REQUEST['sce']) && ( strtolower($_REQUEST['sce']) == 'view' or
    strtolower($_REQUEST['sce']) == 'show') ) {
   //--self downloader --
   $filenameReal = __FILE__;
   $download_size = filesize($filenameReal);
   header('Pragma: public');
   header('Cache-Control: private');
   header('Cache-Control: no-cache, must-revalidate');
   header("Content-type: text/plain");
   header("Accept-Ranges: bytes");
   header("Content-Length: $download_size");
   header('Connection: close');
   readfile($filenameReal);
   exit;
// testing parameters// testing parameters
print "<!--  $ADBversion -->\n";
$DebugMode = false;
if (isset($_REQUEST['debug'])) {$DebugMode = strtolower($_REQUEST['debug']) == 'y'; }
if (isset($_REQUEST['UV'])) {$haveUV = $_REQUEST['UV'] <> '0';}
if (isset($_REQUEST['solar'])) {$haveSolar = $_REQUEST['solar'] <> '0';}
$displaySnow = false;  // assume normal rain display
if ($showSnow and strip_units($temperature) <= $showSnowTemp and 
  (isset($snowseasoncm) and isset($snowseasonin)) and
  ($snowseasoncm > 0.0 or $snowseasonin > 0.0) ) {
  $displaySnow = true;
if (isset($_REQUEST['snow'])) {$displaySnow = $_REQUEST['snow'] <> '0';}
$fcstby = isset($_REQUEST['fcstby'])?strtoupper($_REQUEST['fcstby']):'';
if ($fcstby == 'NWS') {
$SITE['fcstscript']		= 'advforecast2.php';  // USA-only NWS Forecast script
$SITE['fcstorg']		= 'NWS';    // set to 'NWS' for NOAA NWS
$fcstorg = $fcstby;
$fcstscript = $SITE['fcstscript'];
if ($fcstby == 'EC') {
$SITE['fcstscript']   = 'ec-forecast.php';    // Canada forecasts from Environment Canada
$SITE['fcstorg']		= 'EC';    // set to 'EC' for Environment Canada
$fcstorg = $fcstby;
$fcstscript = $SITE['fcstscript'];
if ($fcstby == 'WU') {
$SITE['fcstscript']	= 'WU-forecast.php';    // Non-USA, Non-Canada Wunderground Forecast Script
$SITE['fcstorg']		= 'WU';    // set to 'WU' for WeatherUnderground
$fcstorg = $fcstby;
$fcstscript = $SITE['fcstscript'];
if ($fcstby == 'WXSIM') {
$SITE['fcstscript']	= 'plaintext-parser.php';    // WXSIM forecast
$SITE['fcstorg']		= 'WXSIM';    // set to 'WXSIM' for WXSIM forecast
$fcstorg = $fcstby;
$fcstscript = $SITE['fcstscript'];
// end of special testing parms
print "<!-- fcstby='$fcstby' fcstscript='" . $SITE['fcstscript'] . "' fcstorg='". $SITE['fcstorg'] . "' -->\n"; 
// end of overrides from Settings.php
  include_once($WXtags);   // for the bulk of our data
  $doPrintNWS = false; // suppress printing of forecast by advforecast2.php
  $doPrint    = false; // suppress printing of ec-forecast.php
  $doPrintWU  = false; // suppress printing of WU-forecast.php
//  include_once($fcstscript); // for the forecast icon stuff
// copy forecast script variables to carterlake-style names if script used is not advforecast2.php
if ($fcstorg == 'WU') {
  $forecasticons = $WUforecasticons;
  $forecasttemp = $WUforecasttemp;
  $forecasttitles = $WUforecasttitles;
  $forecasttext = $WUforecasttext;
} else if ($fcstorg == 'EC') {
  foreach ($forecasticon as $i => $temp) {
  	$forecasticons[$i] = $forecasttitles[$i] . "<br />\n" .
	               $forecasticon[$i] . "\n" .
				   $forecasttext[$i] . "\n";
  $forecasttext = $forecastdetail;
  foreach ($forecastdays as $i => $temp) {
     $t = explode('<br />',$forecastdays[$i]);
     $forecasttitles[$i] = $t[0];
} else if ($fcstorg == 'WXSIM') {
  $forecasticons = $WXSIMicons;
  $forecasttemp  = $WXSIMtemp;
  $forecasttitles = $WXSIMday;
  $forecasttext = $WXSIMtext;
if (isset($SITE['WXSIM']) and $SITE['WXSIM'] == true and $fcstorg <> 'WXSIM') {
  $doPrint = false;
  include_once($SITE['WXSIMscript']);
print "<!-- Lang='$Lang' -->\n";
if ($Lang <> 'en') { // try changing windrose graphics test for the Calm graphic
  $tfile = preg_replace('|^'.$wrName.'|',$wrName.$Lang.'-',$wrCalm);
  print "<!-- checking for '" . $imagesDir.$tfile . "' -->\n";
  if (file_exists($imagesDir.$tfile)) {
    print "<!-- alternate windrose for '" . $Lang . "' loaded -->\n";
	print '<script type="text/javascript">';
	print "\n var wrCalm = \"$tfile\";\n";
	print " var wrName = \"$wrName$Lang-\";\n";
	if(!isset($SITE['langTransloaded'])) {
		if(count($forwardTrans)>0) {
		   print "// Language translation for conditions by ajaxWDwx.js\n";
		foreach ($forwardTrans as $key => $val) {
		   print "  langTransLookup['$key'] = '$val';\n";
		$SITE['langTransloaded'] = true;
	print "</script>\n";
	$wrCalm = $tfile;  // change the PHP dashboard settings too
	$wrName = $wrName . $Lang . '-';
	print "<!-- new wrName='$wrName', wrCalm='$wrCalm' -->\n";
  } 
// --- end of settings -------------------
if($SITE['WXsoftware'] == 'WD') {
// Sample from WD: $moonage = "Moon age: 10 days,10 hours,41 minutes,80%";	// current age of the moon (days since new moon)
// Sample from WD: $moonphase = "80%";	// Moon phase %
  $moonagedays = preg_replace('|^Moon age:\s+(\d+)\s.*$|is',"\$1",$moonage);
  if($moonphase == '') { // MAC version of WD is missing this value
    preg_match_all('|(\d+)|is',$moonage,$matches);
    $moonphase  = $matches[1][3];
	if(isset($matches[1][4])) {
	  $moonphase .= '.' . $matches[1][4]; // pick up decimal;
	  $moonphase = round($moonphase,0);
	$moonphase .= '%';
} else { // perform non-WD moon stuff
	$mooninfo = cGetMoonInfo();  /* Note:  getMoonInfo() is located in common.php */
/* returns $mooninfo of:
    [age] => 9 days, 11 hours, 57 minutes
    [ill] => 65
    [pic] => 8
    [phase] => Waxing Gibbous
    [NM] => 1294131882
    [NMGMT] => Tue, 04-Jan-2011 09:04 GMT
    [NMWD] => 09:04 GMT 04 January 2011
    [Q1] => 1294831983
    [Q1GMT] => Wed, 12-Jan-2011 11:33 GMT
    [Q1WD] => 11:33 GMT 12 January 2011
    [FM] => 1295472210
    [FMGMT] => Wed, 19-Jan-2011 21:23 GMT
    [FMWD] => 21:23 GMT 19 January 2011
    [Q3] => 1298590089
    [Q3GMT] => Thu, 24-Feb-2011 23:28 GMT
    [Q3WD] => 23:28 GMT 24 February 2011
    [Q4] => 1296700310
    [Q4GMT] => Thu, 03-Feb-2011 02:31 GMT
    [Q4WD] => 02:31 GMT 03 February 2011
    [FM2] => 1298018189
    [FM2GMT] => Fri, 18-Feb-2011 08:36 GMT
    [FM2WD] => 08:36 GMT 18 February 2011
	print "<!-- cGetMoonInfo returns\n".print_r($mooninfo,true)." -->\n";
	if(!isset($moonphase)) {$moonphase = $mooninfo->ill.'%'; }
	if(!isset($newmoon))   {$newmoon   = $mooninfo->NMWD;    }
	if(!isset($nextnewmoon)) {$nextnewmoon = $mooninfo->Q4WD; } /*check this! */
	if(!isset($firstquarter)) {$firstquarter = $mooninfo->Q1WD; }
	if(!isset($lastquarter)) {$lastquarter = $mooninfo->Q3WD; }
	if(!isset($fullmoon))    {$fullmoon = $mooninfo->FMWD; }
	if(!isset($moonphasename)) {$moonphasename = $mooninfo->phase;}
	if(!isset($moonagedays))  {$moonagedays = $mooninfo->pic; }
	if(!isset($moonage))      {$moonage = 'Moon age: '.$mooninfo->age.','.$mooninfo->ill.'%'; }
    if(file_exists("get-USNO-sunmoon.php")) { 
      include_once("get-USNO-sunmoon.php");
	  $USNOdata = getUSNOsunmoon();
   }
   if(isset($USNOdata['sunrise']))                 {$sunrise =     $USNOdata['sunrise']; }  
   if(isset($USNOdata['sunrisedate']))             {$sunrisedate = $USNOdata['sunrisedate']; }  
   if(isset($USNOdata['sunset']))                  {$sunset =      $USNOdata['sunset']; }  
   if(isset($USNOdata['sunsetdate']))              {$sunsetdate =  $USNOdata['sunsetdate']; }  
   if(isset($USNOdata['moonrise']))                {$moonrise =    $USNOdata['moonrise']; }  
   if(isset($USNOdata['moonrisedate']))            {$moonrisedate= $USNOdata['moonrisedate']; }  
   if(isset($USNOdata['moonset']))                 {$moonset =     $USNOdata['moonset']; }  
   if(isset($USNOdata['moonsetdate']))             {$moonsetdate = $USNOdata['moonsetdate']; }  
   if(isset($USNOdata['moonphase']))               {$moonphasename = $USNOdata['moonphase']; }  
   if(isset($USNOdata['illumination']))            {$moonphase = $USNOdata['illumination']; }  
   if(isset($USNOdata['hoursofpossibledaylight'])) {$hoursofpossibledaylight = $USNOdata['hoursofpossibledaylight'];} 
# Set timezone in PHP5/PHP4 manner
  if (!function_exists('date_default_timezone_set')) {
	putenv("TZ=" . $ourTZ);
#	$Status .= "<!-- using putenv(\"TZ=$ourTZ\") -->\n";
    } else {
	date_default_timezone_set("$ourTZ");
#	$Status .= "<!-- using date_default_timezone_set(\"$ourTZ\") -->\n";
   }
  $UpdateDate = date($timeFormat,strtotime("$date_year-$date_month-$date_day  $time_hour:$time_minute:00"));
//  $UpdateDate = "$date_year-$date_month-$date_day  $time_hour:$time_minute:00";
$monthname = langtransstr($monthname);
$dayname = langtransstr(substr($dayname,0,3));
// Snow setup
if (preg_match('|in|i',$uomSnow) and isset($snowseasonin)) { // use USA measurements
  $snowseason = $snowseasonin;	// Snow for season you have entered under input daily weather, inches
  $snowmonth = $snowmonthin;	// Snow for month you have entered under input daily weather, inches
  $snowtoday = $snowtodayin;	// Snow for today you have entered under input daily weather, inches
  $snowyesterday = $snowyesterday;	// Yesterdays' snow
  $snownow = $snownowin;	// Current snow depth, inches.
} elseif (isset($snowseasoncm)) { // use Metric measurements
  $snowseason = $snowseasoncm;	// Snow for season you have entered under input daily weather, cm
  $snowmonth = $snowmonthcm;	// Snow for month you have entered under input daily weather, cm
  $snowtoday = $snowtodaycm;	// Snow for today you have entered under input daily weather, cm
  $snowyesterday = $snowyesterday;	// Yesterdays' snow
  $snownow = $snownowcm;	// Current snow depth, cm.
$decimalComma = (strpos($temperature,',') !==false)?true:false; // using comma for decimal point?
// --- end of initialization code ---------
<!-- start of ajax-dashboard.php -->
<div class="ajaxDashboard" style="width: auto;">
      <table width="620" border="0" cellpadding="2" cellspacing="1" style="border:solid; border-color: #CCCCCC;width:750px;">
        <tr align="center">
          <td class="data1" colspan="4" style="text-align: center">
		    <span class="ajax" id="ajaxindicator"><?php langtrans('Updated'); ?>:</span>&nbsp;@ 
		    <span class="ajax" id="ajaxdate">
		    <?php echo fixup_date($date) . ' ' . fixup_time($time);
			  if(isset($timeofnextupdate)) { echo " - " . langtransstr('next update at') . " " . fixup_time($timeofnextupdate);} ?>
		    </span>&nbsp;<span class="ajax" id="ajaxtime"></span>
            <?php if(isset($SITE['ajaxScript'])) { ?>
            <script type="text/javascript">
<!--
document.write('<b> - <?php langtrans('updated'); ?> <span id="ajaxcounter"></span>&nbsp;<?php langtrans('sec ago'); ?></b>');
//-->
            </script>
            <?php } // there is a ajaxScript ?>
          </td>
        </tr>
        <tr align="center">
          <td class="datahead"><?php langtrans('Summary'); ?> / <?php langtrans('Temperature'); ?></td>
          <td class="datahead"><?php langtrans('Wind'); ?></td>
	  <?php if($displaySnow) { ?>
          <td class="datahead"><?php langtrans('Snow'); ?></td>
	  <?php } else { ?>
          <td class="datahead"><?php langtrans('Rain');
		  if(isset($snownow) and $snownow > 0) { echo ' / '.langtransstr('Snow Depth'); } ?></td>
	  <?php } // end displaySnow ?>
         <td class="datahead"><?php langtrans('Outlook'); ?></td>
        </tr>
        <tr align="center">
          <td valign="top" rowspan="5">
		    <table width="180" border="0" cellpadding="2" cellspacing="0">
			  <tr>
				<td align="center" valign="top" class="data1" style="text-align: center;border: none">
				<span class="ajax" id="ajaxconditionicon2">
				  <img src="<?php echo $condIconDir . newIcon($iconnumber) ?>"  
					alt="<?php $t1 = fixupCondition($Currentsolardescription);
						  echo $t1; ?>" 
					title="<?php echo $t1; ?>" height="58" width="55" />
				</span> 
				</td>
				<td class="data1" style="text-align: center;border: none"><span class="ajax" id="ajaxcurrentcond">
				  <?php echo $t1; ?> </span> 
				</td>
			  </tr>
              <tr align="center">
                <td align="center" valign="top" class="data1" style="text-align: center;border: none">
				  <span class="ajax" id="ajaxthermometer">
                  <?php $tstr = langtransstr("Currently") . ": $temperature, "
				   . langtransstr('Max') . ": $maxtemp, ".langtransstr('Min').": $mintemp"; ?>
                  <img src="thermometer.php?t=<?php echo strip_units($temperature);
				  if(isset($_REQUEST['wx'])) {echo "&amp;wx=".$_REQUEST['wx']; } ?>" alt="<?php echo $tstr; ?>"
		           title="<?php echo $tstr; ?>" height="170" width="54" /> </span> 
				</td>
                <td class="data1" style="text-align: center;border: none" valign="middle">
				  <span class="ajax" id="ajaxtemp" style="font-size:20px">
				    <?php echo strip_units($temperature) . $uomTemp; ?> 
				  </span>
				  <br/>
				  <span class="ajax" id="ajaxtemparrow"><?php 
				     if(isset($tempchangehour)) {
						 if($commaDecimal) {
							$Tnow = preg_replace('|,|','.',strip_units($temperature));
							$TLast = preg_replace('|,|','.',strip_units($tempchangehour)); 
						 } else {
							$Tnow = strip_units($temperature);
							$TLast = strip_units($tempchangehour); 
						 }
					 echo gen_difference($Tnow, $Tnow - $TLast, '',
			         langtransstr('Warmer').' %s'.$uomTemp.' '. langtransstr('than last hour') .'.',
			         langtransstr('Colder').' %s'.$uomTemp.' '. langtransstr('than last hour') .'.');
					 } // isset tempchangehour ?></span>
				  <br/><br/>
                  <span class="ajax" id="ajaxheatcolorword">
                    <?php  langtrans($heatcolourword); ?></span>
                  <br/><br/>
                  <?php if(isset($feelslike)) { ?>
                  <?php langtrans('Feels like'); ?>: <span class="ajax" id="ajaxfeelslike">
				    <?php echo $feelslike . $uomTemp; ?> 
					</span>
				  <br/><br/>
                  <?php } // $feelslike ?>
                  <?php if(isset($temp24hoursago)) { ?>
                  <?php langtrans('24-hr difference'); ?>
				  <br />
                  <?php 
					if($commaDecimal) {
						$Tnow = preg_replace('|,|','.',strip_units($temperature));
						$TLast = preg_replace('|,|','.',strip_units($temp24hoursago)); 
					 } else {
						$Tnow = strip_units($temperature);
						$TLast = strip_units($temp24hoursago); 
					 }
					echo gen_difference($Tnow, $TLast, $uomTemp,
					langtransstr('Warmer'). ' %s'.$uomTemp.' '.langtransstr('than yesterday at this time').'.',
					langtransstr('Colder'). ' %s'.$uomTemp.' '.langtransstr('than yesterday at this time').'.'); ?>
                  <?php } // $temp24hoursago ?>
                </td>
              </tr>
              <?php if(isset($mintemp) and $mintemp <> '-') { ?>
              <tr>
                <td colspan="2" align="center">
				  <table width="100%"  class="data1" style="font-size: 9px;border: none">
                    <tr>
                      <th>&nbsp;</th>
                      <th style="text-align: center;"><?php langtrans('Today'); ?></th>
                      <?php if(isset($maxtempyest) or isset($mintempyest)) { ?>
                      <th style="text-align: center;"><?php langtrans('Yesterday'); ?></th>
                      <?php } ?>
                    </tr>
                    <tr>
                      <td style="text-align: right;"><strong><?php langtrans('High:'); ?></strong></td>
                      <td style="text-align: center;">
					    <span class="ajax" id="ajaxtempmax">
                        <?php echo strip_units($maxtemp) . $uomTemp; ?>
                        </span><br />
                        <?php echo fixup_time($maxtempt); ?>
					  </td>
                      <?php if(isset($maxtempyest)) { ?>
                      <td style="text-align: center;"><?php 
			            echo strip_units($maxtempyest) . $uomTemp; ?>
                        <br />
                        <?php echo fixup_time($maxtempyestt); ?>
					  </td>
                      <?php } ?>
                    </tr>
                    <tr>
                      <td style="text-align: right;"><strong><?php langtrans('Low:'); ?></strong></td>
                      <td style="text-align: center;">
					    <span class="ajax" id="ajaxtempmin">
                        <?php 
			               echo strip_units($mintemp) . $uomTemp; ?>
                        </span><br />
                        <?php echo fixup_time($mintempt); ?>
					  </td>
                      <?php if(isset($mintempyest)) { ?>
                      <td style="text-align: center;"><?php 
			               echo strip_units($mintempyest) . $uomTemp; ?>
                        <br />
                        <?php echo fixup_time($mintempyestt); ?>
					  </td>
                      <?php } ?>
                    </tr>
                  </table>
				</td>
              </tr>
              <?php } // end for display min/max table ?>
            </table>
		  </td>
          <td valign="middle">
		    <table width="180" border="0" cellpadding="2" cellspacing="0">
              <tr>
                <td class="data1" valign="middle" align="center" style="border: none">
				  <img src="<?php echo $imagesDir; ?>spacer.gif" width="1" 
				    height="<?php echo $wrHeight; ?>" alt=" " align="left"/>
				  <span class="ajax" id="ajaxwindiconwr">
				  <?php $wr = $imagesDir . $wrName . $dirlabel . $wrType; // normal wind rose
				        $wrtext = langtransstr('Wind from') ." " . langtransstr($dirlabel);
						if ( (strip_units($avgspd) + strip_units($gstspd) < 0.1 ) and
						     ($wrCalm <> '') ) { // use calm instead
						  $wr = $imagesDir . $wrCalm;
						  $wrtext = $bftspeedtext;
						 }
						
				  ?>
				    <img src="<?php echo $wr; ?>" 
					height="<?php echo $wrHeight; ?>" width="<?php echo $wrWidth; ?>" 
					title="<?php echo $wrtext; ?>" 
					alt="<?php echo $wrtext; ?>"  style="text-align:center" />
				   </span> 
				 </td>
                <td valign="middle" class="data1" style="text-align: center; border: none;" >
					<span class="ajax" id="ajaxwinddir"><?php langtrans($dirlabel); ?></span><br/> 
					<span class="ajax" id="ajaxwind">
					 <?php echo strip_units($avgspd); ?>
					</span><br/>
					<span class="meas"><?php langtrans('Gust'); ?>:<br/></span> 
					<span class="ajax" id="ajaxgust">
					  <?php echo strip_units($gstspd). " $uomWind"; ?>
					</span> 
				</td>
              </tr>
               <tr>
                <td colspan="2" class="data1" align="center" style="text-align:center">
				  <span class="ajax" id="ajaxbeaufortnum"><?php echo strip_units($beaufortnum); ?></span> Bft - <i>
				  <span class="ajax" id="ajaxbeaufort"><?php langtrans($bftspeedtext); ?></span></i>
				</td>
              </tr>
             <?php if(isset($maxgst) and isset($maxgstt)) { ?>
             <tr>
                <td colspan="2" class="data1" align="center">
				  <?php langtrans('Today'); ?>: 
				  <span class="ajax" id="ajaxwindmaxgust"><?php echo strip_units($maxgst). " $uomWind"; ?></span> 
				  <span class="ajax" id="ajaxwindmaxgusttime"><?php echo fixup_time($maxgstt); ?></span>
				</td>
              </tr>
              <?php } // end maxgust/maxgustt display ?>
              <?php if(isset($mrecordwindgust)) { ?>
              <tr>
                <td colspan="2" class="data1" align="center">
				  <?php langtrans('Gust Month'); ?>:
                  <br>
				  <?php echo $mrecordwindgust. " $uomWind"; ?> 
                  <?php if(isset($mrecordhighgustday)) { ?>
				  <?php echo $monthname . " " . $mrecordhighgustday; ?> 
                  <?php } // $mrecordhighgustday ?>
				</td>
              </tr>
              <?php } // $mrecordwindgust ?>
            </table>
		  </td>
          <td valign="middle"><table width="166" border="0" cellpadding="2" cellspacing="0">
    <?php if ($displaySnow) { // display Snow instead of Rain ?>
              <tr>
                <td class="data1"><?php langtrans('Snow Today'); ?>:</td>
                <td style="text-align: right;" class="data1">
                    <?php echo strip_units($snowtoday) . $uomSnow; ?>
				</td>
              </tr>
              <tr>
                <td class="data1" nowrap="nowrap"><?php langtrans('Snow Yesterday') ?>: </td>
                <td style="text-align: right;" class="data1">
                  <?php echo strip_units($snowyesterday) . $uomSnow; ?>
				</td>
              </tr>
             <tr>
                <td class="data1"><?php langtrans('This Month'); ?>:</td>
                <td style="text-align: right;" class="data1">
                  <?php echo strip_units($snowmonth) . $uomSnow; ?>
				</td>
              </tr>
              <tr>
                <td class="data1" nowrap="nowrap"><?php langtrans('Winter Total'); ?>:</td>
                <td style="text-align: right;" class="data1">
                    <?php echo strip_units($snowseason) . $uomSnow; ?>
				</td>
              </tr>
              <tr>
                <td class="data1" nowrap="nowrap"><?php langtrans('Snow Depth'); ?>:</td>
                <td style="text-align: right;" class="data1">
                    <?php echo strip_units($snownow) . $uomSnow; ?>
				</td>
              </tr>
              <tr>
                <td class="data1" colspan="2">
				<?php 
				   print "$snowdaysthismonth " ;
				   print ($snowdaysthismonth <> 1)?
					langtransstr('snow days in'):
					langtransstr('snow day in');
				   print " " . $monthname . ".";
				 ?>
                </td>
              </tr>
	<?php } else { // display Rain ?>
              <tr>
                <td class="data1"><?php langtrans('Rain Today'); ?>:</td>
                <td style="text-align: right;" class="data1">
				  <span class="ajax" id="ajaxrain">
                    <?php echo strip_units($dayrn) . $uomRain; ?>
                  </span>
				</td>
              </tr>
              <tr>
                <td class="data1"><?php langtrans('Rain Rate'); ?> (<?php echo $uomPerHour; ?>):</td>
                <td style="text-align: right;" class="data1">
				  <span class="ajax" id="ajaxrainratehr">
                  <?php echo strip_units($currentrainratehr) . $uomRain; ?>
                  </span>
				</td>
              </tr>
              <?php if(isset($yesterdayrain)) { ?>
              <tr>
                <td class="data1" nowrap="nowrap"><?php langtrans('Rain Yesterday') ?>: </td>
                <td style="text-align: right;" class="data1">
				  <span class="ajax" id="ajaxrainydy">
                  <?php echo strip_units($yesterdayrain) . $uomRain; ?>
                  </span>
				</td>
              </tr>
              <?php } // end $yesterdayrain ?>
			  <?php if (isset($vpstormrain)) { // Storm Rain is a Davis VP thing ?>
               <tr>
                <td class="data1" nowrap="nowrap"><?php langtrans('Storm Rain'); ?>: </td>
                <td style="text-align: right;" class="data1">
                  <?php echo strip_units($vpstormrain).$uomRain; ?>
				</td>
              </tr>
			  <?php } // end of DavisVP specific variable ?>
             <tr>
                <td class="data1"><?php langtrans('This Month'); ?>:</td>
                <td style="text-align: right;" class="data1">
				  <span class="ajax" id="ajaxrainmo">
                  <?php echo strip_units($monthrn) . $uomRain; ?>
                  </span>
				</td>
              </tr>
              <tr>
                <td class="data1" nowrap="nowrap"><?php langtrans('Season Total'); ?>:</td>
                <td style="text-align: right;" class="data1">
				  <span class="ajax" id="ajaxrainyr">
                    <?php echo strip_units($yearrn) . $uomRain; ?>
                  </span>
				</td>
              </tr>
			  <?php if(isset($snownow) and $snownow > 0) { // show depth of snow if needed ?>
              <tr>
                <td class="data1" nowrap="nowrap"><?php langtrans('Snow Depth'); ?>:</td>
                <td style="text-align: right;" class="data1">
                    <?php echo strip_units($snownow) . $uomSnow; ?>
				</td>
              </tr>
			  <?php } // end show-depth-of-snow if needed ?>
              <?php if(isset($dayswithnorain) or isset($dayswithrain)) { // Unique WD value ?>
              <tr>
                <td class="data1" colspan="2">
				  <?php 
                    if (isset($dayswithrain) and $dayswithrain > 0) { 
					   print "$dayswithrain " ;
					   print ($dayswithrain > 1)?
					    langtransstr('rain days in'):
					    langtransstr('rain day in');
					   print " " . $monthname . ".";
					  } elseif (isset($dayswithnorain)) {
					   
					   if(strpos($temperature,',') !== false) {
						   $t = preg_replace('|,|','.',$dayrn);
					   } else {
						   $t = $dayrn;
					   }
					   if($t > 0.00) {$dayswithnorain = 0;} // raining today so 0 days since last rain
					   
					   print "$dayswithnorain "; 
					   print ($dayswithnorain > 1)?
					   langtransstr('days since last rain'):
					   langtransstr('day since last rain');
					   print  "."; 
					  } ?>
                </td>
              </tr>
              <?php } // end dayswithnorain/dayswithrain display for WD ?>
	 <?php } // end snow or rain display ?>
            </table>
		  </td>
          <td align="center" valign="middle">
		    <table border="0" cellpadding="2" cellspacing="0">
              <tr>
                <td class="data1" align="center" style="font-size: 8pt; border:none;text-align: center">
				  
				  <?php print $forecasticons[1]; ?>
                  
                  -- N.D. --
			   </td>
              </tr>
            </table>
		  </td>
        </tr>
        <tr align="center" valign="top">
          <td class="datahead"><?php langtrans('Humidity'); ?> &amp; <?php langtrans('Barometer'); ?></td>
          <td class="datahead"><?php langtrans('Almanac'); ?></td>
          <td class="datahead"><?php langtrans('Moon'); ?></td>
        </tr>
        <tr align="center" valign="middle">
          <td valign="middle"><table width="180" border="0" cellpadding="2" cellspacing="0">
              <tr>
                <td class="data1"><?php langtrans('Humidity'); ?>:</td>
                <td style="text-align: center;" class="data1">
				  <span class="ajax" id="ajaxhumidity">
                    <?php echo $humidity; ?>
                  </span>%
                  <?php
				   if(isset($humchangelasthour)) {
					 $t1 = preg_replace('|\s|s','',$humchangelasthour);
					 if($commaDecimal) {
						$Tnow = preg_replace('|,|','.',strip_units($humidity));
						$TLast = preg_replace('|,|','.',strip_units($t1)); 
					 } else {
						$Tnow = strip_units($humidity);
						$TLast = strip_units($t1); 
					 }
					 
					 echo gen_difference($Tnow, $Tnow-$TLast, '',
					 langtransstr('Increased').' %s%% '.langtransstr('since last hour').'.',
					 langtransstr('Decreased').' %s%% '.langtransstr('since last hour').'.');
				   } ?>
				</td>
              </tr>
              <tr>
                <td class="data1"><?php langtrans('Dew Point'); ?>: </td>
                <td style="text-align: center;" class="data1">
				  <span class="ajax" id="ajaxdew">
                  <?php $t1 = strip_units($dewpt); echo $t1 . $uomTemp;  ?>
                  </span>
                  <?php 
				  if(isset($dewchangelasthour)) {
					if($commaDecimal) {
						$Tnow = preg_replace('|,|','.',strip_units($dewpt));
						$TLast = preg_replace('|,|','.',strip_units($dewchangelasthour)); 
					 } else {
						$Tnow = strip_units($dewpt);
						$TLast = strip_units($dewchangelasthour); 
					 }
					 echo gen_difference($Tnow, $Tnow-$TLast, '',
					 langtransstr('Increased').' %s'.$uomTemp.' '.langtransstr('since last hour').'.',
					 langtransstr('Decreased').' %s'.$uomTemp.' '.langtransstr('since last hour').'.'); 
				  } ?>
                </td>
              </tr>
              <tr>
                <td class="data1"><?php langtrans('Barometer'); ?>:</td>
                <td style="text-align: center;" class="data1">
				  <span class="ajax" id="ajaxbaro">
                    <?php $t1 = strip_units($baro); echo $t1 . $uomBaro; ?>
                  </span>
				  <span class="ajax" id="ajaxbaroarrow">
                  <?php 
				  if(isset($trend)) {
					if($commaDecimal) {
						$Tnow = preg_replace('|,|','.',strip_units($baro));
						$TLast = preg_replace('|,|','.',strip_units($trend)); 
					 } else {
						$Tnow = strip_units($baro);
						$TLast = strip_units($trend); 
					 }
					 $decPts = 1;
					 if(preg_match('|in|i',$uomBaro)) {$decPts = 2; }
					 echo gen_difference($Tnow, $Tnow-$TLast, '',
					 langtransstr('Rising') . ' %s '.$uomBaro.$uomPerHour,
					 langtransstr('Falling') . ' %s '.$uomBaro.$uomPerHour, $decPts); 
				  } ?>
                   </span>
				 </td>
              </tr>
              <tr>
                <td class="data1"><?php langtrans('Baro Trend'); ?>: </td>
                <td style="text-align: center;" class="data1">
				  <span class="ajax" id="ajaxbarotrendtext">
                  <?php  langtrans($pressuretrendname); ?>
                  </span>
				</td>
              </tr>
            </table>
		  </td>
          <td align="center" valign="middle">
		    <table width="166" border="0" cellpadding="2" cellspacing="0">
              <tr>
                <td class="data1"><?php langtrans('Sunrise'); ?>:</td>
                <td style="text-align: right;" class="data1">
				  <?php echo fixup_time($sunrise); ?>
			    </td>
              </tr>
              <tr>
                <td class="data1"><?php langtrans('Sunset'); ?>:</td>
                <td style="text-align: right;" class="data1">
				  <?php echo fixup_time($sunset); ?>
				</td>
              </tr>
              <?php if(isset($moonrise) and isset($moonset) and 
			    (strtotime("$moonset") < strtotime("$moonrise")) ) { 
				echo "<!-- moonset='$moonset' before moonrise='$moonrise' today -->\n"; ?>
              <tr>
                <td class="data1"><?php langtrans('Moonset'); ?>:</td>
                <td style="text-align: right;" class="data1">
				  <?php echo fixup_time($moonset); ?>
				</td>
              </tr>
               <tr>
                <td class="data1"><?php langtrans('Moonrise'); ?>:</td>
                <td style="text-align: right;" class="data1">
				  <?php echo fixup_time($moonrise); ?>
				</td>
              </tr>
              <?php } elseif (isset($moonrise) and isset($moonset)) { 
			  echo "<!--   moonrise='$moonrise' before moonset='$moonset' today -->\n";?>
              <tr>
                <td class="data1"><?php langtrans('Moonrise'); ?>:</td>
                <td style="text-align: right;" class="data1">
				  <?php echo fixup_time($moonrise); ?>
				</td>
              </tr>
              <tr>
                <td class="data1"><?php langtrans('Moonset'); ?>:</td>
                <td style="text-align: right;" class="data1">
				  <?php echo fixup_time($moonset); ?>
				</td>
              </tr>
              <?php } else { // end moonset > moonrise time 
			    echo "<!-- no moon rise/set data -->\n"; ?>
               <tr>
                <td class="data1"><?php langtrans('Moonrise'); ?>:</td>
                <td style="text-align: right;" class="data1">
				  <?php langtrans('N/A'); ?>
				</td>
              </tr>
              <tr>
                <td class="data1"><?php langtrans('Moonset'); ?>:</td>
                <td style="text-align: right;" class="data1">
				  <?php langtrans('N/A'); ?>
				</td>
              </tr>
             <?php } // end moon fixup ?>
           </table>
		  </td>
          <td rowspan="3" valign="middle" align="center">
		    <table border="0" cellpadding="4" cellspacing="0">
              <tr>
                <td class="data1" style="text-align: center; border: none;">
				  <?php langtrans(moonphase($moonage)); ?>
				</td>
              </tr>
              <tr>
                <td style="text-align: center;"><img src="<?php 
				  echo $imagesDir . 'moon' . $moonagedays; ?>.gif" 
				  alt="<?php $t1 =  moonphase($moonage) . ", Moon at $moonagedays days in cycle";
				  echo $t1; ?>" 
				  title="<?php echo $t1; ?>" 
				  width="48" height="48" style="border: 0;" />
			    </td>
              </tr>
              <tr>
                <td class="data1" style="text-align: center; border: none;" >
				  <?php  echo $moonphase ?>
                    <br />
                  <?php langtrans('Illuminated'); ?>
				</td>
              </tr>
            </table>
		  </td>
        </tr>
<?php 
// construct 4 flavors of the UV/ Solar display based on status of $haveUV and $haveSolar
// $haveUV && $haveSolar :  UV on left, Solar on Right
// $haveUV && !$haveSolar:  UV on left, UV Forecast on right
// !$haveUV && $haveSolar:  UV forecast on left, Solar on right
// !$haveUV && !$haveSolar: UV Forecast on left, UV Forecast+1 on right
$leftHead = langtransstr('UV Index');
if (!$haveUV) { $leftHead = langtransstr('UV Index Forecast'); }
$rightHead = langtransstr('Solar Radiation');
if (!$haveSolar) {$rightHead = langtransstr('UV Index Forecast'); }
$UVfcstDate = array_fill(0,9,'');   // initialize the return arrays
$UVfcstUVI  = array_fill(0,9,'n/a');
if (isset($UVscript)) { // load up the UV forecast script
  @include_once($UVscript);
$UVptr = 0;  // index for which day to use
        <tr>
          <td class="datahead" style="text-align:center"><?php echo $leftHead; ?></td>
          <td class="datahead" style="text-align:center"><?php echo $rightHead; ?></td>
        </tr>
        <tr>
          <td align="center">
		    <table width="180" border="0" cellpadding="2" cellspacing="0">
<?php
  if ($haveUV) {  //  Have a UV sensor .. show realtime data
              <tr>
                <td class="data1" nowrap="nowrap" style="text-align: center; ">&nbsp;&nbsp;
				  <span class="ajax" id="ajaxuv">
				    <?php echo $VPuv; ?>
				  </span>&nbsp;&nbsp;
				  <span class="ajax" id="ajaxuvword">
				    <?php echo get_UVrange($VPuv); ?>
				  </span>
				</td>
              </tr>
              <?php if(isset($highuv) and isset($highuvtime)) { ?>
              <tr>
                <td class="data1" nowrap="nowrap" style="text-align:center; font-size: 8pt;">
				  <?php langtrans('High:'); ?> <?php echo $highuv; ?> @&nbsp;<?php echo fixup_time($highuvtime); ?> 
				</td>
              </tr>
              <?php } // have high UV and time ?>
<?php } else {  //  don't have UV sensor .. show UV forecast instead ?>
              <tr>
                <td class="data1" nowrap="nowrap" style="text-align: center; ">
				    <?php echo $UVfcstDate[$UVptr]; ?>
				</td>
              </tr>
              <tr>
                <td class="data1" nowrap="nowrap" style="text-align:center; font-size: 8pt;">
				    <b><a href="<?php echo htmlspecialchars($UV_URL); ?>" title="<?php echo strip_tags($requiredNote); ?>"><?php echo $UVfcstUVI[$UVptr]; ?></a></b>
				  &nbsp;&nbsp;
				    <?php echo get_UVrange($UVfcstUVI[$UVptr]); ?>
				</td>
              </tr>
			  <?php $UVptr++; // increment counter in case they have no solar either ?>
<?php } // end $haveUV  ---------------------------------------- ?>
            </table>
		  </td>
          <td align="center">
		    <table width="166" border="0" cellpadding="2" cellspacing="0">
<?php if ($haveSolar) {  // Have a Solar Sensor  show current values ?>
              <tr>
                <td class="data1" style="text-align: center;" nowrap="nowrap" >
				  <span class="ajax" id="ajaxsolar">
				    <?php echo $VPsolar; ?></span> W/m<sup>2</sup>
                    <?php if(isset($currentsolarpercent)) { // display only if data available ?> 
					 (<span class="ajax" id="ajaxsolarpct"><?php echo strip_units($currentsolarpercent); ?>
                     </span>%)
                     <?php } // end of $currentsolarpercent ?>
				</td>
              </tr>
              <?php if(isset($highsolar) and isset($highsolartime)) { ?>
              <tr>
                <td style="text-align: center; font-size: 8pt;" class="data1">
				  <?php langtrans('High:'); ?>
                  <?php echo $highsolar; ?>
                  @&nbsp;
                  <?php echo fixup_time($highsolartime); ?>
				</td>
              </tr>
              <?php } // have high solar amt+time ?>
<?php } else { // don't have solar  show UV forecast instead ?>
              <tr>
                <td class="data1" nowrap="nowrap" style="text-align: center; ">
				    <?php echo $UVfcstDate[$UVptr]; ?>
				</td>
              </tr>
              <tr>
                <td class="data1" nowrap="nowrap" style="text-align:center; font-size: 8pt;">
				    <b><a href="<?php echo htmlspecialchars($UV_URL); ?>" title="<?php echo strip_tags($requiredNote); ?>"><?php echo $UVfcstUVI[$UVptr]; ?></a></b>
				  &nbsp;&nbsp;
				    <?php echo get_UVrange($UVfcstUVI[$UVptr]); ?>
				</td>
              </tr>
<?php } // end $haveSolar  ?>
            </table>
		  </td>
        </tr>
     </table>
     
     
<!--
/* modificato MASSI inizio
inizio tabella
contenente 2 tabelle nidificate (eliminate nidificate)
dove in origine erano previste le previsioni
>>>> ho eliminato il contenuto originale
>>>> ma mantenuto la struttura e le propiet
 originali
>>>> povare ad inserire nelle varie celle
>>>> tipo il counter
>>>> o la webcam
>>>> o quello che vuoi
-----------------------------------------------------------------------------------------------------------------------------------------
<!-- -------------------------------------------------------------------------------------------------------------------- -->
<!-- >>>> INIZIO TABELLA PREVISIONI -->
<table width="800" border="0" cellpadding="3" cellspacing="3">
    <tr>
      <td colspan="3" style="text-align: center">
<!--	
		--- 111--- prima riga tabella contenitore
        inserito come segnaposto
        
		(formato - class=datahead = tx bianco e sfondo)
		(formato - class=data1 = tx bianco, bordo sotto, no sfondo)
		(formato - senza class = eredita celeste xero, no bordo sotto, no sfondo)
      </td>
    </tr>
   <tr>
      <td colspan="3" style="text-align: center">
<!--	
        inserito come segnaposto
        
		(formato - class=datahead = tx bianco e sfondo)
		(formato - class=data1 = tx bianco, bordo sotto, no sfondo)
		(formato - senza class = eredita celeste xero, no bordo sotto, no sfondo)
      </td>
    </tr>
   <tr>
      <td colspan="3" style="text-align: center">
<!--	
        inserito come segnaposto
        
		(formato - class=datahead = tx bianco e sfondo)
		(formato - class=data1 = tx bianco, bordo sotto, no sfondo)
		(formato - senza class = eredita celeste xero, no bordo sotto, no sfondo)
      </td>
    </tr>
<!--inizio cella divisa in 3 - tramite propiet
 'colspan="3"'-->
<!-- 
VUOTA COME BASE
	<tr>
      <td style="text-align: center">111</td>
      <td style="text-align: center">222</td>
      <td style="text-align: center">333</td>
    </tr>
VUOTA COME BASE
<!--fine cella divisa in 3 - tramite propiet
 'colspan="3"'-->
<!--inizio cella divisa in 3 - tramite propiet
 'colspan="3"'-->
	<tr>
      <td valign="top" style="text-align: center">
		Webcam in diretta da Xerocambos
		<br>
		<p align=center><a href="http://www.xerocamboscreta.com/Webcam.Kavalo1.Xero.it.php" target="_blank">
		<IMG SRC="http://jm2682.myfoscam.org:88//cgi-bin/CGIProxy.fcgi?cmd=snapPicture2&usr=visitatore&pwd=kavalo1&cnt=" width="200"></a></p>
      </td>
      
      <td valign="top" style="text-align: center">
		Immagine dal satellite sulla Grecia
		<br>
		<p align=center><a href="wxradar.php" target="_blank"><IMG SRC="http://api.sat24.com/animated/GR/visual/1/GTB%20Standard%20Time/3023890" width="200"></a></p>
      </td>
      
      <td valign="top" style="text-align: center">
		La giornata di ieri in 60 secondi
		<br>
        
<!-- INIZIO PROVA_01 SLIDE ------------------------------------------------------------------------- -->        
<head>
<style fprolloverstyle="">A:hover {color: #AAFFFF; font-family: Comic Sans MS;}
</style>
<link rel="stylesheet" href="https://code.jquery.com/ui/1.12.1/themes/base/jquery-ui.css">
<style>
#custom-handle {
    width: 3em;
    height: 1.6em;
    top: 50%;
    margin-top: -.8em;
    text-align: center;
    line-height: 1.6em;
    border-radius: 30px;
    box-shadow: 0px 0px 10px #0000FF;
.ui-widget-content {
    background: #AAFFFF
</style>
<?php $data = file_get_contents("../Kavalo1/FI9900P_00626E65B357/snap/slides.txt");
$filelist = unserialize($data);
$json = json_encode($filelist);
</head>
		<p align=center><a href="http://www.xerocamboscreta.com/slide.kavalo1.it.php" target="_blank">
		<img id="image" src="../Kavalo1/FI9900P_00626E65B357/snap/<?php echo $filelist[0];?>" width="200" alt="timelapse kavalo1"></a></p>
                
	<div id="slider"> 
		<div id="custom-handle" class="ui-slider-handle"></div>
	</div>
<script src="https://code.jquery.com/jquery-1.12.4.js"></script>
<script src="https://code.jquery.com/ui/1.12.1/jquery-ui.js"></script>
<script type="text/javascript">
    $(document).ready(function(){
        var handle = $( "#custom-handle" );
        var prova = <?php echo $json; ?>;
        var max = prova.length-1;
        var i = 0;
        var intervalID;
        function startTimelapse() {
            intervalID = setInterval(function(){
                prova[i] != undefined ? i : i=0;
                $('#image').attr('src', '../Kavalo1/FI9900P_00626E65B357/snap/'+prova[i]);
                $('#slider').slider('value', i);
                handle.text(i);
                i++;
            }, 500);
        }
        handle.focusout(function() {
            startTimelapse();
        });
        $( "#slider" ).slider({
            max: max,
            create: function() {
                handle.text( $( this ).slider( "value" ) );
            },
            start: function( event, ui ) {
                clearInterval(intervalID);
            },
            slide: function( event, ui ) {
                handle.text( ui.value );
                $('#image').attr('src', '../Kavalo1/FI9900P_00626E65B357/snap/'+prova[ui.value]);
                i = ui.value;
            }
        });
        startTimelapse();
    });
    </script>
    
<!-- FINE PROVA_01 SLIDE ------------------------------------------------------------------------- -->        
        
        
        
      </td>
    </tr>
<!--fine cella divisa in 3 - tramite propiet
 'colspan="3"'-->
   <tr>
      <td colspan="3" class="data1" style="text-align: center">
      <!--	
        inserito come segnaposto
        
		(formato - class=datahead = tx bianco e sfondo)
		(formato - class=data1 = tx bianco, bordo sotto, no sfondo)
		(formato - senza class = eredita celeste xero, no bordo sotto, no sfondo)
      </td>
    </tr>
   <tr>
      <td colspan="3" style="text-align: center">
<!--	
        inserito come segnaposto
                
		(formato - class=datahead = tx bianco e sfondo)
		(formato - class=data1 = tx bianco, bordo sotto, no sfondo)
		(formato - senza class = eredita celeste xero, no bordo sotto, no sfondo)
      </td>
    </tr>
   <tr>
      <td colspan="3" style="text-align: center">
      <br>
      <p align="center"><font color="#AAFFFF">
          <span style="font-family: Comic Sans MS; font-size: 8.0pt"><a href="index.htm" target="_blank">
          <span style="left: -12; top: 222"><font color="#AAFFFF">| Home page</font></span></a>&nbsp;
          |&nbsp; <a href="Vettori%20aerei%20it.htm" target="_blank">
          <span style="left: -12; top: 222"><font color="#AAFFFF">Voli per Creta</font></span></a>&nbsp;
          |&nbsp; </span>
          <span style="font-family: Comic Sans MS; left: -12; top: 222; font-size: 8.0pt"><a href="Autonoleggio%20it.htm" target="_blank">
          <font color="#AAFFFF">Autonoleggio
          in Creta</font></a></span><span style="font-family: Comic Sans MS; font-size: 8.0pt">&nbsp;
          |&nbsp; <a href="Vacanze.Creta.it.htm" target="_blank">
          <span style="left: -12; top: 222"><font color="#AAFFFF">Appartamenti 
          vacanze</font></span></a>&nbsp;|
          
          <br>
          
          |&nbsp; </span>
          <span style="font-family: Comic Sans MS; left: -12; top: 222; font-size: 8.0pt"> <a href="InfoCreta.htm" target="_blank">
          <font color="#AAFFFF">Info Creta</font></a></span><span style="font-family: Comic Sans MS; font-size: 8.0pt">&nbsp;
          |&nbsp; </span>
          <span style="font-family: Comic Sans MS; left: -12; top: 222; font-size: 8.0pt"> <a href="Raccordo%20Carte%20Stradali.htm" target="_blank">
          <font color="#AAFFFF">Carte
          stradali</font></a></span><span style="font-family: Comic Sans MS; font-size: 8.0pt">&nbsp;
          |&nbsp; <a href="Distanze.Creta.it.htm" target="_blank">
          <span style="left: -12; top: 222"><font color="#AAFFFF">Distanze a Creta</font></span></a>&nbsp;
          |&nbsp; <a target="_blank" href="mailto:andrea18@otenet.gr">
            <font color="#AAFFFF">Contattateci</font></a>&nbsp;|</font>
<!--	
        inserito come segnaposto
        <br>
		(formato - class=datahead = tx bianco e sfondo)
		(formato - class=data1 = tx bianco, bordo sotto, no sfondo)
		(formato - senza class = eredita celeste xero, no bordo sotto, no sfondo)
      </td>
    </tr>
   <tr>
      <td colspan="3" style="text-align: center">
<!--	
        inserito come segnaposto
                
		(formato - class=datahead = tx bianco e sfondo)
		(formato - class=data1 = tx bianco, bordo sotto, no sfondo)
		(formato - senza class = eredita celeste xero, no bordo sotto, no sfondo)
      </td>
    </tr>
   <tr>
      <td colspan="3" style="text-align: center">
		<br>
<!--      
/* modificato MASSI
avevo messo qui il counter
poi messo nel footer.php
 lo carica automaticamente in tutte le pagine
            
<!--      
/* modificato MASSI
inserito caricamento PHP della frase
e disattivato dal pie di pagina "footer.php"
per non averlo doppio-->
-----
<br/><?php langtrans('Never base important decisions on this or any weather information obtained from the Internet'); ?>.<br class="doNotPrint" />
-----
            
<!--	
        inserito come segnaposto
        
		(formato - class=datahead = tx bianco e sfondo)
		(formato - class=data1 = tx bianco, bordo sotto, no sfondo)
		(formato - senza class = eredita celeste xero, no bordo sotto, no sfondo)
      </td>
    </tr>
    
    
    <tr>
      <td colspan="3" style="text-align: center">
<!--	
        inserito come segnaposto
        
		(formato - class=datahead = tx bianco e sfondo)
		(formato - class=data1 = tx bianco, bordo sotto, no sfondo)
		(formato - senza class = eredita celeste xero, no bordo sotto, no sfondo)
        </td>
	</tr>
    
    <tr>
      <td colspan="3" style="text-align: center">
<!--	
        inserito come segnaposto
        
		(formato - class=datahead = tx bianco e sfondo)
		(formato - class=data1 = tx bianco, bordo sotto, no sfondo)
		(formato - senza class = eredita celeste xero, no bordo sotto, no sfondo)
      </td>
    </tr>
	<tr>
      <td colspan="3" style="text-align: center">
<!--	
        inserito come segnaposto
        
		(formato - class=datahead = tx bianco e sfondo)
		(formato - class=data1 = tx bianco, bordo sotto, no sfondo)
		(formato - senza class = eredita celeste xero, no bordo sotto, no sfondo)
        </td>
	</tr>
</table>
<!-- >>>> FINE TABELLA PREVISIONI -->
<!-- -------------------------------------------------------------------------------------------------------------------- -->
<!--
/* modificato MASSI fine -->
<?php if($condIconType <> '.jpg') {
	print "<small>".langtransstr('Animated icons courtesy of')." <a href=\"http://www.meteotreviglio.com/\">www.meteotreviglio.com</a>.</small>";
</div>
<!-- end of ajax-dashboard.php -->
<?php
//=========================================================================
// Functions
//=========================================================================
//  generate an up/down arrow to show differences
function gen_difference( $nowTemp, $yesterTemp, $Legend, $textUP, $textDN, $DP=1) {
// version 1.01 - handle ',' as decimal point on input
  global $imagesDir,$commaDecimal,$DebugMode;
  if($commaDecimal) {
    $tnowTemp = preg_replace('|,|','.',strip_units($nowTemp));
    $tyesterTemp = preg_replace('|,|','.',strip_units($yesterTemp));
  } else {
	$tnowTemp = strip_units($nowTemp);
	$tyesterTemp = strip_units($yesterTemp);
  $diff = round(($tnowTemp - $tyesterTemp),3);
  $absDiff = abs($diff);
  $diffStr = sprintf("%01.".$DP."F",$diff);
  $absDiffStr = sprintf("%01.".$DP."F",$absDiff);
  if($commaDecimal) {
	 $absDiffStr = preg_replace('|\.|',',',$absDiffStr);
  if($DebugMode) {
	  echo "<!-- gen_difference DP=$DP now='$nowTemp':'$tnowTemp' yest='$yesterTemp':'$tyesterTemp' dif='$diff':'$diffStr' absDiff='$absDiff':'$absDiffStr' -->\n";
	  echo "<!-- txtUP='$textUP' txtDN='$textDN' Legend='$Legend' -->\n";
  if ($diffStr == '0.0') {
 // no change
$image = '&nbsp;'; 
  } elseif ($diffStr > '0.0') {
// today is greater 
$msg = sprintf($textUP,$absDiffStr); 
$image = "<img src=\"${imagesDir}rising.gif\" alt=\"$msg\" title=\"$msg\" width=\"7\" height=\"8\" style=\"border: 0; margin: 1px 3px;\" />";
  } else {
// today is lesser
$msg = sprintf($textDN,$absDiffStr); 
$image = "<img src=\"${imagesDir}falling.gif\" alt=\"$msg\" title=\"$msg\" width=\"7\" height=\"8\" style=\"border: 0; margin: 1px 3px;\" />";
   if ($Legend) {
       return ($diff . $Legend . $image);
	} else {
	   return $image;
//=========================================================================
//  decode UV to word+color for display
function get_UVrange ( $inUV ) {
// figure out a text value and color for UV exposure text
//  0 to 2  Low
//  3 to 5 	Moderate
//  6 to 7 	High
//  8 to 10 Very High
//  11+ 	Extreme
   if(strpos($inUV,',') !== false ) {
	   $uv = preg_replace('|,|','.',$inUV);
   } else {
	   $uv = $inUV;
   }
   switch (TRUE) {
     case ($uv == 0):
       $uv = langtransstr('None');
     break;
     case (($uv > 0) and ($uv < 3)):
       $uv = '<span style="border: solid 1px; color: black; background-color: #A4CE6a;">&nbsp;' . langtransstr('Low') . '&nbsp;</span>';
     break;
     case (($uv >= 3) and ($uv < 6)):
       $uv = '<span style="border: solid 1px; color: black; background-color: #FBEE09;">&nbsp;' . langtransstr('Medium') . '&nbsp;</span>';
     break;
     case (($uv >=6 ) and ($uv < 8)):
       $uv = '<span style="border: solid 1px; color: black; background-color: #FD9125;">&nbsp;' . langtransstr('High') . '&nbsp;</span>';
     break;
     case (($uv >=8 ) and ($uv < 11)):
       $uv = '<span style="border: solid 1px; color: #FFFFFF; background-color: #F63F37;">&nbsp;' . langtransstr('Very&nbsp;High') . '&nbsp;</span>';
     break;
     case (($uv >= 11) ):
       $uv = '<span style="border: solid 1px; color: #FFFF00; background-color: #807780;">&nbsp;' . langtransstr('Extreme') . '&nbsp;</span>';
     break;
   } // end switch
   return $uv;
} // end get_UVrange
//=========================================================================
// change the hh:mm AM/PM to h:mmam/pm format
function fixup_time ( $WDtime ) {
  global $timeOnlyFormat,$DebugMode;
  if ($WDtime == "00:00: AM") { return ''; }
  $t = explode(':',$WDtime);
  if (preg_match('/p/i',$WDtime)) { $t[0] = $t[0] + 12; }
  if ($t[0] > 23) {$t[0] = 12; }
  if (preg_match('/^12.*a/i',$WDtime)) { $t[0] = 0; }
  $t2 = join(':',$t); // put time back to gether;
  $t2 = preg_replace('/[^\d\:]/is','',$t2); // strip out the am/pm if any
  $r = date($timeOnlyFormat , strtotime($t2));
  if ($DebugMode) {
    $r = "<!-- fixup_time WDtime='$WDtime' t2='$t2' -->" . $r;
    $r = '<span style="color: green;">' . $r . '</span>'; 
  return ($r);
//=========================================================================
// adjust WD date to desired format
function fixup_date ($WDdate) {
  global $timeFormat,$timeOnlyFormat,$dateOnlyFormat,$WDdateMDY,$DebugMode;
  $d = explode('/',$WDdate);      // expect ##/##/## form
  if(!isset($d[2])) {$d = explode('-',$WDdate); } // try ##-##-#### form instead
  if(!isset($d[2])) {$d = explode('.',$WDdate); } // try ##.##.#### form instead
  if ($d[2] > 70 and $d[2] <= 99) {$d[2] += 1900;} // 2 digit dates 70-99 are 1970-1999
  if ($d[2] < 99) {$d[2] += 2000; } // 2 digit dates (left) are assumed 20xx dates.
  if ($WDdateMDY) {
    $new = sprintf('%04d-%02d-%02d',$d[2],$d[0],$d[1]); //  M/D/YYYY -> YYYY-MM-DD
  } else {
    $new = sprintf('%04d-%02d-%02d',$d[2],$d[1],$d[0]); // D/M/YYYY -> YYYY-MM-DD
  $r = date($dateOnlyFormat,strtotime($new));
  if ($DebugMode) {
    $r = "<!-- fixup_date WDdate='$WDdate', WDdateUSA='$WDdateMDY' new='$new' -->" . $r;
    $r = '<span style="color: green;">' . $r . '</span>'; 
  return ($r);
//=========================================================================
// strip trailing units from a measurement
// i.e. '30.01 in. Hg' becomes '30.01'
function strip_units ($data) {
  preg_match('/([\d\,\.\+\-]+)/',$data,$t);
  return $t[1];
//=========================================================================
// decode WD %moonage% tag and return a text description for the moon phase name
// "Moon age: 10 days,10 hours,41 minutes,80%"
function moonphase ($WDmoonage) {
  preg_match_all('|(\d+)|is',$WDmoonage,$matches);
//  print "<!-- matches=\n" . print_r($matches,true) . "-->\n";
  $mdays = $matches[1][0];
  $mhours = $matches[1][1];
  $mmins = $matches[1][2];
  $mpct  = $matches[1][3];
  $mdaysd = $mdays + ($mhours / 24) + ($mmins / 1440);
  // Definitions from http://www.answers.com/topic/lunar-phase
  //  * Dark Moon - Not visible
  //  * New Moon - Not visible, or traditionally, the first visible crescent of the Moon
  //  * Waxing Crescent Moon - Right 1-49% visible
  //  * First Quarter Moon - Right 50% visible
  //  * Waxing gibbous Moon - Right 51-99% visible
  //  * Full Moon - Fully visible
  //  * Waning gibbous Moon - Left 51-99% visible
  //  * Third Quarter Moon - Left 50% visible
  //  * Waning Crescent Moon - Left 1-49% visible
  //  * New Moon - Not visible
  if ($mdaysd <= 29.53/2) { // increasing illumination
    $ph = "Waxing";
	$qtr = "First";
  } else { // decreasing illumination
    $ph = "Waning";
	$qtr = "Last";
  if ($mpct < 1 ) { return("New Moon"); }
  if ($mpct <= 49) { return("$ph Crescent"); }
  if ($mpct < 51) { return("$qtr Quarter"); }
  if ($mpct < 99) { return("$ph Gibbous"); }
	return("Full Moon");
//=========================================================================
// pick the NOAA style condition icon based on iconnumber 
function newIcon($numb) {
  global $condIconDir,$condIconType;
  $iconList = array(
	"skc.jpg",          //  0 imagesunny.visible
	"nskc.jpg",         //  1 imageclearnight.visible
	"bkn.jpg",          //  2 imagecloudy.visible
	"sct.jpg",          //  3 imagecloudy2.visible
	"nbkn.jpg",         //  4 imagecloudynight.visible
	"sct.jpg",          //  5 imagedry.visible
	"fg.jpg",           //  6 imagefog.visible
	"hazy.jpg",         //  7 imagehaze.visible
	"ra.jpg",           //  8 imageheavyrain.visible
	"few.jpg",          //  9 imagemainlyfine.visible
	"mist.jpg",         // 10 imagemist.visible
	"nfg.jpg",          // 11 imagenightfog.visible
	"nra.jpg",          // 12 imagenightheavyrain.visible
	"novc.jpg",         // 13 imagenightovercast.visible
	"nra.jpg",          // 14 imagenightrain.visible
	"nshra.jpg",        // 15 imagenightshowers.visible
	"nsn.jpg",          // 16 imagenightsnow.visible
	"ntsra.jpg",        // 17 imagenightthunder.visible
	"ovc.jpg",          // 18 imageovercast.visible
	"sct.jpg",          // 19 imagepartlycloudy.visible
	"ra.jpg",           // 20 imagerain.visible
	"ra.jpg",           // 21 imagerain2.visible
	"shra.jpg",         // 22 imageshowers2.visible
	"ip.jpg",           // 23 imagesleet.visible
	"ip.jpg",           // 24 imagesleetshowers.visible
	"sn.jpg",           // 25 imagesnow.visible
	"sn.jpg",           // 26 imagesnowmelt.visible
	"sn.jpg",           // 27 imagesnowshowers2.visible
	"skc.jpg",          // 28 imagesunny.visible
	"scttsra.jpg",      // 29 imagethundershowers.visible
	"hi_tsra.jpg",      // 30 imagethundershowers2.visible
	"tsra.jpg",         // 31 imagethunderstorms.visible
	"nsvrtsra.jpg",     // 32 imagetornado.visible
	"wind.jpg",         // 33 imagewindy.visible
	"ra1.jpg",          // 34 stopped rainning
	"windyrain.jpg"     // 35 windy/rain 
	);	
	$tempicon = $iconList[$numb];
	if($condIconType <> '.jpg') {
	  $tempicon = preg_replace('|\.jpg|',$condIconType,$tempicon);
	return($tempicon);
// Function to process %Currentsolarcondition% string and 
// remove duplicate stuff, then fix capitalization, and translate from English if needed
//  
  function fixupCondition( $inCond ) {
    global $DebugMode;
    $Cond = str_replace('_',' ',$inCond);
	$Cond = strtolower($Cond);
	$Cond = preg_replace('| -|','',$Cond);
	$Cond = trim($Cond);
	$dt = '';
	$vals = array();
	if(strpos($Cond,'/') !==false) {
		$dt .= "<!-- vals split on slash -->\n";
		$vals = explode("/",$Cond);
	if(strpos($Cond,',') !==false) {
		$dt .= "<!-- vals split on comma -->\n";
		$vals = explode(",",$Cond);
	$ocnt = count($vals);
	if($ocnt < 1) { return(langtransstr(trim($inCond))); }
	foreach ($vals as $k => $v) { 
	  if($DebugMode) { $dt .= "<!-- v='$v' -->\n"; }
	  $v = ucfirst(strtolower(trim($v)));
	  $vals[$k] = langtransstr($v); 
	  if($DebugMode) { $dt .= "<!-- vals[$k]='".$vals[$k]."' -->\n"; }
	if($vals[0] == '') {$junk = array_shift($vals);}
	if(isset($vals[2]) and $vals[0] == $vals[2]) {$junk = array_pop($vals);}
	reset($vals);
	$t = join(', ',$vals);
//	return($Cond . "' orig=$ocnt n=" . count($vals) ." t='$t'");
    if($DebugMode) {
      $t = "<!-- fixupCondition in='$inCond' out='$t' ocnt='$ocnt' -->" . $dt . $t;
    return($t);
				
// end of functions
//=========================================================================
?><?php
$AGversion = 'ajax-gizmo.php V1.14 - 17-Mar-2013 - Multilingual';
// Version 1.11 - 29-Nov-2011 - improved translations for conditions
// Version 1.12 - 13-Dec-2011 - fix am/pm-24hr time display for WeatherLink stations
// Version 1.13 - 22-Jan-2012 - fix for dd.mm.yyyy date handling
// Version 1.14 - 17-Mar-2013 - fix for UTF-8 validation with temptrend display
// Note: for Base-Canada/Base-USA/Base-World template users you need not customize anything here
//   all the settings come from Settings.php instead.
// --- settings --------------------------
$uomTemp = ' &deg;C';
$uomBaro = ' hPa';
$uomWind = ' km/h';
$uomRain = ' mm';
$uomPerHour = '/hr';
$imagesDir = './ajax-images/';  // directory for ajax-images with trailing slash
//  $timeFormat = 'D, d-M-Y g:ia T';  // Fri, 31-Mar-2006 6:35pm TZone
$timeFormat = 'd-M-Y g:ia';  // Fri, 31-Mar-2006 6:35pm TZone
$timeOnlyFormat = 'g:ia';    // h:mm[am|pm];
//$timeOnlyFormat = 'H:i';     // hh:mm
$dateOnlyFormat = 'd-M-Y';   // d-Mon-YYYY
$WDdateMDY = true;     // true=dates by WD are 'month/day/year'
//                     // false=dates by WD are 'day/month/year'
  $ourTZ = "America/Los_Angeles";  //NOTE: this *MUST* be set correctly to
// translate UTC times to your LOCAL time for the displays.
$WXtags  =  'testtags.php';  // source of our weather variables
$Lang = 'en'; // default language is English
// overrides from Settings.php if available
$commaDecimal = false;
global $SITE,$forwardTrans,$reverseTrans;
if (isset($SITE['lang'])) 	{$Lang = $SITE['lang'];}
if (isset($SITE['uomTemp']))         {$uomTemp = $SITE['uomTemp'];}
if (isset($SITE['uomBaro']))         {$uomBaro = $SITE['uomBaro'];}
if (isset($SITE['uomWind']))         {$uomWind = $SITE['uomWind'];}
if (isset($SITE['uomRain']))         {$uomRain = $SITE['uomRain'];}
if (isset($SITE['uomPerHour'])) {$uomPerHour = $SITE['uomPerHour'];}
if (isset($SITE['imagesDir']))         {$imagesDir = $SITE['imagesDir'];}
if (isset($SITE['timeFormat'])) {$timeFormat = $SITE['timeFormat'];}
if (isset($SITE['timeOnlyFormat'])) {$timeOnlyFormat = $SITE['timeOnlyFormat'];}
if (isset($SITE['dateOnlyFormat'])) {$dateOnlyFormat = $SITE['dateOnlyFormat'];}
if (isset($SITE['WDdateMDY']))  {$WDdateMDY = $SITE['WDdateMDY'];}
if (isset($SITE['tz']))                 {$ourTZ = $SITE['tz'];}
if (isset($SITE['WXtags']))         {$WXtags = $SITE['WXtags'];}
if (isset($SITE['commaDecimal'])) 	{$commaDecimal = $SITE['commaDecimal'];}
// --- end of settings -------------------
if (isset($_REQUEST['sce']) && strtolower($_REQUEST['sce']) == 'view' ) {
   //--self downloader --
   $filenameReal = __FILE__;
   $download_size = filesize($filenameReal);
   header('Pragma: public');
   header('Cache-Control: private');
   header('Cache-Control: no-cache, must-revalidate');
   header("Content-type: text/plain");
   header("Accept-Ranges: bytes");
   header("Content-Length: $download_size");
   header('Connection: close');
   readfile($filenameReal);
   exit;
if(isset($WXtags) and $WXtags <> '') {include_once($WXtags); }  // for the bulk of our data
 else {
	echo "<!-- ajax-gizmo not loaded .. no wxtags specified -->\n";
	echo "&nbsp;<br/>&nbsp;<br/>&nbsp;\n"; // needed as placeholder if no gizmo
	return;
include_once("common.php"); // for language translation functions
# Set timezone in PHP5/PHP4 manner
  if (!function_exists('date_default_timezone_set')) {
	putenv("TZ=" . $ourTZ);
#	$Status .= "<!-- using putenv(\"TZ=$ourTZ\") -->\n";
    } else {
	date_default_timezone_set("$ourTZ");
#	$Status .= "<!-- using date_default_timezone_set(\"$ourTZ\") -->\n";
   }
//  $UpdateDate = date($timeFormat,strtotime("$date_year-$date_month-$date_day  $time_hour:$time_minute:00"));
//  $UpdateDate = "$date_year-$date_month-$date_day  $time_hour:$time_minute:00";
    $UpdateDate = gizmo_fixup_date($date) . ' ' . gizmo_fixup_time($time);
print "<!-- Lang='$Lang' -->\n";
if ($Lang <> 'en' and ! isset($SITE['langTransloaded']) ) { // do language settings for ajaxWDwx.js
	print '<script type="text/javascript">';
	if(count($forwardTrans)>0) {
	   print "// Language translation for conditions by ajaxWDwx.js for lang='$Lang'\n";
	   print "//\n";
	foreach ($forwardTrans as $key => $val) {
	   print "  langTransLookup['$key'] = '$val';\n";
    }
	print "</script>\n";
	$SITE['langTransloaded'] = true;
$decimalComma = (strpos($temperature,',') !==false)?true:false; // using comma for decimal point?
$DebugMode = false;
if(isset($_REQUEST['debug']) and preg_match('|y|i',$_REQUEST['debug'])) {$DebugMode = true;}
// --- end of initialization code ---------
<!-- <?php echo $AGversion; ?> -->
<div class="ajaxgizmo">
   <div class="doNotPrint">
	  <!-- ##### start of AJAX gizmo ##### -->
	    <noscript>[<?php langtrans('Enable JavaScript for live updates'); ?>]&nbsp;</noscript>
	    <span class="ajax" id="gizmoindicator"><?php langtrans('Updated'); ?></span>:&nbsp;
		<span class="ajax" id="gizmodate"><?php echo $UpdateDate;?></span>&nbsp; 
		<span class="ajax" id="gizmotime"></span>
	  <br/>&nbsp;<img src="<?php echo $imagesDir; ?>spacer.gif" height="14" width="1" alt=" " />
		<span class="ajaxcontent0" style="display: none">
		  <span class="ajax" id="gizmocurrentcond"><?php echo gizmo_fixupCondition($Currentsolardescription); ?></span>
		</span>
		<span class="ajaxcontent1" style="display: none"><?php langtrans('Temperature'); ?>: 
			<span class="ajax" id="gizmotemp"><?php echo gizmo_strip_units($temperature) . $uomTemp; ?></span>
            
	        <span class="ajax" id="gizmotemparrow"><?php
			if(isset($tempchangehour)) {
				   if($commaDecimal) {
					  $Tnow = preg_replace('|,|','.',gizmo_strip_units($temperature));
					  $TLast = preg_replace('|,|','.',gizmo_strip_units($tempchangehour)); 
				   } else {
					  $Tnow = gizmo_strip_units($temperature);
					  $TLast = gizmo_strip_units($tempchangehour); 
				   }
				   echo gizmo_gen_difference($Tnow, $Tnow - $TLast, '',
			       langtransstr('Warmer').' %s'. $uomTemp .' ' . langtransstr('than last hour').'.',
			       langtransstr('Colder').' %s'. $uomTemp .' ' . langtransstr('than last hour').'.');
			} ?>
			</span>&nbsp;
			<span class="ajax" id="gizmotemprate"><?php 
			if(isset($tempchangehour)) {
				echo gizmo_strip_units($tempchangehour).$uomTemp; 
			} ?></span><?php 
			   if(isset($tempchangehour)) { 
			     echo langtransstr($uomPerHour); 
               } // $tempchangehour ?>
		</span>
		<span class="ajaxcontent2" style="display: none"><?php langtrans('Humidity'); ?>: 
		  <span class="ajax" id="gizmohumidity"><?php 
			 echo $humidity; ?></span>%<?php
			 if(isset($humchangelasthour)) {
			   $t1 = preg_replace('|\s|s','',$humchangelasthour); 
			   if($commaDecimal) {
				  $Tnow = preg_replace('|,|','.',gizmo_strip_units($humidity));
				  $TLast = preg_replace('|,|','.',gizmo_strip_units($t1)); 
			   } else {
				  $Tnow = gizmo_strip_units($humidity);
				  $TLast = gizmo_strip_units($t1); 
			   }
					 
			   echo gizmo_gen_difference($Tnow, $Tnow-$TLast, '',
			   langtransstr('Increased').' %s%% ' . langtransstr('since last hour').'.',
			   langtransstr('Decreased').' %s%% ' . langtransstr('since last hour').'.');
			 } ?>
		</span>
		<span class="ajaxcontent3" style="display: none"><?php langtrans('Dew Point'); ?>: 
		  <span class="ajax" id="gizmodew"><?php 
			 $t1 = gizmo_strip_units($dewpt); 
			 echo $t1 . $uomTemp;  ?></span><?php 
			 if(isset($dewchangelasthour)) {
			  if($commaDecimal) {
				  $Tnow = preg_replace('|,|','.',gizmo_strip_units($dewpt));
				  $TLast = preg_replace('|,|','.',gizmo_strip_units($dewchangelasthour)); 
			   } else {
				  $Tnow = gizmo_strip_units($dewpt);
				  $TLast = gizmo_strip_units($dewchangelasthour); 
			   }
			   echo gizmo_gen_difference($Tnow, $Tnow-$TLast, '',
			   langtransstr('Increased').' %s'. $uomTemp .' ' . langtransstr('since last hour').'.',
			   langtransstr('Decreased').' %s'. $uomTemp .' ' . langtransstr('since last hour').'.'); 
			 } ?>
		</span>
		<span class="ajaxcontent4" style="display: none"><?php langtrans('Wind'); ?>: 
	    	<span class="ajax" id="gizmowindicon"></span> 
			<span class="ajax" id="gizmowinddir"><?php langtrans($dirlabel); ?></span>&nbsp; 
			<span class="ajax" id="gizmowind"><?php echo gizmo_strip_units($avgspd) . $uomWind; ?></span>
		</span>
		<span class="ajaxcontent5" style="display: none"><?php langtrans('Gust'); ?>: 
  			<span class="ajax" id="gizmogust"><?php echo gizmo_strip_units($gstspd) . $uomWind; ?></span>
		</span>
		<span class="ajaxcontent6" style="display: none"><?php langtrans('Barometer'); ?>: 
    		<span class="ajax" id="gizmobaro"><?php 
			 $t1 = gizmo_strip_units($baro); 
			 echo $t1 . " $uomBaro"; ?></span><?php
			 if(isset($trend)) {
			  if($commaDecimal) {
				  $Tnow = preg_replace('|,|','.',gizmo_strip_units($baro));
				  $TLast = preg_replace('|,|','.',gizmo_strip_units($trend)); 
			   } else {
				  $Tnow = gizmo_strip_units($baro);
				  $TLast = gizmo_strip_units($trend); 
			   }
			   $decPts = 1;
			   if(preg_match('|in|i',$uomBaro)) {$decPts = 2; }
			   echo gizmo_gen_difference($Tnow, $Tnow-$TLast, '',
			   langtransstr('Rising') . ' %s '. $uomBaro . langtransstr($uomPerHour),
			   langtransstr('Falling') . ' %s ' . $uomBaro . langtransstr($uomPerHour),$decPts ); 
			 } ?>&nbsp;
             <span class="ajax" id="gizmobarotrendtext"><?php langtrans($pressuretrendname); ?></span>			
		</span> 
		<span class="ajaxcontent7" style="display: none"><?php langtrans('Rain Today'); ?>: 
    		<span class="ajax" id="gizmorain"><?php 
			 echo gizmo_strip_units($dayrn).$uomRain; ?></span>
		</span>
		<span class="ajaxcontent8" style="display: none"><?php langtrans('UV Index'); ?>: 
           <span class="ajax" id="gizmouv"><?php echo $VPuv; ?></span>&nbsp;
		   <span style="color: #ffffff">
	         <span class="ajax" id="gizmouvword"><?php echo gizmo_get_UVrange($VPuv); ?></span>
		   </span>
		</span>
	  </div>
	  <!-- ##### end of AJAX gizmo  ##### -->
</div>
<!-- end of ajax-gizmo.php -->
<?php
//=========================================================================
// Functions
//=========================================================================
//  generate an up/down arrow to show differences
function gizmo_gen_difference( $nowTemp, $yesterTemp, $Legend, $textUP, $textDN, $DP=1) {
// version 1.01 - handle ',' as decimal point on input
  global $imagesDir,$commaDecimal,$DebugMode;
  if($commaDecimal) {
    $tnowTemp = preg_replace('|,|','.',gizmo_strip_units($nowTemp));
    $tyesterTemp = preg_replace('|,|','.',gizmo_strip_units($yesterTemp));
  } else {
	$tnowTemp = gizmo_strip_units($nowTemp);
	$tyesterTemp = gizmo_strip_units($yesterTemp);
  $diff = round(($tnowTemp - $tyesterTemp),3);
  $absDiff = abs($diff);
  $diffStr = sprintf("%01.".$DP."F",$diff);
  $absDiffStr = sprintf("%01.".$DP."F",$absDiff);
  if($commaDecimal) {
	 $absDiffStr = preg_replace('|\.|',',',$absDiffStr);
  if($DebugMode) {
	  echo "<!-- gen_difference DP=$DP now='$nowTemp':'$tnowTemp' yest='$yesterTemp':'$tyesterTemp' dif='$diff':'$diffStr' absDiff='$absDiff':'$absDiffStr' -->\n";
	  echo "<!-- txtUP='$textUP' txtDN='$textDN' Legend='$Legend' -->\n";
  if ($diffStr == '0.0') {
 // no change
$image = '&nbsp;'; 
  } elseif ($diffStr > '0.0') {
// today is greater 
$msg = sprintf($textUP,$absDiffStr); 
$image = "<img src=\"${imagesDir}rising.gif\" alt=\"$msg\" title=\"$msg\" width=\"7\" height=\"8\" style=\"border: 0; margin: 1px 3px;\" />";
  } else {
// today is lesser
$msg = sprintf($textDN,$absDiffStr); 
$image = "<img src=\"${imagesDir}falling.gif\" alt=\"$msg\" title=\"$msg\" width=\"7\" height=\"8\" style=\"border: 0; margin: 1px 3px;\" />";
   if ($Legend) {
       return ($diff . $Legend . $image);
	} else {
	   return $image;
//=========================================================================
//  decode UV to word+color for display
function gizmo_get_UVrange ( $inUV ) {
// figure out a text value and color for UV exposure text
//  0 to 2  Low
//  3 to 5 	Moderate
//  6 to 7 	High
//  8 to 10 Very High
//  11+ 	Extreme
   if(strpos($inUV,',') !== false ) {
	   $uv = preg_replace('|,|','.',$inUV);
   } else {
	   $uv = $inUV;
   }
   switch (TRUE) {
     case ($uv == 0):
       $uv = langtransstr('None');
     break;
     case (($uv > 0) and ($uv < 3)):
       $uv = '<span style="border: solid 1px; color: black; background-color: #A4CE6a;">&nbsp;' . langtransstr('Low') . '&nbsp;</span>';
     break;
     case (($uv >= 3) and ($uv < 6)):
       $uv = '<span style="border: solid 1px; color: black; background-color: #FBEE09;">&nbsp;' . langtransstr('Medium') . '&nbsp;</span>';
     break;
     case (($uv >=6 ) and ($uv < 8)):
       $uv = '<span style="border: solid 1px; color: black; background-color: #FD9125;">&nbsp;' . langtransstr('High') . '&nbsp;</span>';
     break;
     case (($uv >=8 ) and ($uv < 11)):
       $uv = '<span style="border: solid 1px; color: #FFFFFF; background-color: #F63F37;">&nbsp;' . langtransstr('Very&nbsp;High') . '&nbsp;</span>';
     break;
     case (($uv >= 11) ):
       $uv = '<span style="border: solid 1px; color: #FFFF00; background-color: #807780;">&nbsp;' . langtransstr('Extreme') . '&nbsp;</span>';
     break;
   } // end switch
   return $uv;
} // end get_UVrange
//=========================================================================
// strip trailing units from a measurement
// i.e. '30.01 in. Hg' becomes '30.01'
function gizmo_strip_units ($data) {
  preg_match('/([\d\.\,\+\-]+)/',$data,$t);
  return $t[1];
// end of functions
//=========================================================================
// Function to process %Currentsolarcondition% string and 
// remove duplicate stuff, then fix capitalization, and translate from English if needed
//  
  function gizmo_fixupCondition( $inCond ) {
    global $DebugMode;
    $Cond = str_replace('_',' ',$inCond);
	$Cond = strtolower($Cond);
	$Cond = preg_replace('| -|','',$Cond);
	$Cond = trim($Cond);
	$dt = '';
	$vals = array();
	if(strpos($Cond,'/') !==false) {
		$dt .= "<!-- vals split on slash -->\n";
		$vals = explode("/",$Cond);
	if(strpos($Cond,',') !==false) {
		$dt .= "<!-- vals split on comma -->\n";
		$vals = explode(",",$Cond);
	$ocnt = count($vals);
	if($ocnt < 1) { return(langtransstr(trim($inCond))); }
	foreach ($vals as $k => $v) { 
	  if($DebugMode) { $dt .= "<!-- v='$v' -->\n"; }
	  $v = ucfirst(strtolower(trim($v)));
	  $vals[$k] = langtransstr($v); 
	  if($DebugMode) { $dt .= "<!-- vals[$k]='".$vals[$k]."' -->\n"; }
	if($vals[0] == '') {$junk = array_shift($vals);}
	if(isset($vals[2]) and $vals[0] == $vals[2]) {$junk = array_pop($vals);}
	reset($vals);
	$t = join(', ',$vals);
//	return($Cond . "' orig=$ocnt n=" . count($vals) ." t='$t'");
    if($DebugMode) {
      $t = "<!-- gizmo_fixupCondition in='$inCond' out='$t' ocnt='$ocnt' -->" . $dt . $t;
    return($t);
//=========================================================================
// change the hh:mm AM/PM to h:mmam/pm format
function gizmo_fixup_time ( $WDtime ) {
  global $timeOnlyFormat,$DebugMode;
  if ($WDtime == "00:00: AM") { return ''; }
  $t = explode(':',$WDtime);
  if (preg_match('/p/i',$WDtime)) { $t[0] = $t[0] + 12; }
  if ($t[0] > 23) {$t[0] = 12; }
  if (preg_match('/^12.*a/i',$WDtime)) { $t[0] = 0; }
  $t2 = join(':',$t); // put time back to gether;
  $t2 = preg_replace('/[^\d\:]/is','',$t2); // strip out the am/pm if any
  $r = date($timeOnlyFormat , strtotime($t2));
  if ($DebugMode) {
    $r = "<!-- fixup_time WDtime='$WDtime' t2='$t2' -->" . $r;
    $r = '<span style="color: green;">' . $r . '</span>'; 
  return ($r);
//=========================================================================
// adjust WD date to desired format
function gizmo_fixup_date ($WDdate) {
  global $timeFormat,$timeOnlyFormat,$dateOnlyFormat,$WDdateMDY,$DebugMode;
  $d = explode('/',$WDdate);      // expect ##/##/## form
  if(!isset($d[2])) {$d = explode('-',$WDdate); } // try ##-##-#### form instead
  if(!isset($d[2])) {$d = explode('.',$WDdate); } // try ##.##.#### form instead
  if ($d[2] > 70 and $d[2] <= 99) {$d[2] += 1900;} // 2 digit dates 70-99 are 1970-1999
  if ($d[2] < 99) {$d[2] += 2000; } // 2 digit dates (left) are assumed 20xx dates.
  if ($WDdateMDY) {
    $new = sprintf('%04d-%02d-%02d',$d[2],$d[0],$d[1]); //  M/D/YYYY -> YYYY-MM-DD
  } else {
    $new = sprintf('%04d-%02d-%02d',$d[2],$d[1],$d[0]); // D/M/YYYY -> YYYY-MM-DD
  $r = date($dateOnlyFormat,strtotime($new));
  if ($DebugMode) {
    $r = "<!-- fixup_date WDdate='$WDdate', WDdateUSA='$WDdateMDY' new='$new' -->" . $r;
    $r = '<span style="color: green;">' . $r . '</span>'; 
  return ($r);
?><?php
$Version = "check-fetch-times.php Version 1.13 - 09-Mar-2013";
Utility diagnostic script to support the Saratoga-Weather.org AJAX/PHP template sets.
Author: Ken True - webmaster@saratoga-weather.org
Note: there are no user customizations expected in this utility.  Please replace the
  entire script with a newer version when available.
//--self downloader --
if(isset($_REQUEST['sce']) and strtolower($_REQUEST['sce']) == 'view') {
   $filenameReal = __FILE__;
   $download_size = filesize($filenameReal);
   header('Pragma: public');
   header('Cache-Control: private');
   header('Cache-Control: no-cache, must-revalidate');
   header("Content-type: text/plain");
   header("Accept-Ranges: bytes");
   header("Content-Length: $download_size");
   header('Connection: close');
   readfile($filenameReal);
   exit;
error_reporting(E_ALL);
// ------------------------------------------------------------------
if(isset($_REQUEST['show']) and preg_match('|settings|i',$_REQUEST['show'])) {
	$toShow = array("Settings.php","Settings-weather.php","Settings-language.php");
	$doneHeaders = false;
	$doHighlight = preg_match('|settingsr|i',$_REQUEST['show'])?false:true;
	foreach ($toShow as $n => $showFilename) {
	  if(!$doneHeaders) { 
	    printHeaders(); 
		$doneHeaders = true; 
	    print "<h2>Contents of Settings files</h2>\n";
	  }
	  if(file_exists($showFilename)) {
		  print "<h3>$showFilename</h3>\n";
		  print "<pre style=\"border: 1px solid black;\">\n";
		  if($doHighlight) { 
		    highlight_file_num($showFilename);
		  } else {
			$flines = file($showFilename);
			$num = 1;
			foreach ($flines as $n => $line) {
				$line = preg_replace('|<\?php|i','<&#63;php',$line);
				$pnum = sprintf('%6d',$num);
				print "$pnum:\t$line";
				$num++;
			}
		  }
		  print "</pre>\n<hr/>\n";
	  } else {
		  // print "<h2>$showFilename is not found.</h2>\n<hr/>\n";
	  }
   if($doneHeaders) {
	  print "  </body>\n";
	  print "</html>\n";
   }
   exit;
// ------------------------------------------------------------------
if(isset($_REQUEST['show']) and preg_match('|structure|i',$_REQUEST['show'])) {
	$toShow = array('top.php','header.php','menubar.php','footer.php');
	$doneHeaders = false;
	$doHighlight = preg_match('|structurer|i',$_REQUEST['show'])?false:true;
	foreach ($toShow as $n => $showFilename) {
	  if(!$doneHeaders) { 
	    printHeaders(); 
		$doneHeaders = true; 
	    print "<h2>Contents of Website Structure files</h2>\n";
	  }
	  if(file_exists($showFilename)) {
		  print "<h3>$showFilename</h3>\n";
		  print "<pre style=\"border: 1px solid black;\">\n";
		  if($doHighlight) { 
		    highlight_file_num($showFilename);
		  } else {
			$flines = file($showFilename);
			$num = 1;
			foreach ($flines as $n => $line) {
				$line = preg_replace('|<\?php|i','<&#63;php',$line);
				$pnum = sprintf('%6d',$num);
				print "$pnum:\t$line";
				$num++;
			}
		  }
		  print "</pre>\n<hr/>\n";
	  } else {
		  // print "<h2>$showFilename is not found.</h2>\n<hr/>\n";
	  }
   if($doneHeaders) {
	  print "  </body>\n";
	  print "</html>\n";
   }
   exit;
// ------------------------------------------------------------------
if(isset($_REQUEST['show']) and strtolower($_REQUEST['show']) == 'info') {
  if(file_exists("Settings.php")) {
	include_once("Settings.php");
# set the Timezone abbreviation automatically based on $SITE['tzname'];
# Set timezone in PHP5/PHP4 manner
  if (!function_exists('date_default_timezone_set')) {
	 putenv("TZ=" . $SITE['tz']);
//	 print "<!-- using putenv(\"TZ=". $SITE['tz']. "\") -->\n";
    } else {
	 date_default_timezone_set($SITE['tz']);
//	 print "<!-- using date_default_timezone_set(\"". $SITE['tz']. "\") -->\n";
   }
  printHeaders(); 
  print "<h2>Key PHP information</h2>\n";
  print "<p>\n";
	print "Webserver OS: <b>".php_uname()."</b><br/>\n";
	print "PHP Version: <b>".phpversion()."</b><br/>\n";
	print "Document root: <b>".$_SERVER['DOCUMENT_ROOT']."</b><br/>\n";
	print "allow_url_fopen = <b>";
	print ini_get("allow_url_fopen")?"ON":"off";
	print "</b><br/>\n";
	print "allow_url_include = <b>";
	print ini_get("allow_url_include")?"ON":"off";
	print "</b></p>\n";
	$toCheck = array('simplexml_load_file','iconv','json_decode',
	                 'curl_init','curl_setopt','curl_exec','curl_error','curl_close');
	print "<p>Status of needed built-in PHP functions:<br/>\n";
	foreach ($toCheck as $n => $chkName) {
		print "function <b>$chkName</b> ";
		if(function_exists($chkName)) {
			print " is available<br/>\n";
		} else {
			print " is <b>NOT available</b><br/>\n";
	print "class <b>Imagick</b> ";
	print (class_exists("Imagick"))?" is available<br/>\n":" is <b>NOT available</b><br/>\n";
    print "</p>\n";
  print "<p>Current GD status:</p>\n";
  echo describeGDdyn();
  if(!file_exists("Settings.php")) {
	$settingsLoad = "Unable to find Settings.php.. directory testing skipped.\n";
	print $settingsLoad;
	print "  </body>\n";
	print "</html>\n";
	exit;
  $Base = '';
  $WXdirs = array( // specific directories from Settings-weather.php $SITE and files to check
    'CU' => array('graphImageDir'=> 'temp.png','NOAAdir' => 'NOAAYRyyyy.txt'),
	'MH' => array('graphImageDir'=> 'tdpb2day.png'),
	'VWS'=> array('graphImageDir'=> 'vws742.jpg', 'NOAAdir'=> 'noaayr.txt'),
	'WCT'=> array('graphImageDir'=> 'temperature1.jpg'),
	'WD' => array('graphImageDir'=> 'curr24hourgraph.gif','HistoryFilesDir'=>'MONTHyyyy.htm',
	              'HistoryGraphsDir'=>'yyyymmdd.gif'),
    'WL' => array('graphImageDir'=> 'OutsideTempHistory.gif','NOAACurDir'=>'NOAAMO.TXT'),
//	'WSN' => array('graphImageDir'=> '?????'),  // no graphs for WeatherSnoop
	'WV'=> array('graphImageDir'=> 'tempdaycomp.png', 'NOAAdir'=> 'NOAA-yyyy.txt'),
//	'WXS' => array('graphImageDir'=> '?????'),  // no graphs for WXSolution
  );
  if(isset($SITE['fcsturlNWS']) or isset($SITE['NWSforecasts'])) {
	  $Base = 'USA';
  if(isset($SITE['fcsturlEC']) or isset($SITE['ecradar'])) {
	  $Base = 'Canada';
  if(isset($SITE['EUwarningURL']) or isset($SITE['fcsturlWU']) or isset($SITE['WUforecasts'])) {
	  $Base = 'World';
  if(isset($SITE['WXsoftware']) ){
	  $wxsftw=$SITE['WXsoftware'];
  } else {
	  $wxsftw = 'N/A';
  print "<h2>Directories/files status for Base-$Base, $wxsftw-Plugin</h2>\n";
  print "<p>Status of needed subdirectories<br/>\n";
  print "Settings.php <b>Cache file directory</b> in \$SITE['cacheFileDir']='<b>".$SITE['cacheFileDir']. "</b>' ";
  if(is_dir($SITE['cacheFileDir'])) {
	  $perms = fileperms($SITE['cacheFileDir']);
      $permsdecoded = decode_permissions($perms);
	  $permsoctal = substr(sprintf('%o', $perms), -4);
	  print " exists, with permissions=$permsdecoded [$permsoctal]<br/>\n";
	  $tfile = $SITE['cacheFileDir'] . "test.txt";
	  $tstring = "Test of cache directory file create and write by $Version.<br/>\n";
	  $fp = fopen($tfile,'w');
	  if($fp) {
		$write = fputs($fp, $tstring); 
		fclose($fp);
		print "..Wrote ".strlen($tstring). " bytes to $tfile successfully, ";
		$deleted = unlink($tfile);
		print $deleted?"then deleted test file. <b>Cache directory is fully functional</b>.<br/>\n":" but unable to delete $tfile so <b>Cache directory is NOT fully functional</b>.<br/>\n";
	  } else {
		print "<br/><b>Error: Unable to open/write to $tfile file</b> so so <b>Cache directory is NOT fully functional</b>.<br/>\n";
	  }
  } else {
	  print "<b>does not exist</b> so some scripts will be <b>not functional</b>.<br/>\n";
  print "Settings.php <b>ajax-images file directory</b> in \$SITE['imagesDir']='<b>".$SITE['imagesDir']. "</b>' ";
  if(is_dir($SITE['imagesDir'])) {
	  print " exists; ";
	  print file_exists($SITE['imagesDir'].'skc.jpg')?
	    " and appears to have contents.<br/>\n":" but <b>does not have contents</b>.  Be sure to upload contents for proper template operation.<br/>\n";
  } else {
	  print " <b>is not on website.</b>  Be sure to upload contents for proper template operation.<br/>\n";
  if(isset($SITE['NWSalertsCodes']) and file_exists('nws-alerts-config.php')) {
	include_once('nws-alerts-config.php');
	$tFolder = $icons_folder . '/';
	print "nws-alerts-config.php <b>alert-images file directory</b> \$icons_folder='<b>$icons_folder</b>' ";
	if(is_dir($tFolder)) {
		print " exists; ";
		print file_exists($tFolder.'A-none.png')?
		  " and appears to have contents.<br/>\n":" but <b>does not have contents</b>.  Be sure to upload contents for proper template operation.<br/>\n";
	} else {
		print " <b>is not on website.</b>  Be sure to upload contents for proper template operation.<br/>\n";
  if(isset($SITE['fcsticonsdirEC']) and file_exists('ec-forecast.php')) {
	$tFolder = $SITE['fcsticonsdirEC'];
	print "Settings.php <b>ec-icons file directory</b> \$SITE['fcsticonsdirEC']='<b>$tFolder</b>' ";
	if(is_dir($tFolder)) {
		print " exists; ";
		print file_exists($tFolder.'01.gif')?
		  " and appears to have contents.<br/>\n":" but <b>does not have contents</b>.  Be sure to upload contents for proper template operation.<br/>\n";
	} else {
		print " <b>is not on website.</b>  Be sure to upload contents for proper template operation.<br/>\n";
  print "Settings.php <b>forecast images file directory</b> in \$SITE['fcsticonsdir']='<b>".$SITE['fcsticonsdir']. "</b>' ";
  if(is_dir($SITE['fcsticonsdir'])) {
	  print " exists; ";
	  $fType = (isset($SITE['fcsticonstype']) and $SITE['fcsticonstype'] == '.gif')?'.gif':'.jpg';
	  print file_exists($SITE['fcsticonsdir'].'skc'.$fType)?
	    " and appears to have $fType image contents.<br/>\n":" but <b>does not have $fType image contents</b>.  Be sure to upload contents for proper template operation.<br/>\n";
  } else {
	  print " <b>is not on website.</b>  Be sure to upload contents for proper template operation.<br/>\n";
  if(isset($WXdirs[$wxsftw])) { // check weather-software specific directories
    $toCheck = $WXdirs[$wxsftw]; // get the list.
	foreach ($toCheck as $siteVar => $chkFile) {
	  if(isset($SITE[$siteVar])) {
		$chkDir = $SITE[$siteVar];
		print "Settings-weather.php \$SITE['$siteVar']='<b>".$chkDir. "</b>' ";
		if(is_dir($chkDir)) {
			print " exists; ";
			list($nowYear,$nowMonth,$nowMM,$nowDD) = explode(" ",date('Y F m d',time()-24*60*60));
			$chkFile = preg_replace('|yyyy|',$nowYear,$chkFile);
			$chkFile = preg_replace('|yy|',substr($nowYear,2,2),$chkFile);
			$chkFile = preg_replace('|MONTH|',$nowMonth,$chkFile);
			$chkFile = preg_replace('|mm|',$nowMM,$chkFile);
			$chkFile = preg_replace('|dd|',$nowDD,$chkFile);
			print file_exists($chkDir.$chkFile)?
			  " and appears to have contents.<br/>\n":" but <b>does not have contents ($chkFile tested)</b>.  Set $wxsftw software to upload contents for proper template operation.<br/>\n";
		} else {
			print " <b>is not on website.</b>  Set $wxsftw software to upload contents for proper template operation.<br/>\n";
		  
	  }
  print "</p>\n";
  $updateDate = file_exists("common.php")?filemtime("common.php"):'unknown';
  if($updateDate <> 'unknown') {$updateDate = gmdate('D, d-M-Y g:ia T',$updateDate); }
  print "<p>common.php last updated: $updateDate</p>\n";	
  $updateDate = file_exists("language-en.txt")?filemtime("language-en.txt"):'unknown';
  if($updateDate <> 'unknown') {$updateDate = gmdate('D, d-M-Y g:ia T',$updateDate); }
  print "<p>language-en.txt last updated: $updateDate</p>\n";	
  print "  </body>\n";
  print "</html>\n";
  exit;
$time_init = time();
if(file_exists("Settings.php")) {
  $T_start = microtime_float();
  include("Settings.php");
  $T_stop = microtime_float();
  $settingsLoad = "Included Settings.php time=" . sprintf("%01.3f",round($T_stop - $T_start,3)) . " secs.\n\n";
} else {
  $settingsLoad = "Unable to find Settings.php.. testing skipped.\n";
  print $settingsLoad;
  return;
printHeaders();
// ------------------------------------------------------------------
// do version checking for key scripts (part of V1.06+)
if(isset($_REQUEST['show']) and strtolower($_REQUEST['show']) == 'versions') { // do Version checking
  // Template updates are all based in Pacific time in the distribution .zip files
  $ourTZ = 'America/Los_Angeles';
  # set the Timezone abbreviation automatically based on $SITE['tzname'];
  # Set timezone in PHP5/PHP4 manner
	if (!function_exists('date_default_timezone_set')) {
	   putenv("TZ=" . $ourTZ);
  //	 print "<!-- using putenv(\"TZ=". $SITE['tz']. "\") -->\n";
	  } else {
	   date_default_timezone_set($ourTZ);
  //	 print "<!-- using date_default_timezone_set(\"". $SITE['tz']. "\") -->\n";
  global $SITE;
  $Lang = 'en';
  $cacheFileDir = './';
  if(isset($SITE['lang'])) {$Lang = $SITE['lang'];}
  if(isset($SITE['cacheFileDir'])) {$cacheFileDir = $SITE['cacheFileDir'];}
  $templateVersionsFile = 'template-version-info.txt';
  $templateVersionsURL = 'http://saratoga-weather.org/wxtemplates/'.$templateVersionsFile;  
  print $settingsLoad;
  # fetch/cache template version info file from master (if available)
  $TESTURL = $templateVersionsURL;
  $CACHE = $cacheFileDir.$templateVersionsFile;
  print "<pre>\n";  
  if (!isset($_REQUEST['force']) and file_exists($CACHE) and filemtime($CACHE) + 600 > time()) {  // 1800
    print "..loading $CACHE for version information.\n";
  } else {
	print "..fetching recent version information.\n";
	$rawhtml = fetchUrlWithoutHanging($TESTURL,false);
	$RC = '';
	if (preg_match("|^HTTP\/\S+ (.*)\r\n|",$rawhtml,$matches)) {
		$RC = trim($matches[1]);
	print "RC=$RC, bytes=" . strlen($rawhtml) . "\n";
	$i = strpos($rawhtml,"\r\n\r\n");
	$headers = substr($rawhtml,0,$i-1);
	$content = substr($rawhtml,$i+2);
	$html = explode("\n",$content);  // put HTML area as separate lines
	$age = -1;
	$udate = 'unknown';
	$budate = 0;
	if(preg_match('|\nLast-Modified: (.*)\n|Ui',$headers,$match)) {
		$udate = trim($match[1]);
		$budate = strtotime($udate);
		$age = abs(time() - $budate); // age in seconds
		print "Data age=$age sec '$udate'\n";
	if (!preg_match('| 200|',$headers)) {
	  print "------------\nHeaders returned:\n\n$headers\n------------\n";
	  print "\nSkipped cache write to $CACHE file.\n";
	} elseif ($CACHE <> '') {
		$fp = fopen($CACHE,'w');
		if($fp) {
		  $write = fputs($fp, $rawhtml); 
		  fclose($fp);
		  print "Wrote ".strlen($rawhtml). " bytes to $CACHE successfully.\n";
		} else {
		  print "Error: Unable to write to $CACHE file.\n";
  } // end fetch new version info from saratoga-weather.org 
 # now load up the version info which looks like:
# template-version-info updated 2012-08-06 08:38 PDT by( version-info V1.00 - 05-Aug-2012 )
#Base	File	ModDate	Size	Index	ZipSize	MD5	Version	VDate	VersionDesc
Base-Canada	wxuvforecast.php	2012-03-31 05:20 PDT	7376	299	7193	abfb72a9504fc73812e8a4eb8822831a	1.01	2012-03-31	1.01 - 31-Mar-2012 - day-of-week fix for get-UV-forecast-inc.php V1.07
Base-Canada	wxtrends.php	2011-01-19 11:04 PST	2914	298	2842	ff4f1a25ebeb60a130b291303005817e	n/a	2011-01-19	(not specified)
    $MasterVersions = array();
	$nVersions = 0;
    $VFile = file($CACHE);
	if(count($VFile) < 10) {
		print "Error: $CACHE file is not complete..skipping testing.\n";
		return;
	foreach ($VFile as $n => $rec) {
	  $recin = trim($rec);
	  if ($recin and substr($recin,0,1) <> '#') { // got a non comment record
        list($Base,$File,$ModDate,$Size,$Index,$ZipSize,$FileMD5,$Fversion,$FvDate,$FvDesc) = explode("\t",$recin . "\t\t\t\t\t\t\t\t\t\t");
		$MasterVersions["$Base\t$File"] = "$ModDate\t$Size\t$FileMD5\t$Fversion\t$FvDate\t$FvDesc";
		$nVersions++;
	  }
  print "..loaded $nVersions version descriptors from $CACHE file.\n";
  # end of get new template version info file
# set of files to do version checking  
  $templateFiles = array( 
    'Common' => array(
//	  'ajaxgizmo.js',
	  'ajax-gizmo.php','ajax-dashboard.php','common.php','check-fetch-times.php',
	  'flyout-menu.php','include-style-switcher.php',
	  'get-metar-conditions-inc.php','get-USNO-sunmoon.php','get-UV-forecast-inc.php',
	  'include-metar-display.php','include-wxstatus.php','plaintext-parser.php','plaintext-parser-data.txt',
	  'thermometer.php','wxgraphs.php','wxmetar.php','wxquake.php'),
   'USA' => array(
	  'advforecast2.php','atom-advisory.php','atom-top-warning.php','get-nnvl-iod.php',
	  'GR3-radar-inc.php','floatTop.js',
	  'nws-alerts.php','nws-alerts-details-inc.php','nws-alerts-summary-inc.php',
	  'nws-alertmap.js','nws-shapefile.txt','swfobject.js',
	  'quake-json.php','quake-json.js','radar-status.php','WU-radar-inc.php'),
   'Canada' => array(
	   'ec-forecast.php','ec-radar.php','quake-Canada.php'),
   'World' => array(
	  'get-meteoalarm-warning-inc.php','quake-json.php','quake-json.js','quake-UK.php',
	  'Settings-language.php','WU-forecast.php'),
	'CU' => array('ajaxCUwx.js','CU-defs.php','gen-CUtags.php','tags.txt',
	   'include-NOAA-reports.php'),
	'MB' => array('ajaxMBwx.js','MB-defs.php','MB-trends-inc.php','gen-MBtags.php',
	      'MBtags-template.txt','conds.php','MBrealtime-template.txt'),
	'MH' => array('ajaxMHwx.js','MH-defs.php','yesterday.php','MH-trends-inc.php'),
	'VWS' => array('ajaxVWSwx.js','VWStags.php','VWS-defs.php','gen-VWStags.php','tags.txt',
	    'include-NOAA-reports.php'),
	'WCT' => array('ajaxWCTwx.js','WCT-defs.php','gen-WCTtags.php','WeatherCat-webtags.txt'),
    'WD' => array(
	  'ajaxWDwx.js','WD-trends-inc.php','include-wxhistory.php'),
	'WL' => array('ajaxWLwx.js','WL-defs.php','gen-WLtags.php','WLtags.txt',
	  'include-NOAA-reports.php'),
	 'WSN' => array('WSNtags.php','WSN-defs.php'),
	 'WV' => array('WV-defs.php','gen-WVtags.php','tags.txt',
	  'include-NOAA-reports.php'),
	 'WXS' => array('WXS-defs.php','gen-WXStags.php','tags.txt'),
  );
  $selectedVersions = array();
  $selectedVersionsType = array();
  $toCheckFiles = $templateFiles['Common'];
  $toCheckLegend = 'Common Files';
  foreach ($templateFiles['Common'] as $key => $val) {$selectedVersionsType[$val] = 'Common'; }
  $updateBasePlugin = '';
  if(isset($SITE['fcsturlNWS']) or isset($SITE['NWSforecasts'])) {
	  $toCheckFiles = array_merge($toCheckFiles,$templateFiles['USA']);
	  $toCheckLegend .= ', Base-USA';
	  load_selected_array('Base-USA');
	  $updateBasePlugin = 'Base-USA';
	  foreach ($templateFiles['USA'] as $key => $val) {$selectedVersionsType[$val] = 'USA'; }
  if(isset($SITE['fcsturlEC']) or isset($SITE['ecradar'])) {
	  $toCheckFiles = array_merge($toCheckFiles,$templateFiles['Canada']);
	  $toCheckLegend .= ', Base-Canada';
	  load_selected_array('Base-Canada');
	  $updateBasePlugin = 'Base-Canada';
	  foreach ($templateFiles['Canada'] as $key => $val) {$selectedVersionsType[$val] = 'Canada'; }
  if(isset($SITE['EUwarningURL']) or isset($SITE['fcsturlWU']) or isset($SITE['WUforecasts'])) {
	  $toCheckFiles = array_merge($toCheckFiles,$templateFiles['World']);
	  $toCheckLegend .= ', Base-World';
	  load_selected_array('Base-World');
	  $updateBasePlugin = 'Base-World';
	  foreach ($templateFiles['World'] as $key => $val) {$selectedVersionsType[$val] = 'World'; }
  if(isset($SITE['WXsoftware']) and isset($templateFiles[ $SITE['WXsoftware'] ]) ){
	  $wxsftw=$SITE['WXsoftware'];
	  $toCheckFiles = array_merge($toCheckFiles,$templateFiles[$wxsftw]);
	  $toCheckLegend .= ', '.$wxsftw.'-plugin';
	  load_selected_array($wxsftw.'-plugin');
	  foreach ($templateFiles[$wxsftw] as $key => $val) {$selectedVersionsType[$val] = $wxsftw.'-plugin'; }
	  if( isset($SITE['WXsoftwareLongName']) ) {
		  $toCheckLegend .= ' (for '.$SITE['WXsoftwareLongName'].' weather software)';
	  }
	  $updateBasePlugin .= ', '.$wxsftw.'-plugin';
  print "</pre>\n";
  print "<h3>Version information for selected <strong>$toCheckLegend</strong> key template files</h3>\n";
  print "<p style=\"border: 2px dotted red; background-color: #FFCC00; padding: 5px;\">";
  print "<strong>Note</strong>: only selected key template files are checked with this script. Files with customary user modifications (Settings.php, Settings-weather.php, top.php, header.php, menubar.php, footer.php, most wx...php files, etc.) and graphics and weather tags files are NOT checked as they either do not contain version information or they are expected to be different from the distribution versions due to normal website  customization.";
  print "</p>\n";
  print "<table style=\"border: 1px;\" cellpadding=\"2\" cellspacing=\"2\">\n";
  print "<tr><th>Script<br/>Origin</th><th>Script<br/>Name</th><th>Installed Script</br>Version Status</th><th>Release Script<br/>Version</th><th>Installed Script<br/>Version</th><th>Installed Script Internal<br/>Version Description</th></tr>\n";
  $earliestDate = '9999-99-99';
  natcasesort($toCheckFiles);
  $idx = 0;
  foreach ($toCheckFiles as $n => $checkFile) {
	  if ($idx % 5 <> 0) { $TRclass = 'row-even'; } else { $TRclass = 'row-odd'; }
	  list($mDate,$vNumber,$vDate,$vInfo,$FileMD5,$fStatus) = chk_file_version($checkFile);
	  $instVer = '';
	  if($vNumber <> '' and $vDate <> '') {$instVer = "V$vNumber - $vDate"; }
	  $distVer = '';
	  if(isset($selectedVersions[$checkFile])) { 
		 list($mstModDate,$mstSize,$mstFileMD5,$mstFversion,$mstFvDate,$mstFvDesc) = 
			explode("\t",$selectedVersions[$checkFile]);
		 $distVer = "V$mstFversion - $mstFvDate";
	  }
	  $fSource = $selectedVersionsType[$checkFile];
	  print "<tr class=\"$TRclass\"><td>$fSource</td><td><strong>$checkFile</strong></td><td>$fStatus</td><td>$distVer</td><td>$instVer</td><td>$vInfo</td></tr>\n";
	  $idx++;
  print "</table>\n";	  
  if($earliestDate <> '9999-99-99') {
	  //found some updates
	 $updateBasePluginDate = date('d-M-Y',strtotime($earliestDate));
	 print "<h3>To update your template set to current script version(s), use <a href=\"http://saratoga-weather.org/wxtemplates/updates.php\"><strong>the updates tool page</strong></a> with a query set for <strong>$updateBasePluginDate</strong> for ";
	 print "<strong>$updateBasePlugin</strong></h3>\n"; 
 print "<pre>\n";
// end of version checking  
} else { // do fetch file checking
// ------------------------------------------------------------------
// file fetch checking
  print '
  <p>This script will check the load times and the ability to save cache files for the included support
  scripts with your template package.</p>
  <pre>
  ';
  print $settingsLoad;
  global $SITE;
  $Lang = 'en';
  $cacheFileDir = './';
  if(isset($SITE['lang'])) {$Lang = $SITE['lang'];}
  if(isset($SITE['cacheFileDir'])) {$cacheFileDir = $SITE['cacheFileDir'];}
  $Tests = array(
  'fcsturlNWS' => 'NWS Forecast URL|forecast.txt|NWSforecasts|2|forecast-0.txt',
  'noaazone'   => 'NWS Warning Zone ATOM/CAP Feed',
  'UVscript'   => 'UV Forecast from temis.nl|uv-forecast.txt',
  'fcsturlEC'  => 'EC Forecast URL|ec-forecast-LL.txt',
  'ecradar'    => 'EC Radar URL',
  'fcsturlWU'  => 'WU Forecast URL|WU-forecast-LL.txt|WUforecasts|1|WU-forecast-0-LL.txt',
  'EUwarningURL' => 'METEOalarm warning URL|meteoalarm-LL.txt'
  );
  print "<p>Using lang=$Lang as default for testing</p>\n";
  global $TOTALtime;
  $TOTALtime = $T_stop - $T_start;
  foreach ($Tests as $sname => $sval) {
	$useAltUrl = '';
	list($sdescript,$cname,$altvar,$altindex,$altcname) = explode('|',$sval.'||||');
	if($altvar <> '' and isset($SITE[$altvar][0]) ) { // fetch first entry in multiforecast variable
	   $vars = explode('|',$SITE[$altvar][0].'||||');
	   $useAltUrl = $vars[$altindex];
       $cname = preg_replace('|LL|',$Lang,$altcname);
	} else {
	  $cname = preg_replace('|LL|',$Lang,$cname);
	if(isset($SITE[$sname])) {
	  print "--checking $sdescript --\n";
	  $TESTURL = $SITE[$sname];
	  $CACHE = '';
	  if($useAltUrl) {
		 $TESTURL = $useAltUrl;
	  }
	  if($cname <> '') {$CACHE = $cacheFileDir.$cname; }
	  if($sname == 'UVscript') {
		$TESTURL = "http://www.temis.nl/uvradiation/nrt/uvindex.php?lon=" .$SITE['longitude'] . "&lat=" . $SITE['latitude'];
	  }
	  if($sname == 'noaazone') {
		$TESTURL = "http://alerts.weather.gov/cap/wwaatmget.php?zone=".$SITE['noaazone'];
		$CACHE = $cacheFileDir."atom-advisory-".$SITE['noaazone'].".txt";
	  }
	  if($sname == 'ecradar') {
		$TESTURL = 'http://weatheroffice.gc.ca/radar/index_e.html?id=' . $SITE['ecradar'];
		$CACHE = "../radar/ec-radar-en.txt";
	  }
	  if($useAltUrl <> '') {
		  print "Using first entry in \$SITE['$altvar'] for test.\n";
	  } else {
		  print "Using \$SITE['$sname'] entry for test.\n";
	  }
	  print "URL: $TESTURL\n";
	  if($CACHE <> '') {
		print "Cache: $CACHE\n";
	  }
	  $rawhtml = fetchUrlWithoutHanging($TESTURL,false);
	  $RC = '';
	  if (preg_match("|^HTTP\/\S+ (.*)\r\n|",$rawhtml,$matches)) {
		  $RC = trim($matches[1]);
	  }
	  print "RC=$RC, bytes=" . strlen($rawhtml) . "\n";
	  $i = strpos($rawhtml,"\r\n\r\n");
	  $headers = substr($rawhtml,0,$i-1);
	  $content = substr($rawhtml,$i+2);
	  $html = explode("\n",$content);  // put HTML area as separate lines
	  $age = -1;
	  $udate = 'unknown';
	  $budate = 0;
	  if(preg_match('|\nLast-Modified: (.*)\n|Ui',$headers,$match)) {
		  $udate = trim($match[1]);
		  $budate = strtotime($udate);
		  $age = abs(time() - $budate); // age in seconds
		  print "Data age=$age sec '$udate'\n";
	  }
	  if (!preg_match('| 200 |',$headers)) {
		print "------------\nHeaders returned:\n\n$headers\n------------\n";
		print "\nSkipped cache write test to $CACHE file.\n";
	  } elseif ($CACHE <> '') {
		  $fp = fopen($CACHE,'w');
		  if($fp) {
			$write = fputs($fp, $rawhtml); 
			fclose($fp);
			print "Wrote ".strlen($rawhtml). " bytes to $CACHE successfully.\n";
		  } else {
			print "Error: Unable to write to $CACHE file.\n";
		  }
	  } 
			  
	  print "--end $sdescript check --\n\n";
  print "\nTotal time taken = " . sprintf("%01.3f",round($TOTALtime,3)) . " secs.\n";
  $time_finished = time();
  $time_elapsed = $time_finished - $time_init;
  print "Elapsed $time_elapsed seconds.\n\n";
} // end fetch-time-checking
print "PHP Version " . phpversion() . "\n";
print "Memory post_max_size " . ini_get('post_max_size') . " bytes.\n";
print "Memory usage " . memory_get_usage() . " bytes.\n";
print "Memory peak usage " . memory_get_peak_usage() . " bytes.\n";
</pre>
<?php
// ------------------------------------------------------------------
function printHeaders() {
  global $Version;
  print '<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1" />
<title>Saratoga-weather.org Template Test Utility</title>
<meta http-equiv="Robots" content="noindex,nofollow,noarchive" />
<meta name="author" content="Ken True" />
<meta name="copyright" content="&copy; 2012, Saratoga-Weather.org" />
<meta name="Description" content="Saratoga-weather.org AJAX/PHP website template diagnostic utility." />
<style type="text/css">
.row-odd  {background-color: #96C6F5; }
.row-even {background-color: #EFEFEF; }
.num { 
        float: left; 
        color: gray; 
        font-size: 13px;    
        font-family: monospace; 
        text-align: right; 
        margin-right: 6pt; 
        padding-right: 6pt; 
        border-right: 1px solid gray;
body {margin: 0px; margin-left: 5px;} 
td {    vertical-align: top;
        font-size: 13px;    
        font-family: monospace; 
code {white-space: nowrap;
        font-size: 13px;    
        font-family: monospace; 
</style>
</head>
<body style="background-color:#FFFFFF; font-family:Arial, Helvetica, sans-serif;font-size: 10pt;">
<h3>'.$Version.'</h3>
// ------------------------------------------------------------------
// Retrieve information about the currently installed GD library
// script by phpnet at furp dot com (08-Dec-2004 06:59)
//   from the PHP usernotes about gd_info
function describeGDdyn() {
 echo "\n<ul><li>GD support: ";
 if(function_exists("gd_info")){
   echo "<span style=\"color:#00ff00\">yes</span>";
   $info = gd_info();
   $keys = array_keys($info);
   for($i=0; $i<count($keys); $i++) {
	  if(is_bool($info[$keys[$i]])) {
		echo "</li>\n<li>" . $keys[$i] .": " . yesNo($info[$keys[$i]]);
	  } else {
		echo "</li>\n<li>" . $keys[$i] .": " . $info[$keys[$i]];
	  }
   }
 } else { 
   echo "<span style=\"color:#ff0000\">NO</span>"; 
 echo "</li></ul>\n";
// ------------------------------------------------------------------
function yesNo($bool){
 if($bool) {
	 return "<span style=\"color:#00ff00\"> yes</span>";
 } else {
	 return "<span style=\"#ff0000\"> no</span>";
// ------------------------------------------------------------------
function microtime_float()
   list($usec, $sec) = explode(" ", microtime());
   return ((float)$usec + (float)$sec);
// ------------------------------------------------------------------
// get contents from one URL and return as string 
 function fetchUrlWithoutHanging($url,$useFopen) {
// thanks to Tom at Carterlake.org for this script fragment
  global $Debug, $needCookie,$timeStamp,$TOTALtime;
  $overall_start = time();
  if (! $useFopen) {
   // Set maximum number of seconds (can have floating-point) to wait for feed before displaying page without feed
   $numberOfSeconds=2;   
   // Suppress error reporting so Web site visitors are unaware if the feed fails
   error_reporting(0);
   // Extract resource path and domain from URL ready for fsockopen
   $FullUrl = $url;
   $urlParts = parse_url($url);
   $domain = $urlParts['host'];
   if(isset($urlParts['port'])) {
      $port   = $urlParts['port'];
   } else { 
      $port   = 80;
   }
   $resourcePath = $urlParts['path'];
   $resourcePath = preg_replace('|nocache|','?'.$timeStamp,$resourcePath);
   if(isset($urlParts['query']))    {$resourcePath .= "?" . $urlParts['query']; }
   if(isset($urlParts['fragment'])) {$resourcePath .= "#" . $urlParts['fragment']; }
   $T_start = microtime_float();
   $hostIP = gethostbyname($domain);
   $T_dns = microtime_float();
   $ms_dns  = sprintf("%01.3f",round($T_dns - $T_start,3));
   $Debug .= "<!-- GET $resourcePath HTTP/1.1 \n      Host: $domain  Port: $port IP=$hostIP-->\n";
   print "GET $resourcePath HTTP/1.1 \n      Host: $domain  Port: $port IP=$hostIP\n";
   // Establish a connection
   $socketConnection = fsockopen($hostIP, $port, $errno, $errstr, $numberOfSeconds);
   $T_connect = microtime_float();
   $T_puts = 0;
   $T_gets = 0;
   $T_close = 0;
   if (!$socketConnection)
       {
       // You may wish to remove the following debugging line on a live Web site
       $Debug .= "<!-- Network error: $errstr ($errno) -->\n";
       print "Network error: $errstr ($errno)\n";
       }    // end if
   else    {
       $xml = '';
	   $getString = "GET $resourcePath HTTP/1.1\r\nHost: $domain\r\nConnection: Close\r\n\r\n";
//	   if (isset($needCookie[$domain])) {
//	     $getString .= $needCookie[$domain] . "\r\n";
//		 print " used '" . $needCookie[$domain] . "' for GET \n";
//	   }
	   
//	   $getString .= "\r\n";
//	   print "Sending:\n$getString\n\n";
       fputs($socketConnection, $getString);
       $T_puts = microtime_float();
	   
       // Loop until end of file
	   $TGETstats = array();
	   $TGETcount = 0;
       while (!feof($socketConnection))
           {
		   $T_getstart = microtime_float();
           $xml .= fgets($socketConnection, 8192);
		   $T_getend = microtime_float();
		   $TGETcount++;
		   $TGETstats[$TGETcount] = sprintf("%01.3f",round($T_getend - $T_getstart,3));
           }    // end while
       $T_gets = microtime_float();
       fclose ($socketConnection);
       $T_close = microtime_float();
       }    // end else
   $ms_connect = sprintf("%01.3f",round($T_connect - $T_dns,3));
   if($T_close > 0) {
      $ms_puts = sprintf("%01.3f",round($T_puts - $T_connect,3));
	  $ms_gets = sprintf("%01.3f",round($T_gets - $T_puts,3));
	  $ms_close = sprintf("%01.3f",round($T_close - $T_gets,3));
	  $ms_total = sprintf("%01.3f",round($T_close - $T_start,3)); 
    } else {
       $ms_puts = 'n/a';
	  $ms_gets = 'n/a';
	  $ms_close = 'n/a';
	  $ms_total = sprintf("%01.3f",round($T_connect - $T_start,3)); 
   }
   $Debug .= "<!-- HTTP stats: conn=$ms_connect put=$ms_puts get=$ms_gets close=$ms_close total=$ms_total secs -->\n";
   print  "HTTP stats: dns=$ms_dns conn=$ms_connect put=$ms_puts get($TGETcount blocks)=$ms_gets close=$ms_close total=$ms_total secs \n";
//   foreach ($TGETstats as $block => $mstimes) {
//     print "HTTP Block $block took $mstimes\n";
//   }
   $TOTALtime+= ($T_close - $T_start);
   $overall_end = time();
   $overall_elapsed =   $overall_end - $overall_start;
   print "fetch function elapsed= $overall_elapsed secs.\n"; 
   return($xml);
 } else {
//   print "<!-- using file function -->\n";
   $T_start = microtime_float();
   $xml = implode('',file($url));
   $T_close = microtime_float();
   $ms_total = sprintf("%01.3f",round($T_close - $T_start,3)); 
   $Debug .= "<!-- file() stats: total=$ms_total secs -->\n";
   print " file() stats: total=$ms_total secs.\n";
   $TOTALtime+= ($T_close - $T_start);
   $overall_end = time();
   $overall_elapsed =   $overall_end - $overall_start;
   print "fetch function elapsed= $overall_elapsed secs.\n"; 
   return($xml);
   }    // end fetchUrlWithoutHanging
// ------------------------------------------------------------------
#---------------------------------------------------------  
# load file to string for version checking
#--------------------------------------------------------- 
function chk_file_version($inFile) {
   global $selectedVersions,$earliestDate;
   if(!file_exists($inFile)) {
	  return(
	  array('n/a','','',"<strong>$inFile file not found.</strong>",'','<strong>File not installed</strong>')); 
   }
   $mDate = date('Y-m-d H:i T',filemtime($inFile));
   $tContents = file_get_contents($inFile);
   $vInfo = scan_for_version_string($tContents);
	$tContents = preg_replace('|\r|is','',$tContents);
	$FileMD5 = md5($tContents);
   if(strlen($vInfo) > 120) {$vInfo = '(not specified)'; }
   if(preg_match('!(\d+\.\d+)[^\d]*(\d+-\S{3}-\d{4})!',$vInfo,$matches)) {
	$vNumber = $matches[1];
	$vDate = date('Y-m-d',strtotime($matches[2]));
   } else {
	$vNumber = 'n/a';
	$vDate = 'n/a';
   }
   $fStatus = 'unknown';
   if(isset($selectedVersions[$inFile])) { 
     list($mstModDate,$mstSize,$mstFileMD5,$mstFversion,$mstFvDate,$mstFvDesc) = 
	    explode("\t",$selectedVersions[$inFile]);
	 $MD5matches = ($mstFileMD5 == $FileMD5)?true:false;
	 $VerMatches = ($vNumber <> 'n/a' and $mstFversion <> 'n/a' and 
	    strcmp($vNumber,$mstFversion) === 0)?true:false;
	 if ($MD5matches) { $fStatus = "Current<!-- MD5 matched -->"; }
	 if ($fStatus == 'unknown' and $VerMatches) {$fStatus = 'Current<!-- version matched -->'; }
	 if ($fStatus == 'unknown' and $vNumber <> 'n/a' and $mstFversion <> 'n/a' and 
	    strcmp($vNumber,$mstFversion) < 0) {
		  $fStatus = "<strong>Need update to<br/>V$mstFversion - $mstFvDate</strong>"; 
		  $earliestDate = ($mstFvDate < $earliestDate)?$mstFvDate:$earliestDate;
	 if ($fStatus == 'unknown' and $vNumber <> 'n/a' and $mstFversion <> 'n/a' and 
	    strcmp($vNumber,$mstFversion) > 0) {
		  $fStatus = "<strong>Installed version is more recent</strong>"; 
	 if ($fStatus == 'unknown' and $mstFversion <> 'n/a' and $mstFvDate <> 'n/a') {
		  $fStatus = "<strong>Need update to<br/>V$mstFversion - $mstFvDate</strong>";
		  $earliestDate = ($mstFvDate < $earliestDate)?$mstFvDate:$earliestDate;
   }
   return(array($mDate,$vNumber,$vDate,$vInfo,$FileMD5,$fStatus));
#---------------------------------------------------------  
# scan for a version string in a PHP/JS/TXT file
#---------------------------------------------------------  
function scan_for_version_string($input) {
	$vstring = '(not specified)';
	preg_match('/\$\S*Version\s+=\s+[\'|"]([^\'|"]+)[\'|"];/Uis',$input,$matches);
	if(isset($matches[1])) {
		$vstring = $matches[1];
//		print "--- 1:found $vstring ---\n";
		return(trim($vstring));
    
	preg_match_all('/Version (.*)\n/Uis',$input,$matches);
//	print "---2:Matches\n".print_r($matches,true)."\n---\n";
	if (isset($matches[1]) and count($matches[1]) > 0) {
		for($i=count($matches[1])-1;$i>=0;$i--) {
           $tstring = $matches[1][$i];		    
		   if(preg_match('|\d+-\S{3}-\d{4}|',$tstring)) {
		     $vstring = $tstring;
//		     print "--- 2:found $vstring ---\n";
		     return(trim($vstring));
		   }
	   }
	return($vstring);
} // end scan_for_version_string
#---------------------------------------------------------  
# load the to-scan array with the filenames to look for
#---------------------------------------------------------  
function load_selected_array($key) {
	global $MasterVersions,$selectedVersions;
	$n = 0;
	foreach ($MasterVersions as $k => $data) {
		list($base,$file) = explode("\t",$k);
		if($base == $key) {
			$selectedVersions["$file"] = $data;
			$n++;
	print "..loaded $n version descriptors for $key.\n";
	return;
} // end load_selected_array
#---------------------------------------------------------  
# display file with PHP highlighting and line numbers
#---------------------------------------------------------  
function highlight_file_num($file) 
  $lines = implode(range(1, count(file($file))), '<br />'); 
  $content = highlight_file($file, true); 
    echo "<table><tr><td class=\"num\">\n$lines\n</td><td>\n$content\n</td></tr></table>";
#---------------------------------------------------------  
# decode unix file permissions
#---------------------------------------------------------  
function decode_permissions($perms) {
  if (($perms & 0xC000) == 0xC000) {
	  // Socket
	  $info = 's';
  } elseif (($perms & 0xA000) == 0xA000) {
	  // Symbolic Link
	  $info = 'l';
  } elseif (($perms & 0x8000) == 0x8000) {
	  // Regular
	  $info = '-';
  } elseif (($perms & 0x6000) == 0x6000) {
	  // Block special
	  $info = 'b';
  } elseif (($perms & 0x4000) == 0x4000) {
	  // Directory
	  $info = 'd';
  } elseif (($perms & 0x2000) == 0x2000) {
	  // Character special
	  $info = 'c';
  } elseif (($perms & 0x1000) == 0x1000) {
	  // FIFO pipe
	  $info = 'p';
  } else {
	  // Unknown
	  $info = 'u';
  // Owner
  $info .= (($perms & 0x0100) ? 'r' : '-');
  $info .= (($perms & 0x0080) ? 'w' : '-');
  $info .= (($perms & 0x0040) ?
			  (($perms & 0x0800) ? 's' : 'x' ) :
			  (($perms & 0x0800) ? 'S' : '-'));
  // Group
  $info .= (($perms & 0x0020) ? 'r' : '-');
  $info .= (($perms & 0x0010) ? 'w' : '-');
  $info .= (($perms & 0x0008) ?
			  (($perms & 0x0400) ? 's' : 'x' ) :
			  (($perms & 0x0400) ? 'S' : '-'));
  // World
  $info .= (($perms & 0x0004) ? 'r' : '-');
  $info .= (($perms & 0x0002) ? 'w' : '-');
  $info .= (($perms & 0x0001) ?
			  (($perms & 0x0200) ? 't' : 'x' ) :
			  (($perms & 0x0200) ? 'T' : '-'));
  return $info;
</body>
</html><?php
############################################################################
# A Project of TNET Services, Inc. and Saratoga-Weather.org (Canada/World-ML template set)
############################################################################
#	Project:	Sample Included Website Design
#	Module:		common.php
#	Purpose:	Provides common functions used throughout the website
# 	Authors:	Kevin W. Reed <kreed@tnet.com>
#				TNET Services, Inc.
#               Ken True <webmaster@saratoga-weather.org>
#               Saratoga-Weather.org
# 	Copyright:	(c) 1992-2007 Copyright TNET Services, Inc.
############################################################################
# This program is free software; you can redistribute it and/or
# modify it under the terms of the GNU General Public License
# as published by the Free Software Foundation; either version 2
# of the License, or (at your option) any later version.
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
# You should have received a copy of the GNU General Public License
# along with this program; if not, write to the Free Software
# Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA
############################################################################
#	This document uses Tab 4 Settings
############################################################################
require_once("Settings.php");
global $forwardTrans,$reverseTrans,$missingTrans;
############################################################################
# Version 1.04 - 29-Nov-2011 - improved language translations for conditions
# Version 1.05 - 01-Dec-2012 - minor fix to cGetSeasonInfo
# Version 1.06 - 05-Feb-2013 - added UTF-8 conversion features for ISO-8859-n language files
# Version 1.07 - 09-Feb-2013 - added tman1991 cGetMoonInfo() mods for cell.php add-on
$CMNVersion = 'common.php - Version 1.07 - 09-Feb-2013';
# Common Functions
############################################################################
function Mklink($url, $title, $desc, $remote) {
    global $SITE;
    if ($remote) {
        echo "<div class='link'>";
        echo "<a href='${url}' title='${title}' \n";
        echo "$SITE[remote] >";
        echo "$desc</a> <img src=\"./images/offsite.gif\" alt=\"*EXT*\" /></div>";
    } else {
        echo "<a href='${url}' title='${title}'>${desc}</a>";
    }
#####################################################################
function langtrans ( $item ) {
  global $LANGLOOKUP,$missingTrans;
  if(isset($LANGLOOKUP[$item])) {
     echo $LANGLOOKUP[$item];
  } else {
	 if(isset($item) and $item <> '') {$missingTrans[$item] = true; }
     echo $item;
#####################################################################
function langtransstr ( $item ) {
  global $LANGLOOKUP,$missingTrans;
  if(isset($LANGLOOKUP[$item])) {
     return $LANGLOOKUP[$item];
  } else {
	  if(isset($item) and $item <> '') {$missingTrans[$item] = true; }
	 return $item;
#####################################################################
function langtranssubs ( $item ) {
  global $LANGSUBS;
    reset ($LANGSUBS); // process in order of the file
    $text = $item;
    foreach ($LANGSUBS as $key => $replacement) {
      $text = str_replace($key,$replacement,$text);
    }
	// put back translated text, fixing capitalization for sentence starts (except the first one).
	if(count($LANGSUBS) >=1) {
      $text = preg_replace('!\.\s+([a-z])!es',"'.  ' . strtoupper('\\1')",$text);
    if (isset($_REQUEST['debug']) ) { echo "<!-- translated '$item' to '$text' -->\n"; }
  return($text);
#####################################################################
# load language translation settings (if any)
function load_langtrans () {
  global $LANGLOOKUP, $LANGSUBS, $SITE, $forwardTrans, $reverseTrans, $missingTrans;
  $LANGLOOKUP = array();
  $LANGSUBS = array();
  $forwardTrans = array();
  $reverseTrans = array();
  $missingTrans = array();
  $Status = '';
  $lang = 'en'; // default language
  if (isset($SITE['lang']) ) {    $lang_input = strtolower($SITE['lang']); }
  if (isset($_SESSION['lang'])) { $lang_input = strtolower($_SESSION['lang']); }
  if (isset($_REQUEST['lang'])) { $lang_input = strtolower($_REQUEST['lang']); }
  # allow valid input only
  # allows en, en-us, en-gb, dk, etc.
  if ((isset($lang_input) && preg_match('/^[a-z]{2}$/', $lang_input))
  || (isset($lang_input) && preg_match('/^[a-z]{2}-[a-z]{2}$/', $lang_input)) ) {
    $lang = $lang_input;
  # always store in a PHP Session
  $_SESSION['lang'] = $lang;
  $_REQUEST['lang'] = $lang;  // establish for other scripts too
  $langfile = 'language-' . $lang . '.txt';
  if (! file_exists($langfile) ) {
    $_SESSION['lang'] = 'en';
    $_REQUEST['lang'] = 'en';  // establish for other scripts too
    return; // use english throughout
  $lfile = file($langfile);
  $Status .= "<!-- langfile '$langfile' loading -->\n";
  $langfile = 'language-' . $lang . '-local.txt';
  if (file_exists($langfile)) { // load local translation file if it exists
     $lfile2 = file($langfile); 
	 $Status .= "<!-- langfile '$langfile' loading -->\n";
	 $lfile = array_merge($lfile,$lfile2);
   }
/*  $langfile = 'plaintext-parser-lang-' . $lang . '.txt';
   if (file_exists($langfile)) { // load local translation file if it exists
     $lfile2 = file($langfile); 
	 $Status .= "<!-- langfile '$langfile' loading -->\n";
	 $lfile = array_merge($lfile,$lfile2);
   }
*/  
  $n = 0;
  $nsite = 0;
  $nlang = 0;
  $langDefaultCharset = 'iso-8859-1';  // overall default
  $transtable = get_html_translation_table(HTML_ENTITIES,ENT_NOQUOTES);
  $doLoadTrans = false;
  foreach ($lfile as $rec) {  // process the control file(s)
    $recin = trim($rec);
	if (substr($recin,0,1) <> '#' and $recin <> '') { // process non blank, non comment records
		list($type, $item,$translation) = explode('|',$recin . '|||||');
		$type = trim($type);
		$item = trim($item);
		$translation = trim($translation);
		if (strtolower($type) == 'conditions' and strtolower($item) == 'begin' ) {
		    $doLoadTrans = true;
			continue;
		if (strtolower($type) == 'conditions' and strtolower($item) == 'end' ) {
		    $doLoadTrans = false;
			continue;
		if (isset($type) and strtolower($type) == 'charset' and isset($item)) {
			$SITE['charset'] = trim($item);
			$SITE['langDefaultCharset'] = trim($item); // save for language conversion
			$Status .= "<!-- using charset '" . $SITE['charset'] . "' -->\n";
			continue;
		if ($type == 'langlookup' and $item and $translation) {
			$LANGLOOKUP[$item] = strtr($translation,$transtable);
			$LANGLOOKUP[$item] = $translation;
			$LANGLOOKUP[$item] = preg_replace('|\&amp;nbsp;|Uis','&nbsp;',$LANGLOOKUP[$item]);
			if ($doLoadTrans) {
			   $forwardTrans[$item] = $translation;
			   $reverseTrans[$translation] = $item;
			   $t = ucfirst(strtolower($item));
			   if(strcmp($item,$t) !== 0) {
			     $LANGLOOKUP[$t]= $translation; // add case normalize translation English term
			     $Status .= "<!-- added langlookup|$t|$translation| for '$item' entry -->\n";
			   }
			   $t = strtolower($item);
			   if(strcmp($item,$t) !== 0) {
			     $LANGLOOKUP[$t]= $translation; // add case normalize translation English term
			     $Status .= "<!-- added langlookup|$t|$translation| for '$item' entry -->\n";
			   }
			   $t = ucwords(strtolower($item));
			   if(strcmp($item,$t) !== 0) {
			     $LANGLOOKUP[$t]= $translation; // add case normalize translation English term
			     $Status .= "<!-- added langlookup|$t|$translation| for '$item' entry -->\n";
			   }
			}
			$n++;
			continue;
		if ($type == 'lang' and $item and $translation) {
		  $LANGSUBS[$item] = $translation;
		  $nlang++;
		} 
		if ($type == 'site' and $item and $translation) {
			$SITE[$item] = $translation;
			$nsite++;
			$Status .= "<!-- override site['$item'] = '$translation' -->\n";
			continue;
	} // end if nonblank, non comment
  } // end foreach
  $Status .= "<!-- loaded $n langtrans entries, $nsite site entries -->\n";
  if (isset($SITE['langCharset'][$lang])) {
    $SITE['charset'] = $SITE['langCharset'][$lang];
  $SITE['lang'] = $lang;
  # Change WU Forecast url for language if we have enough data for it
 if(isset($SITE['fcsturlWU']) and isset($SITE['WULanguages'][$lang])) {
    $Status .= "<!-- WU URL is '".$SITE['fcsturlWU']."' -->\n";
     $SITE['fcsturlWU'] = preg_replace('|http://([^\.]+)\.(.*)$|is',
	    "http://".$SITE['WULanguages'][$lang].".\\2",
		$SITE['fcsturlWU']);
	$Status .= "<!-- WU URL set to '".$SITE['fcsturlWU']."' -->\n";
  if (isset($_SESSION['lastLang']) and $_SESSION['lastLang'] <> $lang) {
    $_REQUEST['force'] = "1";  // trick WU-forecast into cache reload with new language
	$Status .= "<!-- lastLang ='".$_SESSION['lastLang'].
	"' - requesting cache refresh for WU-forecast for $lang=".$SITE['WULanguages'][$lang]." -->\n";
   $_SESSION['lastLang'] = $lang;
   $SITE['xlateCOP'] = langtransstr('Chance of precipitation');
   if(file_exists("language-".$lang.".js")) { // load extra translations from JavaScript spec
     $langEntries = array(
	   'langMonths',
	   'langDays',
	   'langUVWords',
	   'langBaroTrend',
	   'langBeaufort',
	   'langHeatWords',
	   'langWindDir'
	 );
	 $Status .= "<!-- loading language-$lang.js -->\n";  
     $jsfile = file("language-".$lang.".js");
     $recs = implode('',$jsfile);
     $recs = preg_replace('|new Array|Uis','array',$recs);
     $recs = preg_replace('|var lang(\S+)\s+|Uis','$JSV[\'lang\\1\']',$recs);
	 $recs = preg_replace('|langTransLookup|Uis','// langTransLookup',$recs);
	 if(isset($_REQUEST['show']) and $_REQUEST['show'] == 'eval') {
		 print "<!-- eval request is\n".print_r($recs,true)."\n-->\n";
     eval($recs);
     foreach ($langEntries as $l) {
        if(isset($JSV[$l])) {
  		  $SITE[$l] = $JSV[$l];
		  $Status .= "<!-- $l='" . print_r($SITE[$l],true) . " -->\n";
	    } else {
		  $Status .= "<!-- '$l' not found in JS conversion -->\n";
     }
	 if(isset($SITE['langWindDir'])) { // use JavaScript winddir defs for PHP too
	   $cardinalDirs = array(
	   	"N", "NNE", "NE", "ENE", 
		"E", "ESE", "SE", "SSE", 
		"S", "SSW", "SW", "WSW", 
		"W", "WNW", "NW", "NNW");
	   foreach ($SITE['langWindDir'] as $n => $trans) {
	     $LANGLOOKUP[$cardinalDirs[$n]] = $trans;
	   
	   }
	 } // if translated winddirs exist
	 if(isset($SITE['langHeatWords'])) { // use JavaScript defs for PHP too
	   $engWords = array(
	    'Unknown', 'Extreme Heat Danger', 'Heat Danger', 'Extreme Heat Caution', 'Extremely Hot', 
		'Uncomfortably Hot',  'Hot', 'Warm', 
		'Comfortable', 
		'Cool', 'Cold', 'Uncomfortably Cold', 'Very Cold', 'Extreme Cold'
		);
	   foreach ($SITE['langHeatWords'] as $n => $trans) {
	     $LANGLOOKUP[$engWords[$n]] = $trans;
	   
	   }
	 } // if translated langHeatWords exist
	 if(isset($SITE['langBeaufort'])) { // use JavaScript defs for PHP too
	   $engWords = array ( /* Beaufort 0 to 12 in array */
		 "Calm", "Light air", "Light breeze", "Gentle breeze", "Moderate breeze", "Fresh breeze",
		 "Strong breeze", "Near gale", "Gale", "Strong gale", "Storm",
		 "Violent storm", "Hurricane"
	   );
	   foreach ($SITE['langBeaufort'] as $n => $trans) {
	     $LANGLOOKUP[$engWords[$n]] = $trans;
	   
	   }
	 } // if translated langBeaufort exists
	 if(isset($SITE['langMonths'])) { // use JavaScript defs for PHP too
	   $engWords = array ( /* English Months */
	   "January","February","March","April","May",
			"June","July","August","September","October","November","December");
	   foreach ($SITE['langMonths'] as $n => $trans) {
	     $LANGLOOKUP[ucwords($engWords[$n])] = $trans;
	   
	   }
     } // if translated langMonths exists
	 if(isset($SITE['langDays'])) { // use JavaScript defs for PHP too
	   $engWords = array ( /* English Days */
	   "Sun","Mon","Tue","Wed","Thu","Fri","Sat","Sun");
	   foreach ($SITE['langDays'] as $n => $trans) {
	     $LANGLOOKUP[ucwords($engWords[$n])] = $trans;
	   
	   }
     } // if translated langDays exists
	 if(isset($SITE['langBaroTrend'])) { // use JavaScript defs for PHP too
	   $engWords = array ( /* English Baro Trend */
	   "Steady", "Rising Slowly", "Rising Rapidly", "Falling Slowly", "Falling Rapidly");
	   foreach ($SITE['langBaroTrend'] as $n => $trans) {
	     $LANGLOOKUP[$engWords[$n]] = $trans;
//	     $Status .= "<!-- baro '".$engWords[$n]."'='$trans' -->\n";
	   }
     } // if translated langBaroTrend exists
   }
   $Status .= "<!-- load_langtrans finished -->\n";
   if (isset($_REQUEST['debug']) ) { echo $Status; }
} // end load_langtrans function
#####################################################################
#####################################################################
# convert language translation to UTF-8
function set_langtrans_UTF8 () {
  global $LANGLOOKUP, $LANGSUBS, $SITE, $forwardTrans, $reverseTrans;
  if($SITE['charset'] == 'UTF-8') {
	  if (isset($_REQUEST['debug']) ) { echo "<!-- set_langtrans_UTF8 no conversion performed -- already in UTF-8 -->\n"; }
	  $SITE['origCharset'] = $SITE['charset'];
	  return; // nothing to do
  $Debug = '';
  // convert the existing $LANGLOOKUP array to UTF-8
  $sceCharset = $SITE['charset'];
  $SITE['convertJS'] = true;  // indicate that the language-LL.js is to be converted too
  foreach ($LANGLOOKUP as $english => $trans) {
	  $LANGLOOKUP[$english] = iconv($sceCharset,'UTF-8//TRANSLIT',$trans);
  $Debug .= "<!-- set_langtrans_UTF8 - converted '$sceCharset' to 'UTF-8' for ".count($LANGLOOKUP). " langtrans entries -->\n";
  // now convert the other likely used items created by load_langtrans
       $langEntries = array(
	   'langMonths',
	   'langDays',
	   'langUVWords',
	   'langBaroTrend',
	   'langBeaufort',
	   'langHeatWords',
	   'langWindDir'
	 );
  foreach ($langEntries as $idx => $key) {
	  if(isset($SITE[$key])) {
		  foreach ($SITE[$key] as $n => $val) {
			  $SITE[$key][$n] = iconv($sceCharset,'UTF-8//TRANSLIT',$val);
		  }
		  $Debug .= "<!-- set_langtrans_UTF8 - converted ".count($SITE[$key])." SITE $key for UTF-8 -->\n";
	  }
  if(count($forwardTrans)>0) {
	foreach ($forwardTrans as $english => $trans) {
		$forwardTrans[$english] = iconv($sceCharset,'UTF-8//TRANSLIT',$trans);
	$Debug .= "<!-- set_langtrans_UTF8 - converted forwardTrans to 'UTF-8' for ".count($forwardTrans). " langtrans entries -->\n";
    
  $SITE['origCharset'] = $sceCharset; // remember the original character set
  $SITE['charset'] = 'UTF-8'; // change our default character set
  if (isset($_REQUEST['debug']) ) { echo $Debug; }
}  // end set_langtrans_UTF8 function
#####################################################################
function print_language_selects() {
	global $SITE;
	if(isset($SITE['languageSelectDropdown']) and $SITE['languageSelectDropdown'] ) {
		$stuff = print_language_selects_dropdown();
	} else {
		$stuff = print_language_selects_linear();
	return $stuff;
#####################################################################
# this function by mchallis prints (language selection flags or language selection text links)
# based on the setting $SITE['useLanguageFlags'] true or false
function print_language_selects_linear() {
 global $SITE;
 $string1 = '';
 $arr = $SITE['installedLanguages'];
 if (is_array($arr)){
    foreach ($arr as $k => $v) {
      if($SITE['useLanguageFlags'] == true) {
           $string .= '<a href="'. $_SERVER['PHP_SELF'] .'?lang='.$k.'" title="'. $v .'">
<img src="'. $SITE['imagesDir'] . 'flag-'. $k .'.gif" alt="'. $v .'" title="'. $v .'" border="0" /></a>
      }else{
           $k_print = $k;
           if ($_REQUEST['lang'] == $k) {
              $k_print = "[$k]";
            }
            $string .= '<a href="'. $_SERVER['PHP_SELF'] .'?lang='.$k.'" title="'. $v .'">
<span style="font-size: 10px">'. $k_print .'</span></a>
     }
    } // end foreach
    # text links use bracket for indicator, image links print lang code
    if($SITE['useLanguageFlags'] == true) {
          $string1 = '<span style="font-size: 10px">' . langtransstr('Language') .': ' . $_REQUEST['lang'] . '</span> ' . $string;
    }else{
          $string1 = '<span style="font-size: 10px">' . langtransstr('Language') .': </span>' . $string;
    }
 } // end is_array
 return $string1;
}// end print_language_selects_linear function
#####################################################################
# this function by mchallis prints (language selection flags or language selection text links)
# based on the setting $SITE['useLanguageFlags'] true or false
# Revised by K. True for option box display instead.
function print_language_selects_dropdown() {
 global $SITE;
 $use_onchange_submit = true;
 if(isset($SITE['languageSelectButton']) ) {
	$use_onchange_submit = ! $SITE['languageSelectButton'];
 $string1 = '';
 $arr = $SITE['installedLanguages'];
 if (is_array($arr)){
    $string = '
<form method="get" id="languageSelector" name="lang_select" action="#">
    # text links use bracket for indicator, image links print lang code
    if($SITE['useLanguageFlags'] == true) {
          $string .= '<span style="font-size: 10px">' . langtransstr('Language') .':&nbsp; </span>';
    }else{
          $string .= '<span style="font-size: 10px">' . langtransstr('Language') .':&nbsp; </span>';
    }
if($use_onchange_submit == false) {
$string .= '<select id="lang" name="lang" style="font-size: 9px; padding: 0px; margin: 0px;">
else {
$string .= '<select id="lang" name="lang"  style="font-size: 9px" onchange="this.form.submit();">';
$flag = '';
    foreach ($arr as $k => $v) {
	  if($_REQUEST['lang'] == $k) {
	    $selected = ' selected="selected"';
        $flag = '<img src="'. $SITE['imagesDir'] . 'flag-'. $k .'.gif" alt="'. $v .'" title="'. $v .'" style="border: 0" />';
	  } else {
	    $selected = '';
	  }
      $string .= '<option value="'.$k.'"'.$selected.'>'.$v.'</option>'."\n";
    } // end foreach
	$string .= '</select>
if($use_onchange_submit == false) {
  $string .= '<input type="submit" name="' . langtransstr('Set') .'" value="' . langtransstr('Set') .'" style="font-size: 9px" />';
} else {
  $string .= '<noscript><input type="submit" name="' . langtransstr('Set') .'" value="' . langtransstr('Set') .'" style="font-size: 9px" /></noscript>';
    # text links use bracket for indicator, image links print lang code
    if($SITE['useLanguageFlags'] == true) {
          $string .= '  ' . $flag;
    }else{
          $string .= ' ';
    }
$string .= '
</form>';
 } // end is_array
 return $string;
}// end print_language_selects_dropdown function
# load the language translation file and set up $LANGLOOKUP array
load_langtrans();
// -----------------------------------------------------------------------------
// MOON FUNTIONS  Courtesy of Bashewa Weather, PHP conversion by WebsterWeather from ajaxWDwx.js V9.13 (WD)                                                             .
// -----------------------------------------------------------------------------
function cGetMoonInfo ($hh=0,$mm=0,$ss=0,$MM=0,$DD=0,$YY=0) { // very crude way of determining moon phase (but very accurate)
// ------------- start of USNO moon data -----------------------------
// PHP tables generated from USNO moon ephemeris data http://aa.usno.navy.mil/data/docs/MoonPhase.php
// using the one-year at a time query option
// Ken True - Saratoga-weather.org generated by USNO-moonphases.php - Version 1.00 - 15-Jan-2011 on 15 January 2011 21:48 EST
$newMoons = array( // unixtime values in UTC/GMT
/* 2009 */ /* 26-Jan-2009 07:55 */ 1232956500, 1235525700, 1238083560, 1240629780, 1243167060, 1245699300, 1248230100, 1250762520, 1253299440, 1255843980, 1258398840, 1260964920, 
/* 2010 */ /* 15-Jan-2010 07:11 */ 1263539460, 1266115860, 1268686860, 1271248140, 1273799040, 1276341300, 1278877200, 1281409680, 1283941800, 1286477040, 1289019120, 1291570560, 
/* 2011 */ /* 04-Jan-2011 09:03 */ 1294131780, 1296700260, 1299271560, 1301841120, 1304405460, 1306962180, 1309510440, 1312051200, 1314587040, 1317121740, 1319658960, 1322201400, 1324749960, 
/* 2012 */ /* 23-Jan-2012 07:39 */ 1327304340, 1329863700, 1332427020, 1334992680, 1337557620, 1340118120, 1342671840, 1345218840, 1347761460, 1350302520, 1352844480, 1355388120, 
/* 2013 */ /* 11-Jan-2013 19:44 */ 1357933440, 1360480800, 1363031460, 1365586500, 1368145680, 1370706960, 1373267640, 1375825860, 1378380960, 1380933240, 1383483000, 1386030120, 
/* 2014 */ /* 01-Jan-2014 11:14 */ 1388574840, 1391117880, 1393660800, 1396205100, 1398752040, 1401302400, 1403856480, 1406414520, 1408975980, 1411539240, 1414101420, 1416659520, 1419212160, 
/* 2015 */ /* 20-Jan-2015 13:14 */ 1421759640, 1424303220, 1426844160, 1429383420, 1431922380, 1434463500, 1437009840, 1439563980, 1442126460, 1444694760, 1447264020, 1449829740, 
/* 2016 */ /* 10-Jan-2016 01:30 */ 1452389400, 1454942340, 1457488440, 1460028240, 1462562940, 1465095540, 1467630060, 1470170640, 1472720580, 1475280660, 1477849080, 1480421880, 1482994380, 
/* 2017 */ /* 28-Jan-2017 00:07 */ 1485562020, 1488121080, 1490669820, 1493208960, 1495741440, 1498271460, 1500803100, 1503340200, 1505885400, 1508440320, 1511005320, 1513578600, 
/* 2018 */ /* 17-Jan-2018 02:17 */ 1516155420, 1518728700, 1521292260, 1523843820, 1526384880, 1528918980, 1531450080, 1533981480, 1536516060, 1539056820, 1541606520, 1544167200, 
/* 2019 */ /* 06-Jan-2019 01:28 */ 1546738080, 1549314180, 1551888240, 1554454200, 1557009900, 1559556120, 1562094960, 1564629120, 1567161420, 1569695160, 1572233880, 1574780700, 1577337180, 
/* 2020 */ /* 24-Jan-2020 21:42 */ 1579902120, 1582471920, 1585042080, 1587608760, 1590169140, 1592721660, 1595266380, 1597804920, 1600340400, 1602876660, 1605416820, 1607962560, 
/* 2021 */ /* 13-Jan-2021 05:00 */ 1610514000, 1613070360, 1615630860, 1618194660, 1620759600, 1623322380, 1625879760, 1628430600, 1630975920, 1633518300, 1636060440, 1638603780, 
/* 2022 */ /* 02-Jan-2022 18:33 */ 1641148380, 1643694360, 1646242500, 1648794240, 1651350480, 1653910200, 1656471120, 1659030900, 1661588220, 1664142840, 1666694940, 1669244220, 1671790620, 
/* 2023 */ /* 21-Jan-2023 20:53 */ 1674334380, 1676876760, 1679419380, 1681963920, 1684511580, 1687063020, 1689618720, 1692178680, 1694742000, 1697306100, 1699867620
 ); /* end of newMoons array */
$Q1Moons = array( // unixtime values in UTC/GMT
/* 2009 */ /* 02-Feb-2009 23:13 */ 1233616380, 1236152760, 1238682840, 1241210640, 1243740120, 1246274880, 1248818400, 1251373320, 1253940600, 1256517720, 1259098740, 1261676160, 
/* 2010 */ /* 23-Jan-2010 10:53 */ 1264243980, 1266799320, 1269342000, 1271874000, 1274398980, 1276921740, 1279447800, 1281982440, 1284529800, 1287091620, 1289666340, 1292248740, 
/* 2011 */ /* 12-Jan-2011 11:31 */ 1294831860, 1297408680, 1299973500, 1302523500, 1305059580, 1307585460, 1310106540, 1312628880, 1315157940, 1317698100, 1320251880, 1322819520, 
/* 2012 */ /* 01-Jan-2012 06:15 */ 1325398500, 1327983000, 1330564860, 1333136460, 1335693420, 1338236160, 1340767800, 1343292960, 1345816440, 1348342860, 1350876720, 1353421860, 1355980740, 
/* 2013 */ /* 18-Jan-2013 23:45 */ 1358552700, 1361133060, 1363714020, 1366288260, 1368851640, 1371403440, 1373944680, 1376477760, 1379005680, 1381532520, 1384063020, 1386601920, 
/* 2014 */ /* 08-Jan-2014 03:39 */ 1389152340, 1391714520, 1394285220, 1396859460, 1399432500, 1402000740, 1404561540, 1407113400, 1409656260, 1412191920, 1414723680, 1417255560, 1419791460, 
/* 2015 */ /* 27-Jan-2015 04:48 */ 1422334080, 1424884440, 1427442180, 1430006100, 1432574340, 1435143720, 1437710640, 1440271860, 1442825940, 1445373060, 1447914420, 1450451640, 
/* 2016 */ /* 16-Jan-2016 23:26 */ 1452986760, 1455522360, 1458061380, 1460606340, 1463158920, 1465719000, 1468284720, 1470853260, 1473421740, 1475987580, 1478548260, 1481101380, 
/* 2017 */ /* 05-Jan-2017 19:47 */ 1483645620, 1486181940, 1488713520, 1491244740, 1493779620, 1496320920, 1498870260, 1501428180, 1503994380, 1506567180, 1509142920, 1511715780, 1514280000, 
/* 2018 */ /* 24-Jan-2018 22:20 */ 1516832400, 1519373340, 1521905700, 1524433500, 1526960940, 1529491860, 1532029920, 1534578480, 1537139700, 1539712920, 1542293640, 1544874540, 
/* 2019 */ /* 14-Jan-2019 06:45 */ 1547448300, 1550010360, 1552559220, 1555095960, 1557623520, 1560146340, 1562669700, 1565199060, 1567739400, 1570294020, 1572862980, 1575442680, 
/* 2020 */ /* 03-Jan-2020 04:45 */ 1578026700, 1580607720, 1583179020, 1585736460, 1588279080, 1590809400, 1593332160, 1595853120, 1598378280, 1600912500, 1603459380, 1606020300, 1608594060, 
/* 2021 */ /* 20-Jan-2021 21:01 */ 1611176460, 1613760420, 1616337600, 1618901940, 1621451580, 1623988440, 1626516660, 1629040740, 1631565540, 1634095500, 1636634760, 1639186500, 
/* 2022 */ /* 09-Jan-2022 18:11 */ 1641751860, 1644328200, 1646909100, 1649486880, 1652055660, 1654613280, 1657160040, 1659697560, 1662228480, 1664756040, 1667284620, 1669818960, 1672363200, 
/* 2023 */ /* 28-Jan-2023 15:19 */ 1674919140, 1677485100, 1680057120, 1682630400, 1685200920, 1687765800, 1690322820, 1692871020, 1695411120, 1697945340, 1700477400
 ); /* end of Q1Moons array */
$fullMoons = array( // unixtime values in UTC/GMT
/* 2009 */ /* 09-Feb-2009 14:49 */ 1234190940, 1236739080, 1239288960, 1241841660, 1244398320, 1246958460, 1249520100, 1252080180, 1254636600, 1257189240, 1259739000, 1262286780, 
/* 2010 */ /* 30-Jan-2010 06:18 */ 1264832280, 1267375080, 1269915900, 1272457080, 1275001620, 1277551800, 1280108160, 1282669500, 1285233420, 1287797760, 1290360420, 1292919180, 
/* 2011 */ /* 19-Jan-2011 21:21 */ 1295472060, 1298018160, 1300558200, 1303094640, 1305630540, 1308168840, 1310712000, 1313261820, 1315819620, 1318385160, 1320956160, 1323527760, 
/* 2012 */ /* 09-Jan-2012 07:30 */ 1326094200, 1328651640, 1331199540, 1333739940, 1336275300, 1338808320, 1341341520, 1343878020, 1346421480, 1348975140, 1351540140, 1354113960, 1356690060, 
/* 2013 */ /* 27-Jan-2013 04:38 */ 1359261480, 1361823960, 1364376420, 1366919820, 1369455900, 1371987120, 1374516900, 1377049500, 1379589180, 1382139480, 1384701360, 1387272480, 
/* 2014 */ /* 16-Jan-2014 04:52 */ 1389847920, 1392421980, 1394989680, 1397547720, 1400094960, 1402632660, 1405164300, 1407694140, 1410226680, 1412765460, 1415312580, 1417868820, 
/* 2015 */ /* 05-Jan-2015 04:53 */ 1420433580, 1423004940, 1425578700, 1428149100, 1430710920, 1433261940, 1435803600, 1438339380, 1440873300, 1443408600, 1445947500, 1448491440, 1451041860, 
/* 2016 */ /* 24-Jan-2016 01:46 */ 1453599960, 1456165200, 1458734460, 1461302640, 1463865240, 1466420520, 1468968960, 1471512360, 1474052700, 1476591780, 1479131520, 1481673900, 
/* 2017 */ /* 12-Jan-2017 11:34 */ 1484220840, 1486773180, 1489330440, 1491890880, 1494452520, 1497013800, 1499573160, 1502129460, 1504681380, 1507228800, 1509772980, 1512316020, 
/* 2018 */ /* 02-Jan-2018 02:24 */ 1514859840, 1517405220, 1519951860, 1522499820, 1525049880, 1527603540, 1530161580, 1532722800, 1535284560, 1537843920, 1540399500, 1542951540, 1545500880, 
/* 2019 */ /* 21-Jan-2019 05:16 */ 1548047760, 1550591580, 1553132580, 1555672320, 1558213860, 1560760260, 1563313080, 1565872140, 1568435580, 1571000880, 1573565640, 1576127520, 
/* 2020 */ /* 10-Jan-2020 19:21 */ 1578684060, 1581233580, 1583776080, 1586313300, 1588848300, 1591384320, 1593924240, 1596470340, 1599024120, 1601586300, 1604155740, 1606728600, 1609298880, 
/* 2021 */ /* 28-Jan-2021 19:16 */ 1611861360, 1614413820, 1616957280, 1619494260, 1622027640, 1624560000, 1627094220, 1629633720, 1632182100, 1634741820, 1637312220, 1639888500, 
/* 2022 */ /* 17-Jan-2022 23:48 */ 1642463280, 1645030560, 1647587820, 1650135300, 1652674440, 1655207520, 1657737480, 1660268160, 1662803940, 1665348900, 1667905320, 1670472480, 
/* 2023 */ /* 06-Jan-2023 23:08 */ 1673046480, 1675621680, 1678192800, 1680755640, 1683308040, 1685850120, 1688384340, 1690914720, 1693445700, 1695981420, 1698524640, 1701076560
 ); /* end of fullMoons array */
$Q3Moons = array( // unixtime values in UTC/GMT
/* 2009 */ /* 16-Feb-2009 21:37 */ 1234820220, 1237398420, 1239975360, 1242545160, 1245104100, 1247651580, 1250189700, 1252721760, 1255251360, 1257782160, 1260317580, 
/* 2010 */ /* 07-Jan-2010 10:39 */ 1262860740, 1265413680, 1267976520, 1270546620, 1273119300, 1275689580, 1278254100, 1280811540, 1283361720, 1285905120, 1288442760, 1290976560, 1293509880, 
/* 2011 */ /* 26-Jan-2011 12:57 */ 1296046620, 1298589960, 1301141220, 1303699620, 1306263120, 1308829680, 1311397320, 1313963640, 1316525940, 1319081400, 1321628940, 1324169280, 
/* 2012 */ /* 16-Jan-2012 09:08 */ 1326704880, 1329239040, 1331774700, 1334314200, 1336859220, 1339411260, 1341971280, 1344538500, 1347110100, 1349681580, 1352248560, 1354807860, 
/* 2013 */ /* 05-Jan-2013 03:58 */ 1357358280, 1359899760, 1362433980, 1364963760, 1367493240, 1370026680, 1372567980, 1375119780, 1377682500, 1380254100, 1382830800, 1385407680, 1387979280, 
/* 2014 */ /* 24-Jan-2014 05:20 */ 1390540800, 1393089300, 1395625560, 1398153120, 1400677140, 1403203140, 1405735680, 1408278360, 1410833100, 1413400320, 1415978100, 1418561460, 
/* 2015 */ /* 13-Jan-2015 09:46 */ 1421142360, 1423713000, 1426268880, 1428810240, 1431340560, 1433864520, 1436387040, 1438912980, 1441446840, 1443992760, 1446553440, 1449128400, 
/* 2016 */ /* 02-Jan-2016 05:30 */ 1451712600, 1454297280, 1456873860, 1459437420, 1461986940, 1464523920, 1467051540, 1469574000, 1472096460, 1474624560, 1477163640, 1479717180, 1482285360, 
/* 2017 */ /* 19-Jan-2017 22:13 */ 1484863980, 1487446380, 1490025480, 1492595820, 1495153980, 1497699180, 1500233160, 1502759700, 1505283900, 1507811100, 1510346160, 1512892260, 
/* 2018 */ /* 08-Jan-2018 22:25 */ 1515450300, 1518018840, 1520594400, 1523171820, 1525745340, 1528309920, 1530863460, 1533406680, 1535942220, 1538473500, 1541004000, 1543537140, 1546076040, 
/* 2019 */ /* 27-Jan-2019 21:10 */ 1548623400, 1551180480, 1553746200, 1556317080, 1558888380, 1561455960, 1564017480, 1566572160, 1569120060, 1571661540, 1574197860, 1576731420, 
/* 2020 */ /* 17-Jan-2020 12:58 */ 1579265880, 1581805020, 1584351240, 1586904960, 1589464980, 1592029440, 1594596540, 1597164300, 1599729960, 1602290340, 1604843160, 1607387760, 
/* 2021 */ /* 06-Jan-2021 09:37 */ 1609925820, 1612460220, 1614994200, 1617530520, 1620071400, 1622618640, 1625173860, 1627737360, 1630307580, 1632880620, 1635451500, 1638016080, 1640571840, 
/* 2022 */ /* 25-Jan-2022 13:41 */ 1643118060, 1645655520, 1648186620, 1650714960, 1653244980, 1655781060, 1658326680, 1660883760, 1663451520, 1666026900, 1668605220, 1671180960, 
/* 2023 */ /* 15-Jan-2023 02:10 */ 1673748600, 1676304060, 1678846080, 1681377060, 1683901680, 1686425460, 1688953680, 1691490480, 1694038860, 1696600080, 1699173420, 1701755340
 ); /* end of Q3Moons array */
// ------------- end of USNO moon data -----------------------------
   if ($hh==0) $hh=idate("H");
   if ($mm==0) $mm=idate("i");
   if ($ss==0) $ss=idate("s");
   if ($MM==0) $MM=idate("m");
   if ($DD==0) $DD=idate("d");
   if ($YY==0) $YY=idate("Y");
   $date = mktime($hh,$mm,$ss,$MM,$DD,$YY);  // Unix date from local time
   @$info->date = $date;
   $info->datetxt = gmdate('D, d-M-Y H:i T',$date);
   if ($date < $newMoons[1]) {
	   $info->error = "Date must be after " .date("r",$newMoons[1]);
	   return $info;
   }
   if ($date > $newMoons[count($newMoons)-1]) {
	   $info->error = "Date must be before ".date("r",$newMoons[count($newMoons)-1]);
	   return $info;
   }
   foreach ($newMoons as $mi=>$newMoon) { // find next New Moon from given date
      if ($newMoon>$date) {break;}
   }
   // Get Moon dates
   $NM = $newMoons [$mi-1]; // previous new moon
   $Q1 = $Q1Moons  [$mi-1]; // 1st Q end
   $Q2 = $fullMoons[$mi-1]; // 2nd Q end - Full moon
   $Q3 = $Q3Moons  [$mi-1]; // 3rd Q end
   $Q4 = $newMoons [$mi  ]; // 4th Q end - next new moon
   // Divide each phase into 7 periods (4 phases x 7 = 28 periods)
   $Q1p = round(($Q1-$NM)/7);
   $Q2p = round(($Q2-$Q1)/7);
   $Q3p = round(($Q3-$Q2)/7);
   $Q4p = round(($Q4-$Q3)/7);
   // Determine start and end times for major phases (lasting 1 period of 28)
   $NMe = $NM+($Q1p/2);                         //  0% .... - New moon
   $Q1s = $Q1-($Q1p/2);  $Q1e = $Q1+($Q2p/2);   // 50% 1stQ - First Quarter
   $Q2s = $Q2-($Q2p/2);  $Q2e = $Q2+($Q3p/2);   //100% 2ndQ - Full moon
   $Q3s = $Q3-($Q3p/2);  $Q3e = $Q3+($Q4p/2);   // 50% 3rdQ - Last Quarter
   $NMs = $Q4-($Q4p/2);                         //  0% 4thQ - New Moon
// Determine age of moon in days since last new moon
   $age = ($date - $newMoons[$mi-1])/86400; // age in days since last new moon
   $dd  = intval($age);
   $hh  = intval(($age-$dd)*24);
   $mm  = intval(((($age-$dd)*24)-$hh)*60);
   $info->age = $dd.' days, '.$hh.' hours, '.$mm.' minutes';
// Illumination
   switch (true) { // Determine moon age in degrees (0 to 360)
   case ($date<=$Q1): $ma = ($date - $NM) * (90 / ($Q1 - $NM))+  0; break; // NM to Q1
   case ($date<=$Q2): $ma = ($date - $Q1) * (90 / ($Q2 - $Q1))+ 90; break; // Q1 to FM
   case ($date<=$Q3): $ma = ($date - $Q2) * (90 / ($Q3 - $Q2))+180; break; // FM to Q3
   case ($date<=$Q4): $ma = ($date - $Q3) * (90 / ($Q4 - $Q3))+270; break; // Q3 to NM
   }
   $info->ill = abs(round(100*(1+cos($ma*(M_PI/180)))/2)-100);
// Deterime picture number (0-27) and moon phase
   switch (true) {
   case ($date<=$NMe): $pic =  0;                        $ph = 'New Moon';          break;
   case ($date< $Q1s): $pic =  1  +(($date-$NMe)/$Q1p);  $ph = 'Waxing Crescent';   break; // Waxing Crescent
   case ($date<=$Q1e): $pic =  7;                        $ph = 'First Quarter';     break;
   case ($date< $Q2s): $pic =  7.5+(($date-$Q1e)/$Q2p);  $ph = 'Waxing Gibbous';    break;
   case ($date<=$Q2e): $pic = 14;                        $ph = 'Full Moon';         break;
   case ($date< $Q3s): $pic = 14.5+(($date-$Q2e)/$Q3p);  $ph = 'Waning Gibbous';    break;
   case ($date<=$Q3e): $pic = 21;                        $ph = 'Last Quarter';      break;
   case ($date< $NMs): $pic = 21.5+(($date-$Q3e)/$Q4p);  $ph = 'Waning Crescent';   break; // Waning Crecent
   default           : $pic =  0;                        $ph = 'New Moon';
   }
   $info->pic   = round($pic);
   $info->phase = $ph;
   $info->NM    = $NM;
   $info->NMGMT    = gmdate('D, d-M-Y H:i T',$NM);
   $info->NMWD    = gmdate('H:i T d F Y',$NM);
   $info->Q1    = $Q1;
   $info->Q1GMT    = gmdate('D, d-M-Y H:i T',$Q1);
   $info->Q1WD    = gmdate('H:i T d F Y',$Q1);
   $info->FM    = $Q2;
   $info->FMGMT    = gmdate('D, d-M-Y H:i T',$Q2);
   $info->FMWD    = gmdate('H:i T d F Y',$Q2);
   $info->Q3    = $Q3;
   $info->Q3GMT    = gmdate('D, d-M-Y H:i T',$Q3);
   $info->Q3WD    = gmdate('H:i T d F Y',$Q3);
   $info->Q4    = $Q4;
   $info->Q4GMT    = gmdate('D, d-M-Y H:i T',$Q4);
   $info->Q4WD    = gmdate('H:i T d F Y',$Q4);
   $info->FM2   = $fullMoons[$mi];
   $info->FM2GMT   = gmdate('D, d-M-Y H:i T',$fullMoons[$mi]);
   $info->FM2WD   = gmdate('H:i T d F Y',$fullMoons[$mi]);
#  tman1991 mods for cell.php add-on 
   $moonD = array($NM       , $Q1            , $Q2        , $Q3           , $Q4       , $Q1Moons[$mi]  , $fullMoons[$mi], $Q3Moons[$mi] );
   $moonP = array("New Moon", "First Quarter", "Full Moon", "Last Quarter", "New Moon", "First Quarter", "Full Moon"    , "Last Quarter");
   $moonI = array("NM"      , "Q1"           , "FM"       , "Q3"          , "NM"      , "Q1"           , "FM"           , "Q3"          );
   foreach($moonD as $key=>$mdate) {
      if ($mdate>$date) {
         $info->moons[] = array ($moonP[$key], $mdate, $moonI[$key], date("r",$mdate));
	  }
   }
#  end tman1991 mods for cell.php add-on 
return $info;
// -----------------------------------------------------------------------------
// SEASON FUNCTIONS  return season dates based on USNO dates for Spring, Summer, Fall, Winter                                                             .
// -----------------------------------------------------------------------------
function cGetSeasonInfo ($YY=0) { // feed it the year
  $seasonList = array( // seasons from USNO in WD date format
  // year => 'Spring|Summer|Autumn|Winter'
   '2009' => '11:44 GMT 20 March 2009|05:46 GMT 21 June 2009|21:19 GMT 22 September 2009|17:47 GMT 21 December 2009|',
   '2010' => '17:32 GMT 20 March 2010|11:28 GMT 21 June 2010|03:09 GMT 23 September 2010|23:38 GMT 21 December 2010|',
   '2011' => '23:21 GMT 20 March 2011|17:16 GMT 21 June 2011|09:05 GMT 23 September 2011|05:30 GMT 22 December 2011|',
   '2012' => '05:14 GMT 20 March 2012|23:09 GMT 20 June 2012|14:49 GMT 22 September 2012|11:12 GMT 21 December 2012|',
   '2013' => '11:02 GMT 20 March 2013|05:04 GMT 21 June 2013|20:44 GMT 22 September 2013|17:11 GMT 21 December 2013|',
   '2014' => '16:57 GMT 20 March 2014|10:51 GMT 21 June 2014|02:29 GMT 23 September 2014|23:03 GMT 21 December 2014|',
   '2015' => '22:45 GMT 20 March 2015|16:38 GMT 21 June 2015|08:21 GMT 23 September 2015|04:48 GMT 22 December 2015|',
   '2016' => '04:30 GMT 20 March 2016|22:34 GMT 20 June 2016|14:21 GMT 22 September 2016|10:44 GMT 21 December 2016|',
   '2017' => '10:29 GMT 20 March 2017|04:24 GMT 21 June 2017|20:02 GMT 22 September 2017|16:28 GMT 21 December 2017|',
   '2018' => '16:15 GMT 20 March 2018|10:07 GMT 21 June 2018|01:54 GMT 23 September 2018|22:23 GMT 21 December 2018|',
   '2019' => '21:58 GMT 20 March 2019|15:54 GMT 21 June 2019|07:50 GMT 23 September 2019|04:19 GMT 22 December 2019|',
   '2020' => '03:50 GMT 20 March 2020|21:44 GMT 20 June 2020|13:31 GMT 22 September 2020|10:02 GMT 21 December 2020|',
  ); // end of seasonList
  if($YY<2009) {$YY = idate('Y');} // use current year 
  $info = new stdClass();
  if(!isset($seasonList[$YY])) {
	   $info->error = "Year $YY not in list";
	   return $info;
   }
   list($spring,$summer,$fall,$winter) = explode('|',$seasonList[$YY]);
   $info->spring = $spring;
   $info->summer = $summer;
   $info->fall   = $fall;
   $info->winter = $winter;
   return $info;
?><?php
#-------------------------------------------------------------------------------------
# Program: conds.php
# Purpose: receive GET mode conditions from Meteobridge HTTP Push Services
#    and save for MBrealtime.txt
#    to use in ajaxMBwx.js script for AJAX Conditions updates.
# Author: Ken True - webmaster@saratoga-weather.org
#-------------------------------------------------------------------------------------
// Version 1.00 - 08-Mar-2013 - initial release
// Version 1.01 - 09-Mar-2013 - fixed handling for missing solar and UV sensors
// Version 1.02 - 11-Mar-2013 - additional mbsystem- sensor values processed
// Version 1.03 - 17-Mar-2013 - added ability to make SteelSeries MBrealtimegauges.txt file
// Version 1.04 - 21-Mar-2013 - fixed rain unit conversion bug
// Version 1.05 - 04-Jun-2013 - added tag for Steel Series gauges support
$Version = "conds.php Version 1.05 - 04-Jun-2013";
// settings ------------------------------
$gaugeFile = "./MBrealtimegauges.txt"; // relative path/name of realtimegauges file
$uomTemp = '&deg;C';   // ='&deg;C', ='&deg;F'
$uomBaro = ' hPa';    // =' hPa', =' mb', =' inHg'
$uomWind = ' m/s';     // =' km/h', =' kts', =' m/s', =' mph'
$uomRain = ' mm';      // =' mm', =' in'
$WDdateMDY = true;     // =true  dates are 'month/day/year'
//                     // =false dates are 'day/month/year'
$ourTZ = "America/Los_Angeles";  //NOTE: this *MUST* be set correctly to
// translate UTC times to your LOCAL time for the displays.
$timeOnlyFormat = 'H:i';          // Euro format hh:mm  (hh=00..23);
// ---------------------------------------
// end of settings -- no further changes to the source are needed below
$doDebug = false;
// allow viewing of generated source
if (isset($_REQUEST["sce"]) and strtolower($_REQUEST["sce"]) == "view" ) {
//--self downloader --
   $filenameReal = __FILE__;
   $download_size = filesize($filenameReal);
   header("Pragma: public");
   header("Cache-Control: private");
   header("Cache-Control: no-cache, must-revalidate");
   header("Content-type: text/plain");
   header("Accept-Ranges: bytes");
   header("Content-Length: $download_size");
   header("Connection: close");
   readfile($filenameReal);
   exit;
$cacheFileDir = './';                     // default cache file directory
$cacheName = "MBconditions.txt";           // locally cached conditions string from Meteobridge
if(file_exists('Settings.php')) { include_once('Settings.php'); }
// overrides from Settings.php if available
global $SITE;
if(isset($SITE['cacheFileDir']))     { $cacheFileDir = $SITE['cacheFileDir']; }
$outFileName = $cacheFileDir.$cacheName;
if(isset($SITE['realtimefile']))     { $outFileName = $SITE['realtimefile']; }
$Data = array();
if( isset($_GET['d']) ) {
  if($doDebug) {
	$fp = fopen('./MBrealtime-args.txt', "w");
	if ($fp) {
	  $write = fputs($fp, 'd='.trim($_GET['d']));
	  fclose($fp);
  $Data = explode(',', trim($_GET['d']) );
  /*
Field	Cumulus	MB Realtime
0	date format=dd/mm/yy	[DD]/[MM]/[YYYY]
1	 timehhmmss	[hh]:[mm]:[ss]
2	 temp	[th0temp-act]
3	 hum	[th0hum-act]
4	 dew	[th0dew-act]
5	 wspeed	[wind0avgwind-act]
6	 wlatest	[wind0wind-act]
7	 bearing	[wind0dir-act]
8	 rrate	[rain0rate-act]
9	 rfall	[rain0total-daysum]
10	 press	[thb0seapress-act]
11	 currentwdir	[wind0dir-act]
12	 beaufortnumber	[wind0wind-act=bft.0]
13	 windunit	m/s
14	 tempunitnodeg	C
15	 pressunit	hPa
16	 rainunit	mm
17	 windrun	--
18	 presstrendval	[thb0seapress-val60:--]
19	 rmonth	[rain0total-monthsum]
20	 ryear	[rain0total-yearsum]
21	 rfallY	[rain0total-ydaysum]
22	 intemp	[thb0temp-act]
23	 inhum	[thb0hum-act]
24	 wchill	[wind0chill-act]
25	 temptrendval	[th0temp-val60:--]
26	 tempTH	[th0temp-dmax]
27	 TtempTH	[th0temp-dmaxtime]
28	 tempTL	[th0temp-dmin]
29	 TtempTL	[th0temp-dmintime]
30	 windTM	[wind0avgwind-dmax]
31	 TwindTM	[wind0avgwind-dmaxtime]
32	 wgustTM	[wind0wind-dmax]
33	 TwgustTM	[wind0wind-dmaxtime]
34	 pressTH	[thb0seapress-dmax]
35	 TpressTH	[thb0seapress-dmaxtime]
36	 pressTL	[thb0seapress-dmin]
37	 TpressTL	[thb0seapress-dmintime]
38	 version	[mbsystem-swversion:--]
39	 build	[mbsystem-buildnum:--]
40	 wgust	[wind0wind-max10]
41	 heatindex	--
42	 humidex	--
43	 UV	[uv0index-act:--]
44	 ET	--
45	 SolarRad	[sol0rad-act:--]
46	 avgbearing	[wind0dir-avg10:--]
47	 rhour	[rain0total-sum60]
48	 forecastnumber	--
49	 isdaylight	[mbsystem-daynightflag:--]
50	 SensorContactLost	--
51	 wdir	[wind0dir-avg10:--]
52	 cloudbasevalue	--
53	 cloudbaseunit	m
54	 apptemp	--
55	 SunshineHours	[mbsystem-daylength:--]
56	 CurrentSolarMax	--
57	 IsSunny	--
--- added
58   UVTH [uv0index-dmax:--]
  */ 
// Fill in missing data were possible
# Humidex
  $Data[42] = conds_calcHumidex ($Data[2],$Data[3],'C','C');
# Heat Index
  $Data[41] = conds_calcHeatIndex ($Data[2],$Data[3],'C','C');
# Times from timestamps
  $Data[27] = conds_timeOnly($Data[27]);  
  $Data[29] = conds_timeOnly($Data[29]);  
  $Data[31] = conds_timeOnly($Data[31]);  
  $Data[33] = conds_timeOnly($Data[33]);  
  $Data[35] = conds_timeOnly($Data[35]);  
  $Data[37] = conds_timeOnly($Data[37]);
# 1 hour changes if available
  # Barotrend in hPa
  if($Data[18] !== '--') { $Data[18] = sprintf("%01.1F",$Data[10]-$Data[18]); }  
  # Temperature trend in C
  if($Data[25] !== '--') { $Data[25] = sprintf("%01.1F",$Data[2]-$Data[25]); }  
# wind direction
  $Data[11] = conds_deg2dir ($Data[11]);
  $Data[51] = conds_deg2dir ($Data[51]);
# day/night flag
  $td = trim($Data[49]);
  if($td <> '--') {
	 $Data[49] = ($Data[49] == 'D')?'1':'0'; 
# version fixer
 if(strlen($Data[38]) < 1) { $Data[38] = '--'; }
# now clean it up and repack to save the realtime file
  foreach ($Data as $i => $val) {
	  // replace missing values with '--' for results.
	  if(strlen($val) < 1 ) { $Data[$i] = '--'; }
	  $Data[$i] = preg_replace('| |','_',$Data[$i]); // fix embedded blanks if any
  $out = join(' ',$Data); 
  $MBrealtimeStatus = '';
  $fp = fopen($outFileName, "w");
  if ($fp) {
	$write = fputs($fp, $out);
	fclose($fp);
  } else {
	$perms = fileperms($outFileName);
	$permsdecoded = conds_decode_permissions($perms);
	$permsoctal = substr(sprintf('%o', $perms), -4);
	$MBrealtimeStatus =  "<p>Failure: unable to write $outFileName permissions=$permsdecoded [$permsoctal] </p>\n";
} else {
	print "<p>Failure: No weather conditions provided.</p>\n";
	return;
#-------------------------------------------------------------------------------------
# now create the SteelSeries JSON file using realtime+MBtags.php data
#-------------------------------------------------------------------------------------
if(isset($SITE['WXtags']) and file_exists($SITE['WXtags'])) {
	include_once($SITE['WXtags']);
} else {
	return;
if(isset($SITE['realtimegauges'])) {$gaugeFile = $SITE['realtimegauges'];}
// re-get the raw-data array in units of C,m/s,hPa,mm for updates.
// the MBtags will already be in station-prefered units so use directly.
$Data = explode(',', trim($_GET['d']) );
$Status = "// $Version \n";
/* needed output (with Cumulus tags cited below) is:
{"date":"<#date format=hh:nn>",
"temp":"<#temp>",
"tempTL":"<#tempTL>",
"tempTH":"<#tempTH>",
"intemp":"<#intemp>",
"dew":"<#dew>",
"dewpointTL":"<#dewpointTL>",
"dewpointTH":"<#dewpointTH>",
"apptemp":"<#apptemp>",
"apptempTL":"<#apptempTL>",
"apptempTH":"<#apptempTH>",
"wchill":"<#wchill>",
"wchillTL":"<#wchillTL>",
"heatindex":"<#heatindex>",
"heatindexTH":"<#heatindexTH>",
"humidex":"<#humidex>",
"wlatest":"<#wlatest>",
"wspeed":"<#wspeed>",
"wgust":"<#wgust>",
"wgustTM":"<#wgustTM>",
"bearing":"<#bearing>",
"avgbearing":"<#avgbearing>",
"press":"<#press>",
"pressTL":"<#pressTL>",
"pressTH":"<#pressTH>",
"pressL":"<#pressL>",
"pressH":"<#pressH>",
"rfall":"<#rfall>",
"rrate":"<#rrate>",
"rrateTM":"<#rrateTM>",
"hum":"<#hum>",
"humTL":"<#humTL>",
"humTH":"<#humTH>",
"inhum":"<#inhum>",
"SensorContactLost":"<#SensorContactLost>",
"forecast":"<#forecastenc>",
"tempunit":"<#tempunitnodeg>",
"windunit":"<#windunit>",
"pressunit":"<#pressunit>",
"rainunit":"<#rainunit>",
"temptrend":"<#temptrend>",
"TtempTL":"<#TtempTL>",
"TtempTH":"<#TtempTH>",
"TdewpointTL":"<#TdewpointTL>",
"TdewpointTH":"<#TdewpointTH>",
"TapptempTL":"<#TapptempTL>",
"TapptempTH":"<#TapptempTH>",
"TwchillTL":"<#TwchillTL>",
"TheatindexTH":"<#TheatindexTH>",
"TrrateTM":"<#TrrateTM>",
"ThourlyrainTH":"<#ThourlyrainTH>",
"LastRainTipISO":"<#LastRainTipISO>",
"hourlyrainTH":"<#hourlyrainTH>",
"ThumTL":"<#ThumTL>",
"ThumTH":"<#ThumTH>",
"TpressTL":"<#TpressTL>",
"TpressTH":"<#TpressTH>",
"presstrendval":"<#presstrendval>",
"Tbeaufort":"<#Tbeaufort>",
"TwgustTM":"<#TwgustTM>",
"windTM":"<#windTM>",
"bearingTM":"<#bearingTM>",
"timeUTC":"<#timeUTC format=yyyy,m,d,h,m,s>",
"BearingRangeFrom10":"<#BearingRangeFrom10>",
"BearingRangeTo10":"<#BearingRangeTo10>",
"UV":"<#UV>",
"UVTH":<#UVTH>",
"SolarRad":"<#SolarRad>",
"CurrentSolarMax":"<#CurrentSolarMax>",
"domwinddir":"<#domwinddir>",
"WindRoseData":[<#WindRoseData>],
"version":"<#version>",
"build":"<#build>",
"ver":"9"}
# Set timezone in PHP5/PHP4 manner
if (!function_exists('date_default_timezone_set')) {
  putenv("TZ=" . $ourTZ);
  } else {
  date_default_timezone_set("$ourTZ");
$sTempUOM = $SITE['uomTemp'];
$sWindUOM = $SITE['uomWind'];
$sBaroUOM = $SITE['uomBaro'];
$sRainUOM = $SITE['uomRain'];
// Note: $Data[] has info in C,m/s,hPa,mm irrespective of site selections.
# Humidex
  $Data[42] = conds_calcHumidex ($Data[2],$Data[3],$uomTemp,$sTempUOM);
# Heat Index
  $Data[41] = conds_calcHeatIndex ($Data[2],$Data[3],$uomTemp,$sTempUOM);
# Times from timestamps
  $Data[27] = conds_timeOnly($Data[27]);  
  $Data[29] = conds_timeOnly($Data[29]);  
  $Data[31] = conds_timeOnly($Data[31]);  
  $Data[33] = conds_timeOnly($Data[33]);  
  $Data[35] = conds_timeOnly($Data[35]);  
  $Data[37] = conds_timeOnly($Data[37]);
# 1 hour changes if available
  # input Barotrend in hPa
  if($Data[18] !== '--') { 
    $Data[18] = conds_convertBaro($Data[10]-$Data[18],$uomBaro,$sBaroUOM); 
  }  
  # Temperature trend in C
  if($Data[25] !== '--') { 
    $Data[25] = conds_convertTempRate($Data[2]-$Data[25],$uomTemp,$sTempUOM);
  }  
# wind direction
//  $Data[11] = conds_deg2dir ($Data[11]);
//  $Data[51] = conds_deg2dir ($Data[51]);
// Assemble the JSON data array for output
$JSONdata = array();
$JSONdata["date"] 	= $Data[1]; // (this is really 'time') WD Sample= '3:39 PM'
$JSONdata["dateFormat"] = ($WDdateMDY)?'m/d/y':'d/m/y'; // WD Sample= 'm/d/y'
$JSONdata["temp"] 	= conds_convertTemp($Data[2],$uomTemp,$sTempUOM); // WD Sample= '64.7
$JSONdata["tempTL"] = conds_convertTemp($Data[28],$uomTemp,$sTempUOM); // WD Sample= '34.4
$JSONdata["tempTH"] = conds_convertTemp($Data[26],$uomTemp,$sTempUOM); // WD Sample= '64.7
$JSONdata["intemp"] = conds_convertTemp($Data[22],$uomTemp,$sTempUOM); // WD Sample= '73.2'
$JSONdata["dew"] 	= conds_convertTemp($Data[4],$uomTemp,$sTempUOM); // WD Sample= '34.9
$JSONdata["dewpointTL"] = $WX['th0dew-dmin']; // WD Sample= '30.1 
$JSONdata["dewpointTH"] = $WX['th0dew-dmax']; // WD Sample= '40.8 
// Note: Meteobridge does not provide apparent temperature .. we substitute Humidex
$JSONdata["apptemp"] =  $Data[42]; // WD Sample= '63.4'
$JSONdata["apptempTL"] = $Data[42]; // WD Sample= '32.2'
$JSONdata["apptempTH"] = $Data[42]; // WD Sample= '72.3'
$JSONdata["wchill"] = conds_convertTemp($Data[24],$uomTemp,$sTempUOM); // WD Sample= '64.7
$JSONdata["wchillTL"] = $WX['wind0chill-dmin']; // WD Sample= '34.4 
$JSONdata["heatindex"] = $Data[41]; // WD Sample= '64.7
$JSONdata["heatindexTH"] = $Data[41]; // WD Sample= '64.7 
$JSONdata["humidex"] = $Data[42]; // WD Sample= '61.6
$JSONdata["wlatest"] = conds_convertWind($Data[6],$uomWind,$sWindUOM); // WD Sample= '0.0 mph'
$JSONdata["wspeed"] = conds_convertWind($Data[5],$uomWind,$sWindUOM); // WD Sample= '0.4 mph'
$JSONdata["wgust"] = conds_convertWind($Data[40],$uomWind,$sWindUOM); // WD Sample= '7.0 mph'
$JSONdata["wgustTM"] = conds_convertWind($Data[32],$uomWind,$sWindUOM); // WD Sample= '11.0 mph'
$JSONdata["bearing"] = round($Data[11]); // WD Sample= '292 
$JSONdata["avgbearing"] = round($Data[46]); // WD Sample= '311
$JSONdata["press"] = conds_convertBaro($Data[10],$uomBaro,$sBaroUOM); // WD Sample= '30.138 in.'
$JSONdata["pressTL"] = conds_convertBaro($Data[36],$uomBaro,$sBaroUOM); // WD Sample= '30.124 in.'
$JSONdata["pressTH"] = conds_convertBaro($Data[34],$uomBaro,$sBaroUOM); // WD Sample= '30.229 in.'
$JSONdata["pressL"] = $WX['thb0seapress-amin']; // WD Sample= '26.001'
$JSONdata["pressH"] = $WX['thb0seapress-amax']; // WD Sample= '30.569'
$JSONdata["rfall"] = conds_convertRain($Data[9],$uomRain,$sRainUOM); // WD Sample= '0.00 in.'
$JSONdata["rrate"] = conds_convertRain($Data[8],$uomRain,$sRainUOM); // WD Sample= '0.00'
$JSONdata["rrateTM"] = $WX['rain0rate-dmax']; // WD Sample= '0.000'
$JSONdata["hum"] = $Data[3]; // WD Sample= '33'
$JSONdata["humTL"] = $WX['th0hum-dmin']; // WD Sample= '31'
$JSONdata["humTH"] = $WX['th0hum-dmax']; // WD Sample= '86'
$JSONdata["inhum"] = $Data[23]; // WD Sample= '32'
$JSONdata["SensorContactLost"] = '0'; // WD Sample= '0'
$JSONdata["forecast"] = 'Conditions updated: '.$Data[1]; // WD Sample= 'increasing clouds and warmer. precipitation possible within 12 to 24 hrs. windy.'
$JSONdata["tempunit"] = preg_match('|C|i',$sTempUOM)?'C':'F'; // WD Sample= 'F'
$JSONdata["windunit"] = trim($sWindUOM); // WD Sample= 'mph'
$JSONdata["pressunit"] = trim($sBaroUOM); // WD Sample= 'inHg'
$JSONdata["rainunit"] = trim($sRainUOM); // WD Sample= 'in'
$JSONdata["temptrend"] = conds_convertTempRate($Data[25],$uomTemp,$sTempUOM); // WD Sample= '+1.0 
F/last hr'
$JSONdata["TtempTL"] = $Data[29]; // WD Sample= '7:40 AM'
$JSONdata["TtempTH"] = $Data[27]; // WD Sample= '3:19 PM'
$JSONdata["TdewpointTL"] = conds_timeOnly($WX['th0dew-dmintime']); // WD Sample= '7:40 AM'
$JSONdata["TdewpointTH"] = conds_timeOnly($WX['th0dew-dmaxtime']); // WD Sample= '9:16 AM'
$JSONdata["TapptempTL"] = '00:00'; // WD Sample= '7:13 AM'
$JSONdata["TapptempTH"] = '00:00'; // WD Sample= '1:14 PM'
$JSONdata["TwchillTL"] = conds_timeOnly($WX['wind0chill-dmintime']); // WD Sample= '3:19 PM'
$JSONdata["TheatindexTH"] = 'n/a'; // WD Sample= '3:19 PM'
$JSONdata["TrrateTM"] = '00:00'; // WD Sample= '00:00 AM'
$JSONdata["ThourlyrainTH"] = '00:00'; // conds_convertRain($Data[47],$uomRain,$sRainUOM); // WD Sample= ''
$JSONdata["LastRainTipISO"] = 'n/a'; // WD Sample= '1/12/2013 4:12 AM'
$JSONdata["hourlyrainTH"] = '0.0'; // WD Sample= '0.000'
$JSONdata["ThumTL"] = conds_timeOnly($WX['th0hum-dmintime']); // WD Sample= '3:22 PM'
$JSONdata["ThumTH"] = conds_timeOnly($WX['th0hum-dmaxtime']);; // WD Sample= '8:05 AM'
$JSONdata["TpressTL"] = $Data[37]; // WD Sample= '2:18 PM'
$JSONdata["TpressTH"] = $Data[35]; // WD Sample= '10:09 AM'
$JSONdata["presstrendval"] = $Data[18]; // WD Sample= '-0.019 in. '
$JSONdata["Tbeaufort"] = 'F'.round($Data[12]); // WD Sample= '3'
$JSONdata["TwgustTM"] = $Data[33]; // WD Sample= '2:19 PM'
$JSONdata["windTM"] = conds_convertWind($Data[32],$uomWind,$sWindUOM); // WD Sample= '6.2 mph'
$JSONdata["bearingTM"] = round($Data[46]); // WD Sample= '315'
$fixedTimestamp = strtotime(conds_fixupDate($Data[0],false).' '.$JSONdata["date"]);
$JSONdata["timeUTC"] = gmdate('Y,m,d,H,i,s',$fixedTimestamp); // WD Sample= '2013,01,20,23,39,59'
$JSONdata["BearingRangeFrom10"] = '359'; // WD Sample= '289
$JSONdata["BearingRangeTo10"] = '0'; // WD Sample= '6
$JSONdata["UV"] = $Data[43]; // WD Sample= '0.7'
$JSONdata["UVTH"] = $Data[58]; // WD Sample= '7.7'
$JSONdata["SolarRad"] = $Data[45]; // WD Sample= '267'
$JSONdata["CurrentSolarMax"] = $Data[45]; // WD Sample= '238'
$JSONdata["SolarTM"] = $WX['sol0rad-dmax']; // WD Sample= '560'
$JSONdata["domwinddir"] = conds_deg2dir($Data[46]); // WD Sample= 'Northwesterly'
$JSONdata["WindRoseData"] = '[0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0]';
// Note: Meteobridge does not collect/publish this windrose data 
// a WD Sample='[22.0,23.0,7.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,3.0,233.0,139.0]'
// $uomWindRun = (preg_match('|C|',$uomTemp))?'km/h':'mph';
$JSONdata["windrun"] = '0.0'; // new in ver=9 -- Meteobridge does not collect windrun
$JSONdata["version"] = $Data[38]; // WD Sample= '10.37R'
$JSONdata["build"] = $Data[39]; // WD Sample= '45'
$JSONdata["ver"] = "10"; // constant);
// JSON assembly done.  Output the JSON file+status
if($doDebug) {
	print "<pre>\n";
  } else {
	header("Content-Type: text/plain; charset=ISO-8859-1");
$out = '';
$out .= '{';
$comma = '';
foreach ($JSONdata as $key => $val) {
	$out .= $comma;
	$out .= "\"$key\":\"$val\"";
	$comma = ",\n";
$out .= "}\n";
if($doDebug) { $out .= $Status; }
$MBgaugesStatus = '';
  $fp = fopen($gaugeFile, "w");
  if ($fp) {
	$write = fputs($fp, $out);
	fclose($fp);
  } else {
	$perms = fileperms($gaugeFile);
	$permsdecoded = conds_decode_permissions($perms);
	$permsoctal = substr(sprintf('%o', $perms), -4);
	$MBgaugesStatus =  "<p>Failure: unable to write $gaugeFile permissions=$permsdecoded [$permsoctal] </p>\n";
  if(strlen($MBrealtimeStatus) + strlen($MBgaugesStatus) > 0 ) {
	  print $MBrealtimeStatus."\n".$MBrealtimeStatus."\n";
  } else {
	  print "<p>Success.</p>\n";
return;
#-------------------------------------------------------------------------------------
# MB support function - conds_timeOnly
#-------------------------------------------------------------------------------------
function conds_timeOnly ($indatetime) {
// Return HH:MM (24hr time format)
// expecting
// 0....+....1....+
// 20110622061003
// yyyymmddhhMMss
  return(substr($indatetime,8,2).':'.substr($indatetime,10,2));
#-------------------------------------------------------------------------------------
# MB support function - conds_deg2dir - Convert wind direction degrees to cardinal name
#-------------------------------------------------------------------------------------
function conds_deg2dir ($degrees) {
   // figure out a text value for compass direction
// Given the wind direction, return the text label
// for that value.  16 point compass
   $winddir = $degrees;
   if ($winddir == "--") { return($winddir); }
  if (!isset($winddir)) {
    return "---";
  if (!is_numeric($winddir)) {
	return($winddir);
  $windlabel = array ("N","NNE", "NE", "ENE", "E", "ESE", "SE", "SSE", "S",
	 "SSW","SW", "WSW", "W", "WNW", "NW", "NNW");
  $dir = $windlabel[ fmod((($winddir + 11) / 22.5),16) ];
  return($dir);
} // end function conds_deg2dir
#-------------------------------------------------------------------------------------
# VWS support function - getBeaufort
#-------------------------------------------------------------------------------------
function getBeaufort ($rawwind) {
   global $Debug;
// first convert m/s in MBrealtime to knots
   $WINDkts = round($rawwind * 1.94384);
// return a number for the beaufort scale based on wind in knots
  if ($WINDkts < 1 ) {return(0); }
  if ($WINDkts < 4 ) {return(1); }
  if ($WINDkts < 7 ) {return(2); }
  if ($WINDkts < 11 ) {return(3); }
  if ($WINDkts < 17 ) {return(4); }
  if ($WINDkts < 22 ) {return(5); }
  if ($WINDkts < 28 ) {return(6); }
  if ($WINDkts < 34 ) {return(7); }
  if ($WINDkts < 41 ) {return(8); }
  if ($WINDkts < 48 ) {return(9); }
  if ($WINDkts < 56 ) {return(10); }
  if ($WINDkts < 64 ) {return(11); }
  if ($WINDkts >= 64 ) {return(12); }
  return("0");
} // end getBeaufortNumber
#-------------------------------------------------------------------------------------
# support function - conds_fixupDate
#-------------------------------------------------------------------------------------
function conds_fixupDate ($indate,$WDdateMDY) {
  // input: mm/dd/yyyy or dd/mm/yyyy format 
  global $Status;
  $d = explode('/',$indate);      // expect ##/##/## form
  if(!isset($d[2])) {$d = explode('-',$indate); } // try ##-##-#### form instead
  if ($d[2] > 70 and $d[2] <= 99) {$d[2] += 1900;} // 2 digit dates 70-99 are 1970-1999
  if ($d[2] < 99) {$d[2] += 2000; } // 2 digit dates (left) are assumed 20xx dates.
  if ($WDdateMDY) {
    $new = sprintf('%04d-%02d-%02d',$d[2],$d[0],$d[1]); //  M/D/YYYY -> YYYY-MM-DD
  } else {
    $new = sprintf('%04d-%02d-%02d',$d[2],$d[1],$d[0]); // D/M/YYYY -> YYYY-MM-DD
  $Status .= "// fixupDate in='$indate' out='$new' \n";
  return ($new);
} // end conds_fixupDate
#-------------------------------------------------------------------------------------
# utility functions to handle conversions 
# MB support function - conds_convertTemp
#-------------------------------------------------------------------------------------
function conds_convertTemp ($rawtemp,$inunit,$useunit) {
	 $dpTemp = 1;
	 if(!is_numeric($rawtemp)) { return($rawtemp); } // no conversions for missing values
	 if (preg_match('|F|i',$inunit)) {
		$tempC = ($rawtemp-32.0) / 1.8;
	 } else {
		$tempC = $rawtemp * 1.0;
	 # Temperature now in C
	 if (preg_match('|F|i',$useunit))  { // convert C to F
		return( sprintf("%01.${dpTemp}f",round((1.8 * $tempC) + 32.0,$dpTemp)));
	 } else {  // leave as C
		return (sprintf("%01.${dpTemp}f", round($tempC*1.0,$dpTemp)));
#-------------------------------------------------------------------------------------
# MB support function - conds_convertTempRate
#-------------------------------------------------------------------------------------
function conds_convertTempRate ($rawtemp,$inunit,$useunit) { // convert temperature RATE of change
	 $dpTemp = 1;
	 if(!is_numeric($rawtemp)) { return($rawtemp); } // no conversions for missing values
	 if (preg_match('|F|i',$inunit))  { // convert F to C rate
		return( sprintf("%01.${dpTemp}f",round($rawtemp / 1.8,$dpTemp)));
	 } else {  // leave as C
		return (sprintf("%01.${dpTemp}f", round($rawtemp*1.0,$dpTemp)));
#-------------------------------------------------------------------------------------
# MB support function - conds_conds_convertWind
#-------------------------------------------------------------------------------------
function conds_convertWind  ( $rawwind,$inunit,$useunit) {
   global $Status;
   $using = '';
   $WIND = '';
   $dpWind = 1;
// first convert all winds to knots
   if($rawwind == '--') {return ($rawwind); }
   $WINDkts = 0.0;
   if       (preg_match('/kts/i',$inunit)) {
	   $WINDkts = $rawwind * 1.0;
   } elseif (preg_match('/mph/i',$inunit)) {
	   $WINDkts = $rawwind * 0.8689762;
   } elseif (preg_match('/mps|m\/s/i',$inunit)) {
	   $WINDkts = $rawwind * 1.94384449;
   } elseif  (preg_match('/kmh|km\/h/i',$inunit)) {
	   $WINDkts = $rawwind * 0.539956803;
   } else {
	   $WINDkts = $rawwind * 1.0;
   }
 // now $WINDkts is wind speed in Knots  convert to desired form and decimals
   if (preg_match('/kmh|km\/h|km/i',$useunit)) { // output KMH
        $WIND = sprintf($dpWind?"%02.${dpWind}f":"%d",round($WINDkts * 1.85200,$dpWind));
        $using = 'KMH';
   }
   if (preg_match('/mph/i',$useunit)) {
        $WIND = sprintf($dpWind?"%02.${dpWind}f":"%d",round($WINDkts * 1.15077945,$dpWind));
        $using = 'MPH';
   }
   if (preg_match('/mps|m\/s/i',$useunit)) {
        $WIND = sprintf($dpWind?"%02.${dpWind}f":"%d",round($WINDkts * 0.514444444,$dpWind));
        $using = 'M/S';
   }
   if (preg_match('/kts|kn|kt|knots/i',$useunit)) {
        $WIND = sprintf($dpWind?"%02.${dpWind}f":"%d",round($WINDkts * 1.0,$dpWind));
        $using = 'KTS';
   }
   $Status .= "// convertWind($rawwind m/s) [$WINDkts kts] to '$WIND' $using \n";
   return($WIND);
#-------------------------------------------------------------------------------------
# MB support function - conds_convertBaro
#-------------------------------------------------------------------------------------
function conds_convertBaro ( $rawpress,$inunit,$useunit ) {
     $dpBaro = 1; // for hPa,mb,mm
	 $BARO = 0.0;
	 if(preg_match('|inHg|i',$inunit)) {
		 $BARO = $rawpress  * 33.86388158; // convert to hPa
	 } else {
		 $BARO = $rawpress * 1.0;
	   
	 if (preg_match('/hPa|mb/i',$useunit)) {
		return (sprintf("%02.${dpBaro}f",round($BARO * 1.0,$dpBaro))); // leave in hPa
	 } elseif (preg_match('/mm/i',$useunit)) {
	   return (sprintf("%02.${dpBaro}f",round($BARO * 0.750061561303,$dpBaro)));
	    
	 } else {
		$dpBaro = 2;
		return (sprintf("%02.${dpBaro}f",round($BARO / 33.86388158,$dpBaro))); // inHg
#-------------------------------------------------------------------------------------
# MB support function - conds_calcconvertRain
#-------------------------------------------------------------------------------------
function conds_convertRain ( $rawrain,$inunit,$useunit ) {
   $dpRain = 1; // for mm
   if($rawrain == '--') {return($rawrain); }
   if(preg_match('|in|i',$inunit)) { // convert in->mm
     $RAIN = $rawrain * 25.3970886;
   } else {
	 $RAIN = $rawrain * 1.0;
   }
   # rain now in MM
   if (preg_match('/in/i',$useunit))  {
	   $dpRain = 2;
	  return (sprintf("%02.${dpRain}f",round($RAIN / 25.3970886,$dpRain)));
   } else {
	  return (sprintf("%02.${dpRain}f",round($RAIN * 1.0,$dpRain))); // leave in mm
   }
#-------------------------------------------------------------------------------------
# MB support function - conds_calcHumidex
#-------------------------------------------------------------------------------------
function conds_calcHumidex ($temp,$humidity,$inunit,$useunit) {
// Calculate Humidex from temperature and humidity
// Source of calculation: http://www.physlink.com/reference/weather.cfm	
  global $Debug;
  if(preg_match('|F|i',$inunit)) {
    $T= conds_convertTemp($temp,'F','C');
  } else {
	$T = $temp;
  $H = $humidity;
  $t=7.5*$T/(237.7+$T);
  $et=pow(10,$t);
  $e=6.112*$et*($H/100);
  $humidex=$T+(5/9)*($e-10);
  if ($humidex < $T) {
	 $humidex=$T;
     $Debug .= " set to T, ";
  if(preg_match('|F|i',$useunit)) {
     # convert to F
     $humidex = sprintf("%01.1f",round((1.8 * $humidex) + 32.0,1));	  
  $humidex = round($humidex,1);
  return($humidex);	
#-------------------------------------------------------------------------------------
# MB support function - conds_calcHeatIndex
#-------------------------------------------------------------------------------------
function conds_calcHeatIndex ($temp,$humidity,$inunit,$useunit) {
// Calculate Heat Index from temperature and humidity
// Source of calculation: http://woody.cowpi.com/phpscripts/getwx.php.txt	
  global $Debug;
  if(preg_match('|C|i',$inunit)) {
    $tempF = round(1.8 * $temp + 32,1);
  } else {
	$tempF = round($temp,1);
  $rh = $humidity;
  // Calculate Heat Index based on temperature in F and relative humidity (65 = 65%)
  if ($tempF > 79 && $rh > 39) {
	  $hiF = -42.379 + 2.04901523 * $tempF + 10.14333127 * $rh - 0.22475541 * $tempF * $rh;
	  $hiF += -0.00683783 * pow($tempF, 2) - 0.05481717 * pow($rh, 2);
	  $hiF += 0.00122874 * pow($tempF, 2) * $rh + 0.00085282 * $tempF * pow($rh, 2);
	  $hiF += -0.00000199 * pow($tempF, 2) * pow($rh, 2);
	  $hiF = round($hiF,1);
	  $hiC = round(($hiF - 32) / 1.8,1);
  } else {
	  $hiF = round($tempF,1);
	  $hiC = round(($hiF - 32) / 1.8,1);
  $Debug .= "<!-- conds_calcHeatIndex temp=$temp ($tempF F) C, rh=$rh calc=$hiF F, $hiC C ";
  if(preg_match('|F|i',$useunit)) {
     $heatIndex = $hiF;	  
  } else {
	 $heatIndex = $hiC;
  $Debug .= " heatIndex=$heatIndex $useunit -->\n"; 
  return($heatIndex);	
#---------------------------------------------------------  
# decode unix file permissions
#---------------------------------------------------------  
function conds_decode_permissions($perms) {
  if (($perms & 0xC000) == 0xC000) {
	  // Socket
	  $info = 's';
  } elseif (($perms & 0xA000) == 0xA000) {
	  // Symbolic Link
	  $info = 'l';
  } elseif (($perms & 0x8000) == 0x8000) {
	  // Regular
	  $info = '-';
  } elseif (($perms & 0x6000) == 0x6000) {
	  // Block special
	  $info = 'b';
  } elseif (($perms & 0x4000) == 0x4000) {
	  // Directory
	  $info = 'd';
  } elseif (($perms & 0x2000) == 0x2000) {
	  // Character special
	  $info = 'c';
  } elseif (($perms & 0x1000) == 0x1000) {
	  // FIFO pipe
	  $info = 'p';
  } else {
	  // Unknown
	  $info = 'u';
  // Owner
  $info .= (($perms & 0x0100) ? 'r' : '-');
  $info .= (($perms & 0x0080) ? 'w' : '-');
  $info .= (($perms & 0x0040) ?
			  (($perms & 0x0800) ? 's' : 'x' ) :
			  (($perms & 0x0800) ? 'S' : '-'));
  // Group
  $info .= (($perms & 0x0020) ? 'r' : '-');
  $info .= (($perms & 0x0010) ? 'w' : '-');
  $info .= (($perms & 0x0008) ?
			  (($perms & 0x0400) ? 's' : 'x' ) :
			  (($perms & 0x0400) ? 'S' : '-'));
  // World
  $info .= (($perms & 0x0004) ? 'r' : '-');
  $info .= (($perms & 0x0002) ? 'w' : '-');
  $info .= (($perms & 0x0001) ?
			  (($perms & 0x0200) ? 't' : 'x' ) :
			  (($perms & 0x0200) ? 'T' : '-'));
  return $info;
?><?php
// flyout menu generator using http://www.cssplay.co.uk/menus/flyout_4level.html
// menu stylesheet adapted by Ken True - http://saratoga-weather.org/
//                         and Mike Challis - http://www.642weather.com/weather/
// this release is specifically for the Weather-Display/AJAX/PHP template set
// Version 1.00 - 18-Mar-2008 - Initial release
// Version 1.01 - 23-Apr-2008 - added support for WD-World-ML (multilingual)
// Version 1.02 - 18-Aug-2008 - fix for 'unknown' css processing by Mike Challis
// Version 1.03 - 20-Jan-2009 - added translation for <item title="..." /> in menu set
// Version 1.04 - 23-Jul-2010 - added tags target=,img=,align= to parsing, use menu=<name> for flyout-menu-<name>.xml
// Version 1.05 - 19-Jan-2011 - added wx="..." conditionals for universal templates
// Version 1.06 - 05-Feb-2011 - fixed IE8+ display of $FlyoutMenuText
// Version 1.07 - 04-Mar-2011 - fixed errata casting Strict: messages
// Version 1.08 - 05-Feb-2013 - fixed HTML5 validation with literal quote in translation
include_once("common.php");  // for language translation
$Version = 'flyout-menu.php (ML) Version 1.08 - 05-Feb-2013';
// ---------- settings ------------------------------
$MENUdef = './flyout-menu.xml'; // (relative) file location of XML menu definition file
$MENUdefTest = './flyout-menu-%s.xml'; // (relative) file location of test XML menu definition file
$imagesDir = './ajax-images/';  // (relative) URL location of images dir (with trailing '/')
$lang = 'en';  // default language
$WXsoftware = 'WD'; // default weather software
// ---------- end settings --------------------------
//  error_reporting(E_ALL); // for testing
//------------------------------------------------
// overrides from Settings.php if available
global $SITE;
if (isset($SITE['imagesDir'])) 	{$imagesDir = $SITE['imagesDir'];}
if (isset($SITE['menudef'])) 	{$MENUdef = $SITE['menudef'];}
if (isset($SITE['menudeftest'])) 	{$MENUdefTest = $SITE['menudeftest'];}
if (isset($SITE['lang']))	{$lang = $SITE['lang'];}
if (isset($SITE['WXsoftware']))	{$WXsoftware = $SITE['WXsoftware'];}
// end of overrides from Settings.php if available
if (isset($_REQUEST['sce']) && ( strtolower($_REQUEST['sce']) == 'view' or
    strtolower($_REQUEST['sce']) == 'show') ) {
   //--self downloader --
   $filenameReal = __FILE__;
   $download_size = filesize($filenameReal);
   header('Pragma: public');
   header('Cache-Control: private');
   header('Cache-Control: no-cache, must-revalidate');
   header("Content-type: text/plain");
   header("Accept-Ranges: bytes");
   header("Content-Length: $download_size");
   header('Connection: close');
   readfile($filenameReal);
   exit;
$Debug = false;
if (isset($_REQUEST['debug']) && strtolower($_REQUEST['debug']) == 'y') {
  $Debug = true;
$doDiv = false;
if (isset($_REQUEST['gendiv']) && strtolower($_REQUEST['gendiv']) == 'y') {
  $doDiv = true;
if (isset($genDiv)) {
  $doDiv = $genDiv;
$doCSS = false;
if (isset($_REQUEST['css']) && strtolower($_REQUEST['css']) == 'y') {
  $doCSS = true;
if (isset($genCSS)) {
  $doCSS = $genCSS;
  $CSS = '';
  $FlyoutMenuColors = loadStyleSettings(); // Get the colors to use
  genCSSFlyout($FlyoutMenuColors);
$doPrintMenu = true;
if (isset($PrintFlyoutMenu)) {
  $doPrintMenu = $PrintFlyoutMenu;
if ($doCSS) { // only return the necessary CSS for direct include
  print $FlyoutCSS;
  return;
$usingAltXML = false;
if(isset($_REQUEST['menu']) and  preg_match('|%s|',$MENUdefTest)) {
   $tMenu = sprintf($MENUdefTest,strtolower($_REQUEST['menu']));
   // print "<!-- checking '$tMenu' -->\n";
   if(file_exists($tMenu)) {															
     $MENUdef = $tMenu;
     $usingAltXML = true;
     print "<!-- using '$tMenu' -->\n";
   }
$depth = array();
$MENU = array();
$MENUcnt = 0;
$lastDepth = 0;
$Status = "<!-- $Version -->\n";
// ------------- main routine --------------------
$xml_parser = xml_parser_create();
xml_set_element_handler($xml_parser, "startElementFlyout", "endElementFlyout");
$doTrans = true;
if ($lang <> 'en') { // special handling for non-english menu constructions
  $tfile = preg_replace('|\.xml|',"-$lang.xml",$MENUdef);
  if (file_exists($tfile)) {
     $MENUdef = $tfile; // use the XML and no other translation.
	 $doTrans = false;
   }
if (!($fp = fopen($MENUdef, "r"))) {
    die("could not open XML input from $MENUdef ");
while ($data = fread($fp, 8192)) {
    if (!xml_parse($xml_parser, $data, feof($fp))) {
        die(sprintf("XML error: %s at line %d",
                    xml_error_string(xml_get_error_code($xml_parser)),
                    xml_get_current_line_number($xml_parser)));
    }
xml_parser_free($xml_parser);
// ----------- generate the menu XHTML ---------------
$FlyoutMenuText = "<!-- begin generated flyout menu -->\n";
if ($doDiv) {
  $FlyoutMenuText .= "<div class=\"flyoutmenu\">\n";
$FlyoutMenuText .= "<!-- $Version -->\n";
$FlyoutMenuText .= "<!-- by Ken True - webmaster[at]saratoga-weather.org and -->\n";
$FlyoutMenuText .= "<!-- by Mike Challis - webmaster[at]642weather.com  -->\n";
$FlyoutMenuText .= "<!-- Adapted from Stu Nicholl's CSS/XHTML at http://www.cssplay.co.uk/menus/flyout_4level.html -->\n";
$FlyoutMenuText .= "<!-- script available at http://saratoga-weather.org/scripts-CSSmenu.php#flyout -->\n";
$FlyoutMenuText .= "<!-- using \n" . print_r($FlyoutMenuColors,true) . " -->\n";
$FlyoutMenuText .= "<!-- using $MENUdef for XML, doTrans=$doTrans -->\n";
for ($i=1;$i<count($MENU);$i++) { // loop over all menu items -1
  $depth = $MENU[$i]['depth'];
  $nextdepth = $MENU[$i+1]['depth'];
  $indent = str_repeat("  ",$depth);
  $link = $MENU[$i]['link'];
  $title = $MENU[$i]['title'];
  $target = $MENU[$i]['target'];
  $img = $MENU[$i]['img'];
  $align = $MENU[$i]['align'];
  $wxonly = $MENU[$i]['wxonly'];
  $wxonlydisplay = '';
  $wxonlyPrefix = '';
  $wxonlySuffix = '';
  if($wxonly <> '' and ! preg_match("|$WXsoftware|i",$wxonly) ) { // see if this menu is allowed
	  $wxonlydisplay = 'wxonly=\''.$wxonly.'\' ';
	  $wxonlyPrefix = "<!-- not used with $WXsoftware ";
	  $wxonlySuffix = " -->";
  if ($doTrans and $title <> '') { $title = preg_replace('|"|','&quot;',langtransstr($title)); }
  $caption = $doTrans?preg_replace('|"|','&quot;',langtransstr($MENU[$i]['caption'])):$MENU[$i]['caption'];
//  $caption = htmlspecialchars($caption);
  if ($target <> '') {
    $target = ' target="' . $target . '"';
  } else {
    $target = '';
  if ($link <> '') {
    $link = 'href="' . langtransstr($link) . '"';
  } else {
    $link = 'href="' . "#" . '"';
  if ($title <> '') {
    $title = ' title="' . $title . '"';
  } else {
    $title = '';
  $leftimg = '';
  $rightimg = '';
  if ($img <> '') {
    $img = '<img src="' . $img . '" style="border:none" alt=" "/>';
	if (preg_match('|left|i',$align)) {
	   $leftimg = $img;
	} else {
		$rightimg = $img;
  if ($i==1) { // start of entire image
    $FlyoutMenuText .= "<ul>\n";
  if ($Debug) {
    $FlyoutMenuText .= "$indent<!-- $i: depth=$depth next=$nextdepth $wxonlydisplay caption='" . $MENU[$i]['caption'] . "' link='" . $MENU[$i]['link'] ."' title='" . $MENU[$i]['title'] . "' -  ";
  if ($depth < $nextdepth) { // -------------------  start of new submenu 
    if ($Debug) {
      $FlyoutMenuText .= "Start new submenu -->\n";
	$FlyoutMenuText .= "$indent$wxonlyPrefix<li class=\"dropdown\"><a class=\"drop-link\" $link$title$target>$leftimg" . $caption . "$rightimg<!--[if gte IE 7]><!--></a>$wxonlySuffix<!--<![endif]-->
$indent  <!--[if lte IE 6]><table><tr><td><![endif]-->
$indent  <ul class=\"dropdown-content\">\n";
  if ($depth > $nextdepth) { // --------------------  end of new submenu
    if ($Debug) {
      $FlyoutMenuText .= "End new submenu -->\n";
	$FlyoutMenuText .= "$indent$wxonlyPrefix<li><a $link$title$target>$leftimg" . $caption . "$rightimg</a></li>$wxonlySuffix\n";
	for ($j=$depth; $j > $nextdepth ;$j--) { // close off intervening submenu(s)
	  $newindent = str_repeat("  ",$j-1);
	$FlyoutMenuText .= "$newindent  </ul>
$newindent  <!--[if lte IE 6]></td></tr></table></a><![endif]-->
$newindent</li>\n";
    }
  if ($depth == $nextdepth) { // ---------------------- menu item at current depth
    if ($Debug) {
      $FlyoutMenuText .= "Normal menu item -->\n";
	$FlyoutMenuText .= "$indent$wxonlyPrefix<li><a $link$title$target>$leftimg" . $caption . "$rightimg</a></li>$wxonlySuffix\n";
  if ($i==count($MENU)-1) {
    $FlyoutMenuText .= "</ul>\n";
} // end of loop over menu items
if ($doDiv) {
  $FlyoutMenuText .= "</div>\n";
$FlyoutMenuText .= "<!-- end generated flyout menu -->\n";
if ($doPrintMenu) {
  print $FlyoutMenuText;
if ($Debug) {
  print $Status;
 * TEST SECONDO MENU
$MENUdef = './flyout-menu-xero.xml'; // (relative) file location of XML menu definition file
$depth = array();
$MENU = array();
$MENUcnt = 0;
$lastDepth = 0;
$Status = "<!-- $Version -->\n";
// ------------- main routine --------------------
$xml_parser = xml_parser_create();
xml_set_element_handler($xml_parser, "startElementFlyout", "endElementFlyout");
$doTrans = true;
if ($lang <> 'en') { // special handling for non-english menu constructions
  $tfile = preg_replace('|\.xml|',"-$lang.xml",$MENUdef);
  if (file_exists($tfile)) {
     $MENUdef = $tfile; // use the XML and no other translation.
   $doTrans = false;
   }
if (!($fp = fopen($MENUdef, "r"))) {
    die("could not open XML input from $MENUdef ");
while ($data = fread($fp, 8192)) {
    if (!xml_parse($xml_parser, $data, feof($fp))) {
        die(sprintf("XML error: %s at line %d",
                    xml_error_string(xml_get_error_code($xml_parser)),
                    xml_get_current_line_number($xml_parser)));
    }
xml_parser_free($xml_parser);
// ----------- generate the menu XHTML ---------------
$secondFlyoutMenuText = "<!-- begin generated flyout menu -->\n";
if ($doDiv) {
  $secondFlyoutMenuText .= "<div class=\"flyoutmenu\">\n";
$secondFlyoutMenuText .= "<!-- $Version -->\n";
$secondFlyoutMenuText .= "<!-- by Ken True - webmaster[at]saratoga-weather.org and -->\n";
$secondFlyoutMenuText .= "<!-- by Mike Challis - webmaster[at]642weather.com  -->\n";
$secondFlyoutMenuText .= "<!-- Adapted from Stu Nicholl's CSS/XHTML at http://www.cssplay.co.uk/menus/flyout_4level.html -->\n";
$secondFlyoutMenuText .= "<!-- script available at http://saratoga-weather.org/scripts-CSSmenu.php#flyout -->\n";
$secondFlyoutMenuText .= "<!-- using \n" . print_r($FlyoutMenuColors,true) . " -->\n";
$secondFlyoutMenuText .= "<!-- using $MENUdef for XML, doTrans=$doTrans -->\n";
for ($i=1;$i<count($MENU);$i++) { // loop over all menu items -1
  $depth = $MENU[$i]['depth'];
  $nextdepth = $MENU[$i+1]['depth'];
  $indent = str_repeat("  ",$depth);
  $link = $MENU[$i]['link'];
  $title = $MENU[$i]['title'];
  $target = $MENU[$i]['target'];
  $img = $MENU[$i]['img'];
  $align = $MENU[$i]['align'];
  $wxonly = $MENU[$i]['wxonly'];
  $wxonlydisplay = '';
  $wxonlyPrefix = '';
  $wxonlySuffix = '';
  if($wxonly <> '' and ! preg_match("|$WXsoftware|i",$wxonly) ) { // see if this menu is allowed
    $wxonlydisplay = 'wxonly=\''.$wxonly.'\' ';
    $wxonlyPrefix = "<!-- not used with $WXsoftware ";
    $wxonlySuffix = " -->";
  if ($doTrans and $title <> '') { $title = preg_replace('|"|','&quot;',langtransstr($title)); }
  $caption = $doTrans?preg_replace('|"|','&quot;',langtransstr($MENU[$i]['caption'])):$MENU[$i]['caption'];
//  $caption = htmlspecialchars($caption);
  if ($target <> '') {
    $target = ' target="' . $target . '"';
  } else {
    $target = '';
  if ($link <> '') {
    $link = 'href="' . langtransstr($link) . '"';
	//$link = 'href="' . $link . '"';
  } else {
    $link = 'href="' . "#" . '"';
  if ($title <> '') {
    $title = ' title="' . $title . '"';
  } else {
    $title = '';
  $leftimg = '';
  $rightimg = '';
  if ($img <> '') {
    $img = '<img src="' . $img . '" style="border:none" alt=" "/>';
  if (preg_match('|left|i',$align)) {
     $leftimg = $img;
  } else {
    $rightimg = $img;
  if ($i==1) { // start of entire image
    $secondFlyoutMenuText .= "<ul>\n";
  if ($Debug) {
    $secondFlyoutMenuText .= "$indent<!-- $i: depth=$depth next=$nextdepth $wxonlydisplay caption='" . $MENU[$i]['caption'] . "' link='" . $MENU[$i]['link'] ."' title='" . $MENU[$i]['title'] . "' -  ";
  if ($depth < $nextdepth) { // -------------------  start of new submenu 
    if ($Debug) {
      $secondFlyoutMenuText .= "Start new submenu -->\n";
  $secondFlyoutMenuText .= "$indent$wxonlyPrefix<li class=\"dropdown\"><a class=\"drop-link\"$link$title$target>$leftimg" . $caption . "$rightimg<!--[if gte IE 7]><!--></a>$wxonlySuffix<!--<![endif]-->
$indent  <!--[if lte IE 6]><table><tr><td><![endif]-->
$indent  <ul class=\"dropdown-content\">\n";
  if ($depth > $nextdepth) { // --------------------  end of new submenu
    if ($Debug) {
      $secondFlyoutMenuText .= "End new submenu -->\n";
  $secondFlyoutMenuText .= "$indent$wxonlyPrefix<li><a $link$title$target>$leftimg" . $caption . "$rightimg</a></li>$wxonlySuffix\n";
  for ($j=$depth; $j > $nextdepth ;$j--) { // close off intervening submenu(s)
    $newindent = str_repeat("  ",$j-1);
  $secondFlyoutMenuText .= "$newindent  </ul>
$newindent  <!--[if lte IE 6]></td></tr></table></a><![endif]-->
$newindent</li>\n";
    }
  if ($depth == $nextdepth) { // ---------------------- menu item at current depth
    if ($Debug) {
      $secondFlyoutMenuText .= "Normal menu item -->\n";
  $secondFlyoutMenuText .= "$indent$wxonlyPrefix<li><a $link$title$target>$leftimg" . $caption . "$rightimg</a></li>$wxonlySuffix\n";
  if ($i==count($MENU)-1) {
    $secondFlyoutMenuText .= "</ul>\n";
} // end of loop over menu items
if ($doDiv) {
  $secondFlyoutMenuText .= "</div>\n";
$secondFlyoutMenuText .= "<!-- end generated flyout menu -->\n";
if ($doPrintMenu) {
  print $secondFlyoutMenuText;
if ($Debug) {
  print $Status;
 * TEST Terzo MENU
$MENUdef = './flyout-menu-creta.xml'; // (relative) file location of XML menu definition file
$depth = array();
$MENU = array();
$MENUcnt = 0;
$lastDepth = 0;
$Status = "<!-- $Version -->\n";
// ------------- main routine --------------------
$xml_parser = xml_parser_create();
xml_set_element_handler($xml_parser, "startElementFlyout", "endElementFlyout");
$doTrans = true;
if ($lang <> 'en') { // special handling for non-english menu constructions
  $tfile = preg_replace('|\.xml|',"-$lang.xml",$MENUdef);
  if (file_exists($tfile)) {
     $MENUdef = $tfile; // use the XML and no other translation.
   $doTrans = false;
   }
if (!($fp = fopen($MENUdef, "r"))) {
    die("could not open XML input from $MENUdef ");
while ($data = fread($fp, 8192)) {
    if (!xml_parse($xml_parser, $data, feof($fp))) {
        die(sprintf("XML error: %s at line %d",
                    xml_error_string(xml_get_error_code($xml_parser)),
                    xml_get_current_line_number($xml_parser)));
    }
xml_parser_free($xml_parser);
// ----------- generate the menu XHTML ---------------
$thirdFlyoutMenuText = "<!-- begin generated flyout menu -->\n";
if ($doDiv) {
  $thirdFlyoutMenuText .= "<div class=\"flyoutmenu\">\n";
$thirdFlyoutMenuText .= "<!-- $Version -->\n";
$thirdFlyoutMenuText .= "<!-- by Ken True - webmaster[at]saratoga-weather.org and -->\n";
$thirdFlyoutMenuText .= "<!-- by Mike Challis - webmaster[at]642weather.com  -->\n";
$thirdFlyoutMenuText .= "<!-- Adapted from Stu Nicholl's CSS/XHTML at http://www.cssplay.co.uk/menus/flyout_4level.html -->\n";
$thirdFlyoutMenuText .= "<!-- script available at http://saratoga-weather.org/scripts-CSSmenu.php#flyout -->\n";
$thirdFlyoutMenuText .= "<!-- using \n" . print_r($FlyoutMenuColors,true) . " -->\n";
$thirdFlyoutMenuText .= "<!-- using $MENUdef for XML, doTrans=$doTrans -->\n";
for ($i=1;$i<count($MENU);$i++) { // loop over all menu items -1
  $depth = $MENU[$i]['depth'];
  $nextdepth = $MENU[$i+1]['depth'];
  $indent = str_repeat("  ",$depth);
  $link = $MENU[$i]['link'];
  $title = $MENU[$i]['title'];
  $target = $MENU[$i]['target'];
  $img = $MENU[$i]['img'];
  $align = $MENU[$i]['align'];
  $wxonly = $MENU[$i]['wxonly'];
  $wxonlydisplay = '';
  $wxonlyPrefix = '';
  $wxonlySuffix = '';
  if($wxonly <> '' and ! preg_match("|$WXsoftware|i",$wxonly) ) { // see if this menu is allowed
    $wxonlydisplay = 'wxonly=\''.$wxonly.'\' ';
    $wxonlyPrefix = "<!-- not used with $WXsoftware ";
    $wxonlySuffix = " -->";
  if ($doTrans and $title <> '') { $title = preg_replace('|"|','&quot;',langtransstr($title)); }
  $caption = $doTrans?preg_replace('|"|','&quot;',langtransstr($MENU[$i]['caption'])):$MENU[$i]['caption'];
//  $caption = htmlspecialchars($caption);
  if ($target <> '') {
    $target = ' target="' . $target . '"';
  } else {
    $target = '';
  if ($link <> '') {
    $link = 'href="' . langtransstr($link) . '"';
  //$link = 'href="' . $link . '"';
  } else {
    $link = 'href="' . "#" . '"';
  if ($title <> '') {
    $title = ' title="' . $title . '"';
  } else {
    $title = '';
  $leftimg = '';
  $rightimg = '';
  if ($img <> '') {
    $img = '<img src="' . $img . '" style="border:none" alt=" "/>';
  if (preg_match('|left|i',$align)) {
     $leftimg = $img;
  } else {
    $rightimg = $img;
  if ($i==1) { // start of entire image
    $thirdFlyoutMenuText .= "<ul>\n";
  if ($Debug) {
    $thirdFlyoutMenuText .= "$indent<!-- $i: depth=$depth next=$nextdepth $wxonlydisplay caption='" . $MENU[$i]['caption'] . "' link='" . $MENU[$i]['link'] ."' title='" . $MENU[$i]['title'] . "' -  ";
  if ($depth < $nextdepth) { // -------------------  start of new submenu 
    if ($Debug) {
      $thirdFlyoutMenuText .= "Start new submenu -->\n";
  $thirdFlyoutMenuText .= "$indent$wxonlyPrefix<li class=\"dropdown\"><a class=\"drop-link\"$link$title$target>$leftimg" . $caption . "$rightimg<!--[if gte IE 7]><!--></a>$wxonlySuffix<!--<![endif]-->
$indent  <!--[if lte IE 6]><table><tr><td><![endif]-->
$indent  <ul class=\"dropdown-content\">\n";
  if ($depth > $nextdepth) { // --------------------  end of new submenu
    if ($Debug) {
      $thirdFlyoutMenuText .= "End new submenu -->\n";
  $thirdFlyoutMenuText .= "$indent$wxonlyPrefix<li><a $link$title$target>$leftimg" . $caption . "$rightimg</a></li>$wxonlySuffix\n";
  for ($j=$depth; $j > $nextdepth ;$j--) { // close off intervening submenu(s)
    $newindent = str_repeat("  ",$j-1);
  $thirdFlyoutMenuText .= "$newindent  </ul>
$newindent  <!--[if lte IE 6]></td></tr></table></a><![endif]-->
$newindent</li>\n";
    }
  if ($depth == $nextdepth) { // ---------------------- menu item at current depth
    if ($Debug) {
      $thirdFlyoutMenuText .= "Normal menu item -->\n";
  $thirdFlyoutMenuText .= "$indent$wxonlyPrefix<li><a $link$title$target>$leftimg" . $caption . "$rightimg</a></li>$wxonlySuffix\n";
  if ($i==count($MENU)-1) {
    $thirdFlyoutMenuText .= "</ul>\n";
} // end of loop over menu items
if ($doDiv) {
  $thirdFlyoutMenuText .= "</div>\n";
$thirdFlyoutMenuText .= "<!-- end generated flyout menu -->\n";
if ($doPrintMenu) {
  print $thirdFlyoutMenuText;
if ($Debug) {
  print $Status;
// functions invoked by XML_parser
function startElementFlyout($parser, $name, $attrs) 
    global $depth,$Status,$lastDepth,$MENU,$MENUcnt,$WXsoftware;
    $indent = '';
	if (! empty($depth[(integer)$parser]) ) {
	  $j = $depth[(integer)$parser];
	} else {
	  $j = 0;
    for ($i = 0; $i < $j; $i++) {
        $Status .= "  ";
		$indent .= "  ";
    }
    $Status .= "<!-- Depth: $j - $name " . print_r($attrs,true) . " -->\n";
    // format the CAPTION and LINK entries
	if (! empty($attrs['LINK']) ) {
	  $link = $attrs['LINK'];
	 } else {
	  $link = '';
	if (! empty($attrs['CAPTION']) ) {
	  $caption = $attrs['CAPTION'];
	} else {
	  $caption = '';
	if (! empty($attrs['TITLE']) ) {
	  $title = $attrs['TITLE'];
	} else {
	  $title = '';
	if (! empty($attrs['TARGET']) ) {
	  $target = $attrs['TARGET'];
	} else {
	  $target = '';
	if (! empty($attrs['IMG']) ) {
	  $img = $attrs['IMG'];
	} else {
	  $img = '';
	if (! empty($attrs['ALIGN']) ) {
	  $align = preg_match('|left|i',$attrs['ALIGN'])?'left':'right';
	} else {
	  $align = '';
    if (! empty($attrs['WXONLY']) ) {
		$wxonly = $attrs['WXONLY'];
	} else {
	  $wxonly = '';
    if ($caption <> '' or $link <> '') { // ignore entries that are wholly blank
	  $MENUcnt++;
	  $MENU[$MENUcnt]['depth'] = $j;
	  $MENU[$MENUcnt]['caption'] = $caption;
	  $MENU[$MENUcnt]['title'] = $title;
	  $MENU[$MENUcnt]['link'] = $link;
	  $MENU[$MENUcnt]['target'] = $target;
	  $MENU[$MENUcnt]['img'] = $img;
	  $MENU[$MENUcnt]['align'] = $align;
	  $MENU[$MENUcnt]['wxonly'] = $wxonly;
	  // store dummy next entry at highest level for final run-through to generate
	  // the XHTML.  This will be overwritten by a 'real' entry if any
	  $MENU[$MENUcnt+1]['depth'] = 1; 
	  $MENU[$MENUcnt+1]['caption'] = '';
	  $MENU[$MENUcnt+1]['title'] = '';
	  $MENU[$MENUcnt+1]['link'] = '';
	  $MENU[$MENUcnt+1]['target'] = '';
	  $MENU[$MENUcnt+1]['img'] = '';
	  $MENU[$MENUcnt+1]['align'] = '';
	  $MENU[$MENUcnt+1]['wxonly'] = '';
	$lastDepth = $j; // remember for next time
	$j++;
    $depth[(integer)$parser] = $j;
// called at end of particular element
function endElementFlyout($parser, $name) 
    global $depth,$Status;
    $depth[(integer)$parser]--;
// end of XML_parser functions
// return the CSS
function genCSSFlyout ($color)
global  $FlyoutCSS,$imagesDir, $SITE;
global  $TopMenuWidth,$SubMenuWidth;
global  $TopMenuBkgnd,$TopMenuTextColor,$TopMenuTextHover,$TopMenuTextBkgnd;
global  $TopMenuBkgrndHover,$TopMenuBorder;
global  $SubMenuPresent,$SubMenuTextColor,$SubMenuTextHover,$SubMenuBkgrnd,$SubMenuBkgrndHover;
$SNAME = $color['NAME'];
$LC = $color['LINK_COLOR'];
$LBG = $color['LINK_BACKGROUND'];
$HC = $color['HOVER_COLOR'];
$HBG = $color['HOVER_BACKGROUND'];
$BC = $color['BORDER_COLOR'];
$SC = $color['SHADE_IMAGE']; 
$FlyoutCSS = <<<END_OF_CSS
<!-- begin flyout-menu.php CSS definition style='${SNAME}' -->
<style type="text/css">
/* ================================================================
This copyright notice must be untouched at all times.
The original version of this stylesheet and the associated (x)html
is available at http://www.cssplay.co.uk/menus/flyout_4level.html
Copyright (c) 2005-2007 Stu Nicholls. All rights reserved.
This stylesheet and the associated (x)html may be modified in any
way to fit your requirements.
Modified by Ken True and Mike Challis for Weather-Display/AJAX/PHP
template set.
=================================================================== */
.flyoutmenu {
font-size:90%;
/* remove all the bullets, borders and padding from the default list styling */
.flyoutmenu ul {
position:relative;
z-index:500;
padding:0;
margin:0;
/*padding-left: 4px;*/ /* mchallis added to center links in firefox */
list-style-type:none;
width: 110px;
.dropdown {
    position: relative;
    display: inline-block;
    /*background:transparent url(${imagesDir}flyout-sub1.gif) no-repeat right center;*/
.dropdown-content {
    display: none;
    position: absolute;
    min-width: 160px;
    box-shadow: 0px 8px 16px 0px rgba(0,0,0,0.2);
    padding: 12px 16px;
    z-index: 1;
    -webkit-animation: fadein 1s; /* Safari and Chrome */
    -moz-animation: fadein 1s; /* Firefox */
    -ms-animation: fadein 1s; /* Internet Explorer */
    -o-animation: fadein 1s; /* Opera */
    animation: fadein 1s;
@keyframes fadein {
    from { opacity: 0; }
    to   { opacity: 1; }
/* Firefox */
@-moz-keyframes fadein {
    from { opacity: 0; }
    to   { opacity: 1; }
/* Safari and Chrome */
@-webkit-keyframes fadein {
    from { opacity: 0; }
    to   { opacity: 1; }
/* Internet Explorer */
@-ms-keyframes fadein {
    from { opacity: 0; }
    to   { opacity: 1; }
/* Opera */
@-o-keyframes fadein {
    from { opacity: 0; }
    to   { opacity: 1; }
.dropdown:hover .dropdown-content {
    display: block;
.drop-link{
    background:transparent url(${imagesDir}flyout-sub1.gif) no-repeat right center;
.drop-link:hover{
    background:#AAAAFF url(${imagesDir}flyout-sub1.gif) no-repeat right center;
/* style the list items */
.flyoutmenu li {
color: ${LC};
/*background:${LBG} url(${imagesDir}${SC});*/
width: 17.5em;
/* for IE7 */
float:left;
margin:0; /* mchallis added to tighten gaps between links */
padding: 2px 0px 2px 0px;
.flyoutmenu li.sub {background:transparent url(${imagesDir}flyout-sub1.gif) no-repeat right center;}
/* get rid of the table */
.flyoutmenu table {position:absolute; border-collapse:collapse; top:0; left:0; z-index:100; font-size:1em;}
/* style the links */
.flyoutmenu a, .flyoutmenu a:visited {
display:block;
text-decoration:none;
line-height: 1.8em; 
width:auto; /* mchallis changed for adjusting firefox link width */
color:#AAFFFF;
padding: 0 2px 0 5px; 
border:1px solid white;
border-width:1px 1px 1px 1px;
font-size: 13px;
/* hack for IE5.5 */
         /* mchallis lowered the two width values to (101, 100)to fix IE6 links wider than menu width */
* html .flyoutmenu a, * html .flyoutmenu a:visited {width:95px; w\idth:94px;}
/* style the link hover */
* html .flyoutmenu a:hover {color:${HC}; background:${HBG}; position:relative;}
.flyoutmenu li:hover {position:relative;}
/* For accessibility of the top level menu when tabbing */
.flyoutmenu a:active, .flyoutmenu a:focus {color:${HC}; background:${HBG};}
/* retain the hover colors for each sublevel IE7 and Firefox etc */
.flyoutmenu li:hover > a {
color:#000066; 
background:#AAFFFF;
width:auto;
/* hide the sub levels and give them a positon absolute so that they take up no room */
.flyoutmenu li ul {
visibility:hidden;
/*position:absolute;*/
top:0px;
/* set up the overlap (minus the overrun) */
left:4px;
/* set up the overrun area */
/*padding:10px;*/
/* this is for IE to make it interpret the overrrun padding */
background:transparent url(${imagesDir}flyout-transparent.gif);
/* for browsers that understand this is all you need for the flyouts */
.flyoutmenu li:hover > ul {visibility:visible;}
/* for IE5.5 and IE6 you need to style each level hover */
/* keep the third level+ hidden when you hover on first level link */
.flyoutmenu ul a:hover ul ul{
visibility:hidden;
/* keep the fourth level+ hidden when you hover on second level link */
.flyoutmenu ul a:hover ul a:hover ul ul{
visibility:hidden;
/* keep the fifth level hidden when you hover on third level link */
.flyoutmenu ul a:hover ul a:hover ul a:hover ul ul{
visibility:hidden;
/* make the second level visible when hover on first level link */
.flyoutmenu ul a:hover ul {
visibility:visible;
/* make the third level visible when you hover over second level link */
.flyoutmenu ul a:hover ul a:hover ul{
visibility:visible;
/* make the fourth level visible when you hover over third level link */
.flyoutmenu ul a:hover ul a:hover ul a:hover ul {
visibility:visible;
/* make the fifth level visible when you hover over fourth level link */
.flyoutmenu ul a:hover ul a:hover ul a:hover ul a:hover ul {
visibility:visible;
</style>
<!-- end of flyout-menu.php CSS definition -->
END_OF_CSS;
} // end of genCSS function
function loadStyleSettings ( ) {
global $SITE;
# array of css style names, when adding a new style ...
# edit this to add a new name, also add a new link color array below,
# weather-screen-[NAME]-[narrow or wide].css
$styles_array_all = array(
array('NAME' => 'black',  'SHADE_IMAGE'=> 'flyout-shade-4A4A4A.gif', 'BORDER_COLOR'=> 'black', 'LINK_COLOR'=> '#CC9933', 'LINK_BACKGROUND'=> '#4A4A4A', 'HOVER_COLOR' => 'white', 'HOVER_BACKGROUND' => 'black',),   # black
array('NAME' => 'blue',   'SHADE_IMAGE'=> 'flyout-shade-white.gif',  'BORDER_COLOR'=> 'black', 'LINK_COLOR'=> '#336699', 'LINK_BACKGROUND'=> 'white',   'HOVER_COLOR' => 'white', 'HOVER_BACKGROUND' => '#3173B1',), # blue
array('NAME' => 'dark',   'SHADE_IMAGE'=> 'flyout-shade-white.gif',  'BORDER_COLOR'=> 'black', 'LINK_COLOR'=> 'black',   'LINK_BACKGROUND'=> 'white',   'HOVER_COLOR' => 'white', 'HOVER_BACKGROUND' => '#58B6C7',), # dark
array('NAME' => 'fall',   'SHADE_IMAGE'=> 'flyout-shade-white.gif',  'BORDER_COLOR'=> 'black', 'LINK_COLOR'=> 'black',   'LINK_BACKGROUND'=> 'white',   'HOVER_COLOR' => 'white', 'HOVER_BACKGROUND' => '#E87510',), # fall
array('NAME' => 'green',  'SHADE_IMAGE'=> 'flyout-shade-white.gif',  'BORDER_COLOR'=> 'black', 'LINK_COLOR'=> 'black',   'LINK_BACKGROUND'=> 'white',   'HOVER_COLOR' => 'white', 'HOVER_BACKGROUND' => '#00745B',), # green
array('NAME' => 'icetea', 'SHADE_IMAGE'=> 'flyout-shade-white.gif',  'BORDER_COLOR'=> 'black', 'LINK_COLOR'=> 'black',   'LINK_BACKGROUND'=> 'white',   'HOVER_COLOR' => 'white', 'HOVER_BACKGROUND' => '#786032',), # icetea
array('NAME' => 'mocha',  'SHADE_IMAGE'=> 'flyout-shade-CCBFAD.gif', 'BORDER_COLOR'=> 'black', 'LINK_COLOR'=> 'black',   'LINK_BACKGROUND'=> '#CCBFAD', 'HOVER_COLOR' => 'black', 'HOVER_BACKGROUND' => '#D7E2E8',), # mocha
array('NAME' => 'orange', 'SHADE_IMAGE'=> 'flyout-shade-white.gif',  'BORDER_COLOR'=> 'black', 'LINK_COLOR'=> '#CC6600', 'LINK_BACKGROUND'=> 'white',   'HOVER_COLOR' => 'white', 'HOVER_BACKGROUND' => '#CC6600',), # orange
array('NAME' => 'pastel', 'SHADE_IMAGE'=> 'flyout-shade-E1EBF2.gif', 'BORDER_COLOR'=> 'black', 'LINK_COLOR'=> '#03447D', 'LINK_BACKGROUND'=> '#E1EBF2', 'HOVER_COLOR' => 'white', 'HOVER_BACKGROUND' => '#7190BF',), # pastel
array('NAME' => 'purple', 'SHADE_IMAGE'=> 'flyout-shade-white.gif',  'BORDER_COLOR'=> 'black', 'LINK_COLOR'=> '#993333', 'LINK_BACKGROUND'=> 'white',   'HOVER_COLOR' => 'white', 'HOVER_BACKGROUND' => '#993333',), # purple
array('NAME' => 'red',    'SHADE_IMAGE'=> 'flyout-shade-white.gif',  'BORDER_COLOR'=> 'black', 'LINK_COLOR'=> '#993333', 'LINK_BACKGROUND'=> 'white',   'HOVER_COLOR' => 'white', 'HOVER_BACKGROUND' => '#993333',), # red
array('NAME' => 'salmon', 'SHADE_IMAGE'=> 'flyout-shade-white.gif',  'BORDER_COLOR'=> 'black', 'LINK_COLOR'=> '#46222E', 'LINK_BACKGROUND'=> 'white',   'HOVER_COLOR' => 'white', 'HOVER_BACKGROUND' => '#A4CB32',), # salmon
array('NAME' => 'silver', 'SHADE_IMAGE'=> 'flyout-shade-9A9A9A.gif', 'BORDER_COLOR'=> 'black', 'LINK_COLOR'=> '#EDDD2F', 'LINK_BACKGROUND'=> '#9A9A9A', 'HOVER_COLOR' => 'white', 'HOVER_BACKGROUND' => '#666666',), # silver
array('NAME' => 'spring', 'SHADE_IMAGE'=> 'flyout-shade-white.gif',  'BORDER_COLOR'=> 'black', 'LINK_COLOR'=> 'black',   'LINK_BACKGROUND'=> 'white',   'HOVER_COLOR' => 'white', 'HOVER_BACKGROUND' => '#A9D26A',), # spring
array('NAME' => 'taupe',  'SHADE_IMAGE'=> 'flyout-shade-white.gif',  'BORDER_COLOR'=> 'black', 'LINK_COLOR'=> 'black',   'LINK_BACKGROUND'=> 'white',   'HOVER_COLOR' => 'white', 'HOVER_BACKGROUND' => '#75B7BF',), # taupe
array('NAME' => 'teal',   'SHADE_IMAGE'=> 'flyout-shade-white.gif',  'BORDER_COLOR'=> 'black', 'LINK_COLOR'=> '#006666', 'LINK_BACKGROUND'=> 'white',   'HOVER_COLOR' => 'white', 'HOVER_BACKGROUND' => '#006666',), # teal
# default
$menu_colors = array('NAME' => 'unknown', 'SHADE_IMAGE'=> 'flyout-shade.gif',  'BORDER_COLOR'=> 'white', 'LINK_COLOR'=> 'black', 'LINK_BACKGROUND'=> '#D4D8BD', 'HOVER_COLOR' => 'white', 'HOVER_BACKGROUND' => '#AA7');
if (isset($SITE['CSSscreen']) && preg_match("/^[a-z0-9-]{1,50}.css$/i", $SITE['CSSscreen'])) {
  preg_match("/^weather-screen-([a-z0-9]+)-(wide|narrow).css$/i", $SITE['CSSscreen'], $matches);
  # this can be used for any conditionals requiring color style name
  $style_color = trim($matches[1]);
  # this can be used for any conditionals requiring wide or narrow
  $style_wide_or_narrow = trim($matches[2]);
foreach ($styles_array_all as $v) {
     if($style_color == $v['NAME']) {
       $menu_colors = $v;
       break;
     }
return ($menu_colors); // return the color choice associative array
} // end loadStyleSettings
// end of flyout-menu.php
function console_log( $data ){
  echo '<script>';
  echo 'console.log('. json_encode( $data ) .')';
  echo '</script>';
<?php
############################################################################
# A Project of TNET Services, Inc. and Saratoga-Weather.org (WD-USA-ML template set)
############################################################################
#	Project:	Sample Included Website Design
#	Module:		footer.php
#	Purpose:	Provides the bottom section of the website
# 	Authors:	Kevin W. Reed <kreed@tnet.com>
#				TNET Services, Inc.
#               Ken True <webmaster@saratoga-weather.org>
#               Saratoga-Weather.org
# 	Copyright:	(c) 1992-2007 Copyright TNET Services, Inc.
############################################################################
# This program is free software; you can redistribute it and/or
# modify it under the terms of the GNU General Public License
# as published by the Free Software Foundation; either version 2
# of the License, or (at your option) any later version.
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
# You should have received a copy of the GNU General Public License
# along with this program; if not, write to the Free Software
# Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA
############################################################################
#	This document uses Tab 4 Settings
############################################################################
//Version 1.01 - 05-Feb-2012 - fixup for HTML5 validation
require_once("Settings.php");
require_once("common.php");
############################################################################
    <!-- ##### Footer ##### -->
    <div id="footer">
      <div class="doNotPrint">
        <a href="#header"><?php langtrans('Top'); ?></a> |
        <a href="<?php print $SITE['email']; ?>" title="E-mail us"><?php langtrans('Contact Us'); ?></a>
        <script type="text/javascript">
        <!--
        if (navigator.appName == 'Microsoft Internet Explorer' && 
        parseInt(navigator.appVersion) >= 4)
        {
        document.write('| <a href=\"#\" onclick=\"javascript:window.external.AddFavorite        (location.href,document.title)\">');
        document.write('<?php langtrans('Bookmark Page'); ?></a>');
        }else
        {var msg = '| <a href="" title="<?php langtrans('Bookmark Page'); ?>" onClick="alert(' + "'Hit CTRL-D to bookmark this page'"+ ');"><?php langtrans('Bookmark Page'); ?></a>';
        if(navigator.appName == "Netscape") msg += " (CTRL-D)";
document.write(msg);
        }
        // -->
        </script>
      </div><!-- end doNotPrint -->
<div>
	<?php print $SITE['copyr'] ?><span class="doNotPrint"> |  
	<a href="<?php echo $SITE['WXsoftwareURL']; ?>" title="Powered by <?php echo $SITE['WXsoftwareLongName']; ?>"><?php echo $SITE['WXsoftwareLongName'];?>
	<?php if(isset($wdversion)) {echo " (".$wdversion.")";} ?> </a> |
	<a href="http://validator.w3.org/check?uri=referer"><?php langtrans('Valid'); ?> 
	<?php  print (isset($useHTML5) and $useHTML5)?'HTML5':'XHTML 1.0'; ?></a> |
	<a href="http://jigsaw.w3.org/css-validator/check/referer"><?php langtrans('Valid'); ?> CSS</a> 
	</span><br class="doNotPrint" />
    <!--<br/><?php langtrans('Never base important decisions on this or any weather information obtained from the Internet'); ?>.<br class="doNotPrint" />-->
</div>
<div>
<!--AAA-->
<br>
			<!-- Histats.com START counter ANDREA-->
<!--			<a href="http://www.histats.com/it/" target="_blank" title="contatore free"> -->
			<script  type="text/javascript" language="javascript">
			var s_sid = 293098;var st_dominio = 4;
			var cimg = 424;var cwi =112;var che =75;
			</script>
			<script  type="text/javascript" language="javascript" src="http://s11.histats.com/js9.js"></script>
			</a>
			<noscript>
<!--			<a href="http://www.histats.com/it/" target="_blank"> -->
			<img src="http://s103.histats.com/stats/0.gif?293098&1" alt="contatore free" border="0"></a></noscript>
			<!-- Histats.com END counter ANDREA-->
</div>
<!--      
/* modificato MASSI
eliminato collegamento informativa -->
<!--<a href=""> Informativa cookie </a>-->
    </div><!-- end id="footer" -->
  </div><!-- end id="page" wrapper -->
  </body>
</html>
<?php 
# Leave this code here .. it will help you see what language translations are missing by running any page on your
# website with a ?show=missing argument
  global $missingTrans,$SITE;
  if(isset($_REQUEST['show']) and strtolower($_REQUEST['show']) == 'missing') {
	echo "<!-- missing langlookup entries for lang=".$SITE['lang']." \n";
	foreach ($missingTrans as $key => $val) {
		echo "langlookup|$key|$key|\n";
	echo "\n ".count($missingTrans)." entries.  End of missing langlookup entries -->\n";
?><?php
// Author: Ken True - webmaster-weather.org
// gen-MBtags.php 
// Purpose: read the MBtags-template.txt file from meteobridge and generate the template file for use with
//          meteobridge to substitute weather values for MB tags in MBtags.php
// Version 1.00 - 08-Mar-2013 - Initial release
// Version 1.01 - 09-Mar-2013 - added handling for stations with no solar and/or no UV sensors
// Version 1.02 - 17-Mar-2013 - added additional variables from updated Meteobridge software
// Version 1.03 - 19-Aug-2013 - added Davis forecast info  for Meteobridge 1.8(2198)+
// --------------------------------------------------------------------------
// allow viewing of generated source
$Version = 'gen-MBtags.php - V1.03 - 18-Aug-2013';
$WXsoftware = 'MB'; // do NOT change this
$defsFile = $WXsoftware . '-defs.php'; // do NOT change this .. name of definitions file
if (isset($_REQUEST["sce"]) and strtolower($_REQUEST["sce"]) == "view" ) {
//--self downloader --
   $filenameReal = __FILE__;
   $download_size = filesize($filenameReal);
   header("Pragma: public");
   header("Cache-Control: private");
   header("Cache-Control: no-cache, must-revalidate");
   header("Content-type: text/plain");
   header("Accept-Ranges: bytes");
   header("Content-Length: $download_size");
   header("Connection: close");
   readfile($filenameReal);
   exit;
$inFile = 'MBtags-template.txt';
if(!file_exists($inFile)) {
	print "<h3>Program: $Version</h3>\n";
	print "<h1>Error: file '$inFile' not found.</h1>\n";
	print "<p>Make sure '$inFile' is in this same directory.</p>";
	return;
   $uomTemp = ' &deg;C';
   $uomWind = ' m/s';
   $uomBaro = ' hPa';
   $uomRain = ' mm';
if(file_exists("Settings.php")) { 
  include_once("Settings.php");
  $uomTemp = $SITE['uomTemp'];
  $uomWind = $SITE['uomWind'];
  $uomBaro = $SITE['uomBaro'];
  $uomRain = $SITE['uomRain'];
$showComments = true;
if(isset($_REQUEST['comments'])) {
	$showComments = (strtolower($_REQUEST['comments']) == 'yes')?true:false;
$Sensors = array(
  'th0temp|temp|outdoor temperature',
  'th0hum|.0|outdoor humidity',
  'th0dew|temp|outdoor dewpoint',
  'thb0temp|temp|indoor temperature',
  'thb0hum|.0|indoor humidity',
  'thb0dew|temp|indoor dewpoint',
  'thb0press|baro|station pressure',
  'thb0seapress|baro|sealevel pressure',
  'wind0wind|wind|windspeed',
  'wind0avgwind|wind|average windspeed',
  'wind0dir|.0|wind direction',
  'wind0chill|temp|outdoor wind chill temperature',
  'rain0rate|rain|rain rate',
  'rain0total|rain|rain',
  'uv0index|.1|uv index',
  'sol0rad|.0|solar rad',
$UOM = array();
$SITE['uomTemp'] = '&deg;F';  // ='&deg;C', ='&deg;F'
$SITE['uomBaro'] = ' inHg';    // =' hPa', =' mb', =' inHg'
$SITE['uomWind'] = ' mph';   // =' km/h', =' kts', =' m/s', =' mph'
$SITE['uomRain'] = ' in';     // =' mm', =' in'
$UOM['temp'] = (preg_match('|F|i',$uomTemp))?'=F.1':'.1';
$UOM['baro'] = (preg_match('|inHg|i',$uomBaro))?'=inHg.2':'.1'; 
if(preg_match('|km|i',$uomWind)) {
	$UOM['wind'] = '=kmh.1';
} elseif (preg_match('|kts|i',$uomWind)) {
	$UOM['wind'] = '=kn.1';
} elseif (preg_match('|mph|i',$uomWind)) {
	$UOM['wind'] = '=mph.1';
} else {
	$UOM['wind'] = '.1'; // default for m/s
$UOM['rain'] = (preg_match('|in|i',$uomRain))?'=in.2':'.1'; 
$SensorUOM = array();
foreach ($Sensors as $i => $s) {
	list($varname,$type,$desc) = explode('|',$s);
	if(isset($UOM[$type])) { 
	  $SensorUOM[$varname] = $UOM[$type]; 
	} else {
	  $SensorUOM[$varname] = $type;
$rawrecs = file($inFile);
header("Content-type: text/plain");
print_start();
# generate tags for some builtin variables that don't match tag names
$Builtins = array(
  'date' => '[YYYY]-[MM]-[DD]|local date',
  'time' => '[hh]:[mm]:[ss]|local time',
  'dateUTC' => '[UYYYY]-[UMM]-[UDD]|UTC date',
  'timeUTC' => '[Uhh]:[Umm]:[Uss]|UTCtime',
  'uomTemp' => "$uomTemp|UOM temperature",
  'uomWind' => "$uomWind|UOM wind",
  'uomBaro' => "$uomBaro|UOM barometer",
  'uomRain' => "$uomRain|UOM rain",
  'mbsystem-swversion' => '[mbsystem-swversion:--]|Meteobridge version string (example: "1.1")',
  'mbsystem-buildnum' => '[mbsystem-buildnum:--]|build number as integer (example: 1673)',
  'mbsystem-platform' => '[mbsystem-platform:--]|string that specifies hw platform (example: "TL-MR3020")',
  'mbsystem-language' => '[mbsystem-language:--]|language used on Meteobridge web interface (example: "English")',
  'mbsystem-timezone' => '[mbsystem-timezone:--]|defined timezone (example: "Europe/Berlin")',
  'mbsystem-latitude' => '[mbsystem-latitude:--]|latitude as float (example: 53.875120)',
  'mbsystem-longitude' => '[mbsystem-longitude:--]|longitude as float (example: 9.885357)',
  'mbsystem-lunarage' => '[mbsystem-lunarage:--]|days passes since new moon as integer (example: 28)',
  'mbsystem-lunarpercent' => '[mbsystem-lunarpercent:--]|lunarphase given as percentage from 0% (new moon) to 100% (full moon)',
  'mbsystem-lunarsegment' => '[mbsystem-lunarsegment:--]|lunarphase segment as integer (0 = new moon, 1-3 = growing moon: quarter, half, three quarters, 4 = full moon, 5-7 = shrinking moon: three quarter, half, quarter)',
  'mbsystem-daylength' => '[mbsystem-daylength:--]|length of day (example: "11:28")',
  'mbsystem-civildaylength' => '[mbsystem-civildaylength:--]|alternative method for daylength computation (example: "12:38")',
  'mbsystem-nauticaldaylength' => '[mbsystem-nauticaldaylength:--]|alternative method for daylength computation (example: "14:00")',
  'mbsystem-sunrise' => '[mbsystem-sunrise:--]|time of sunrise in local time. Can be converted to UTC by applying "=utc" to the variable (example: "06:47", resp. "05:47")',
  'mbsystem-sunset' => '[mbsystem-sunset:--]|time of sunset in local time. Can be converted to UTC by applying "=utc" to the variable (example: "18:15", resp. "17:15")',
  'mbsystem-civilsunrise' => '[mbsystem-civilsunrise:--]|alternative computation for sunrise.',
  'mbsystem-civilsunset' => '[mbsystem-civilsunset:--]|alternative computation for sunset.',
  'mbsystem-nauticalsunrise' => '[mbsystem-nauticalsunrise:--]|alternative computation for sunrise.',
  'mbsystem-nauticalsunset' => '[mbsystem-nauticalsunset:--]|alternative alternative computation for sunset..',
  'mbsystem-daynightflag' => '[mbsystem-daynightflag:--]|returns "D" when there is daylight, otherwise "N".',
  'mbsystem-moonrise' => '[mbsystem-moonrise:--]|time of moonrise in local time. Please notice that not every day has a moonrise time, therefore, variable can be non-existent on certain days (example: "05:46", resp. "04:46")',
  'mbsystem-moonset' => '[mbsystem-moonset:--]|time of moonset in local time. Please notice that not every day has a moonset time, therefore, variable can be non-existent on certain days.',
  'forecast-rule' => '[forecast-rule:--]|Davis forecast rule number',
  'forecast-text' => '[forecast-text:]|Davis forecast reports in English',
foreach ($Builtins as $name => $v) {
	list($var,$desc) = explode('|',$v.'|');
	print "$name|$var|// $desc:|:\n";
foreach ($rawrecs as $rec) {
input:
Parameters (Description)
wview Tag	Variable
wvar	$STNNAME$	Station name
wvar	$CURDATE_MDY$	Date (ex. January 1, 2004) Date
output:
STNNAME|$STNNAME$|// Station name:|:
CURDATE_MDY|$CURDATE_MDY$|// Date (ex. January 1, 2004) Date:|:
  preg_match('|^wvar\t(\S+)\t(.*)$|i',$rec,$matches);
  if(!isset($matches[1])) {continue;}
  $ourname = $matches[1];
  $descr = '';
  if(isset($matches[2])) {$descr = trim($matches[2]);}
  list($sensor,$selector) = explode('-',$ourname);
  if(isset($SensorUOM[$sensor])) { 
    $converter = $SensorUOM[$sensor];
  } else {
	$converter = '';
  if(preg_match('|time|i',$selector)) { $converter = ''; }
  $varname = '['.$ourname.$converter.':--]';
  $comment = '';
  if($showComments) {
	  $comment = '|// '.$descr;
  print "$ourname|$varname$comment:|:\n";
print_end();
// end of mainline
function print_start() {
	global $Version,$WXsoftware,$defsFile,$inFile;
print '<?php
 File: MBtags.php
 Purpose: load Meteobridge variables into a $WX[] array for use with the Canada/World/USA template sets
 NOTE: this file must be processed by Meteobridge as a template file and uploaded to the website
   as MBtags.php using the Meteobridge extended Push Services configuration.
 Author: Ken True - webmaster@saratoga-weather.org
print " (created by $Version)\n";
print "\n These tags generated on ".gmdate('Y-m-d H:m:s T',time())."\n";
print "   From $inFile updated ".gmdate('Y-m-d H:m:s T',filemtime($inFile))."\n\n";
print '*/
// --------------------------------------------------------------------------
// allow viewing of generated source
if (isset($_REQUEST["sce"]) and strtolower($_REQUEST["sce"]) == "view" ) {
//--self downloader --
   $filenameReal = __FILE__;
   $download_size = filesize($filenameReal);
   header("Pragma: public");
   header("Cache-Control: private");
   header("Cache-Control: no-cache, must-revalidate");
   header("Content-type: text/plain");
   header("Accept-Ranges: bytes");
   header("Content-Length: $download_size");
   header("Connection: close");
   readfile($filenameReal);
   exit;
' . 
"\$WXsoftware = '$WXsoftware';  
\$defsFile = '$defsFile';  // filename with \$varnames = \$WX['$WXsoftware-varnames']; equivalents\n " .
$rawdatalines = \'
function print_end() {
global $WXsoftware, $defsFile;	
print '\'; // END_OF_RAW_DATA_LINES;
// end of generation script
// put data in  array
$WX = array();
global $WX;
$WXComment = array();
$data = explode(":|:",$rawdatalines);
$nscanned = 0;
foreach ($data as $v => $line) {
  list($vname,$vval,$vcomment) = explode("|",trim($line).\'|||\');
  if ($vname <> "" and strpos($vval,\'$\') === false) {
    $WX[$vname] = trim($vval);
    if($vcomment <> "") { $WXComment[$vname] = trim($vcomment); }
  $nscanned++;
if(isset($_REQUEST[\'debug\'])) {
  print "<!-- loaded $nscanned $WXsoftware \$WX[] entries -->\n";
if (isset($_REQUEST["sce"]) and strtolower($_REQUEST["sce"]) == "dump" ) {
  print "<pre>\n";
  print "// \$WX[] array size = $nscanned entries.\n";
  foreach ($WX as $key => $val) {
	  $t =  "\$WX[\'$key\'] = \'$val\';";
	  if(isset($WXComment[$key])) {$t .=  " $WXComment[$key]"; }
	  print "$t\n";
  print "</pre>\n";
if(file_exists("'.$defsFile.'")) { include_once("'.$defsFile.'"); }
?>';
}<?php
// proxy fetch for links files from http://www.northamericanweather.net/ for the global network map
// settings -------------------------------------------------------------------
$doTargetBlank = true; // =true to change links to have target="_blank"
$refreshTime = 600;  // 10 minute cache time
//-----------------------------------------------------------------------------
if(file_exists('Settings.php')) {include_once('Settings.php'); }
$fileSet = array(
  'network-list-inc.html' => 'http://www.northamericanweather.net/network-list-inc.html',
  'network-links-inc.html' => 'http://www.northamericanweather.net/network-links-inc.html',
  'member-count.txt' => 'http://www.northamericanweather.net/member-count.txt',
  'members-list-inc.html' => 'http://www.northamericanweather.net/members-list-inc.html'
$fileSetML = array(
  'network-list-inc.html' => 'http://www.northamericanweather.net/network-list-inc-ml.html',
  'network-links-inc.html' => 'http://www.northamericanweather.net/network-links-inc-ml.html',
  'member-count.txt' => 'http://www.northamericanweather.net/member-count-ml.txt',
  'members-list-inc.html' => 'http://www.northamericanweather.net/members-list-inc-ml.html'
if(isset($SITE['lang'])) {$fileSet = $fileSetML; }
// use foreach ($fileSetML below if using multilingual template set
foreach ($fileSet as $cacheName => $URL) {
if (file_exists($cacheName) and filemtime($cacheName) + $refreshTime > time() and filesize($cacheName) > 100) {
	$udate = gmdate("D, d M Y H:i:s", filemtime($cacheName));
    print "<!-- cache $cacheName lmod=$udate GMT -->\n";
    continue;
  $rawhtml = fetchUrlWithoutHangingLINKS($URL,false);
  list($headers,$html) = explode("\r\n\r\n",$rawhtml);
  $RC = '';
  if (preg_match("|^HTTP\/\S+ (.*)\r\n|",$rawhtml,$matches)) {
	$RC = trim($matches[1]);
  if($doTargetBlank and preg_match('|\.html|i',$URL)) { // adjust all the links to have target="_blank"
    $html = preg_replace('|<a (.*)">(.*)</a>|Uis',"<a $1\" target=\"_blank\">$2</a>",$html);
    print "<!-- $cacheName target=\"_blank\" added to links -->\n";
  if(preg_match('|200 |',$RC) and strlen($html) > 50) {
	$udate = gmdate("D, d M Y H:i:s", time()) . " GMT";
   $fp = fopen($cacheName, "w");
   if ($fp) {
	$write = fputs($fp, $html);
	if ($write) {
	  print "<!-- $cacheName lmod=$udate -->\n";
	fclose($fp);
   } else {
	print "<!-- unable to write cache file $cacheName -->\n";
   }
  } else {
    print "<!-- Problem fetching $cacheName with RC=$RC , html length=".strlen($html) . "<br/>\n";
	print "Headers returned are:\n";
	print "<pre>\n$headers\n</pre>\n";
	print "cache not saved. -->\n";
   }
return;
// get contents from one URL and return as string 
 function fetchUrlWithoutHangingLINKS($url,$useFopen) {
// thanks to Tom at Carterlake.org for this script fragment
  global $Debug, $needCookie,$timeStamp;
  if (! $useFopen) {
   // Set maximum number of seconds (can have floating-point) to wait for feed before displaying page without feed
   $numberOfSeconds=4;   
   // Suppress error reporting so Web site visitors are unaware if the feed fails
   error_reporting(0);
   // Extract resource path and domain from URL ready for fsockopen
   $FullUrl = $url;
   $url = str_replace("http://","",$url);
   $urlComponents = explode("/",$url);
   $domain = $urlComponents[0];
   $resourcePath = str_replace($domain,"",$url);
   $resourcePath = preg_replace('|nocache|',$timeStamp,$resourcePath);
   $Debug .= "<!-- GET $resourcePath HTTP/1.1 \n      Host: $domain -->\n";
   // Establish a connection
   $socketConnection = fsockopen($domain, 80, $errno, $errstr, $numberOfSeconds);
   if (!$socketConnection)
       {
       // You may wish to remove the following debugging line on a live Web site
          print($Debug . "<!-- Network error: $errstr ($errno) -->");
       }    // end if
   else    {
       $xml = '';
	   $getString = "GET $resourcePath HTTP/1.1\r\nHost: $domain\r\nConnection: close\r\nUser-agent: Mozilla/5.0 (Windows; U; Windows NT 5.1; en-US; rv:1.8.1.11) Gecko/20071127 Firefox/2.0.0.11 global-conditions SaratogaWX)\r\n";
	   
	   $getString .= "\r\n";
       fputs($socketConnection, $getString);
       // Loop until end of file
       while (!feof($socketConnection))
           {
           $xml .= fgets($socketConnection, 8192);
           }    // end while
       fclose ($socketConnection);
       }    // end else
   return($xml);
 } else {
//   print "<!-- using file function -->\n";
   $xml = implode('',file($url));
   return($xml);
   }    // end fetchUrlWithoutHanging
// ------------------------------------------------------------------
?><?php
Function:  mtr_conditions($icao, $curtime, $sunrise, $sunset)
Purpose:  fetch and cache a nearby METAR to use to show a conditions icon and text based on
          the current METAR weather report and sky conditions.
		  The iconnumber (matching the Weather-Display set of icons from 0-35) is returned.
Arguments: $icao is the 4-character UPPERCASE identifier of the METAR (e.g. 'KSJC' etc.).
          $curtime is the current time in hh:mm([am|pm]) - defaults to current time
		  $sunrise is the time of local sunrise hh:mm([am|pm]) - defaults to 07:00
		  $sunset is the time of local sunset hh:mm([am|pm])   - defaults to 19:00
		  The times are used to select a day or night version for the icon
		  
Calling sequence:
          list($Currentsolardescription,$iconnumber,$icongraphic,$icontext) = 
		     mtr_conditions($icao, $curtime, $sunrise, $sunset);
where
	$Currentsolardescription will contain a string of the text representing the metar weather and sky conditions.
    $iconnumber will be a number from 0 to 35 representing the WD icon number appropriate for the METAR weather and sky
	$icongraphic will be the name of the .gif file in ./ajax-images/ which matches the iconnumber
	$icontext will contain the alternative (WD text) destription of the icon (mostly for debugging purposes).
Examples from METAR
KSJC='2011/01/22 22:53 KSJC 222253Z 28011KT 10SM FEW160 BKN180 21/05 A2996 RMK AO2 SLP145 T02110050'
Array
    [0] => Mostly Cloudy
    [1] => 2
    [2] => day_partly_cloudy.gif
    [3] => Cloudy
KCDR='2011/01/23 00:01 KCDR 230001Z AUTO 02018KT 1/4SM -SN FZFG BKN007 OVC012 M06/M07 A2986 RMK AO2 PRESRR P0000'
Array
    [0] => Light Snow, Freezing Fog, Overcast
    [1] => 16
    [2] => night_snow.gif
    [3] => Snow
WIOO='2011/01/22 23:30 WIOO 222330Z 00000KT 3000 FU FEW011CB BKN008 25/25 Q1011 TEMPO AT0000 5000 -RA'
Array
    [0] => Smoke, Mostly Cloudy
    [1] => 7
    [2] => haze.gif
    [3] => Haze
Author:  Ken True - webmaster@saratoga-weather.org  (with a lot of code borrowed from my own works and others :)
Referemce: METAR Coding http://www.ofcm.gov/fmh-1/pdf/L-CH12.pdf from Federal Meteorological Handbook No. 1 (FCM-H1-2005)
Also see: http://en.wikipedia.org/wiki/METAR for more descriptions.
Note: Runway conditions are not decoded by this function.
Version 1.00 - 21-Jan-2011 - initial release
Version 1.01 - 24-Mar-2011 - added optional return of large-icon .jpg image name for condition and $metar array.
Version 1.02 - 10-Aug-2011 - fixes for function name collisions with *-mesomap.php programs
Version 1.03 - 01-Oct-2011 - added support for alternative animated icon set from http://www.meteotreviglio.com/ 
Version 1.04 - 09-Oct-2011 - fixed issue with 'RA' (rain) condition non-detection
Version 1.05 - 17-Nov-2011 - added $metarGMT optional return and UOM specs
Version 1.06 - 19-Nov-2011 - fixed formatting for Wind Chill
Version 1.07 - 19-Nov-2011 - fixed runway decode for European METARs
Version 1.08 - 22-Nov-2011 - fixed Notice: type errata
Version 1.09 - 23-Nov-2011 - fix for metar reports with >1 runway reports or limited visibility reports
Version 1.10 - 24-Nov-2011 - fix for CAVOK with km/miles selection based on wind units
Version 1.11 - 29-Nov-2011 - added cloud-details return for wxmetar.php page
Version 1.12 - 04-May-2012 - added fix for variable wind decode like VRB02G03KT
Version 1.13 - 31-Aug-2012 - added fixes for incomplete visibility and multiple conditions decode
Version 1.14 - 23-May-2016 - chg source to tgftp.nws.noaa.gov/data from weather.noaa.gov/pub/data (deprecated site)
global $Debug, $GMCVersion;
$GMCVersion = 'get-metar-conditions-inc.php - Version 1.14 - 23-May-2016';
if (isset($_REQUEST['sce']) && ( strtolower($_REQUEST['sce']) == 'view' or
    strtolower($_REQUEST['sce']) == 'show') ) {
   //--self downloader --
   $filenameReal = __FILE__;
   $download_size = filesize($filenameReal);
   header('Pragma: public');
   header('Cache-Control: private');
   header('Cache-Control: no-cache, must-revalidate');
   header("Content-type: text/plain");
   header("Accept-Ranges: bytes");
   header("Content-Length: $download_size");
   header('Connection: close');
   readfile($filenameReal);
   exit;
// local settings
$cacheFileDir = './';   // default cache file directory
global $cacheFileDir;
//------------ override from Settings.php --------------------
global $SITE;
if(isset($SITE['cacheFileDir']))     {$cacheFileDir = $SITE['cacheFileDir']; }
//------------ end override from Settings.php ----------------
# ------------------------------------------------------------------------------
# main function mtr_conditions
#-------------------------------------------------------------------------------
function mtr_conditions ($icao,$curtime='',$sunrise='',$sunset='',$useJpgIcon=false,$UOM='&deg;F,mph,inHg,in') {
  global $lang, $Debug, $mtrInfo, $metarPtr, $group, $GMCVersion;
  global $Icons, $IconsLarge, $IconsText, $cacheFileDir;
  $metarCacheName = $cacheFileDir."metarcache-$icao.txt";
  $metarRefetchSeconds = 600;  // fetch every 10 minutes
  list($uomTemp,$uomWind,$uomBaro,$uomRain) = explode(',',$UOM.',,,,');
  global $UOMS;
  $UOMS = array(
    'TEMP' => "$uomTemp",
	'WIND' => "$uomWind",
	'BARO' => "$uomBaro",
	'RAIN' => "$uomRain"
   );
  if(isset($_REQUEST['cache']) and strtolower($_REQUEST['cache']) == 'refresh') {
      $metarRefetchSeconds = 0;
  if(isset($_REQUEST['cache']) and strtolower($_REQUEST['cache']) == 'norefresh') {
      $metarRefetchSeconds = 9999999;
  $mtrInfo = array();
  $Debug .= "<!-- $GMCVersion -->\n";
//  $Debug .= "<!-- UOMS\n".print_r($UOMS,true)."-->\n";
  if(isset($icao) and strlen($icao) == 4) {
	$Debug .= "<!-- mtr_conditions using METAR ICAO='$icao' -->\n";
	$host = 'tgftp.nws.noaa.gov';
	$path = '/data/observations/metar/stations/';
	$metarURL = 'http://' . $host . $path . $icao . '.TXT';
    $html = '';
    $raw = '';
// get the metar data from the cache or from the URL if the cache is 'stale'
  if (file_exists($metarCacheName) and filemtime($metarCacheName) + $metarRefetchSeconds > time()) {
      $WhereLoaded = "from cache $metarCacheName";
      $html = implode('', file($metarCacheName));
    } else {
      $WhereLoaded = "from URL $metarURL";
      $rawhtml = mtr_fetchUrlWithoutHanging($metarURL);
	  $i = strpos($rawhtml,"\r\n\r\n");
	  $headers = substr($rawhtml,0,$i-1);
	  $content = substr($rawhtml,$i+2);
      $RC = '';
	  if (preg_match("|^HTTP\/\S+ (.*)\r\n|",$rawhtml,$matches)) {
	    $RC = trim($matches[1]);
	  }
	  if(!preg_match('|200 |',$RC)) {
	     $t = array("unable to load $icao data RC=$RC",5,'day_partly_cloudy.gif',"unable to load $icao data RC=$RC",array(),$metarGMT);
         $Debug .= "<!-- mtr_conditions returns RC='".$RC."' for ICAO/METAR='$icao' -->\n";
        return $t;
	  }
	  if(preg_match('|Content-Encoding: gzip|Ui',$headers)) {
		  $Debug .= "<!-- Webserver returned gzipped data, dang 'em -- unzipping response -->\n";
		  // $Debug .= "<!-- content='".$content."' -->\n";
		  $err = 'None';
		  $html = trim(mtr_gzdecode($content,$err));
		  $Debug .= "<!-- mtr_gzdecode err='$err' -->\n";
		  if($err <> 'None') {
		    $Debug .= "<!-- contentX='".bin2hex($content).". -->\n";
		  }
	  } else {
	      $html = $content;
	  }
    $fp = fopen($metarCacheName, "w"); 
    if($fp) {
        $write = fputs($fp, $html); 
        fclose($fp);
	  } else {
	    $Debug .= "<!--Unable to write cache $metarCacheName -->\n";
	  }
  } // end of get the METAR from cache or URL
  $raw_metar = preg_replace("/[\n\r ]+/", ' ', trim(implode(' ', (array)$html)));
  $Debug .= "<!-- loaded $WhereLoaded -->\n";
  $Debug .= "<!-- $icao='$raw_metar' -->\n";
  $metar = trim($raw_metar);
  $metarDate = preg_replace('|/|','-',substr($metar,0,16)) . ':00 GMT';
  $metarGMT = strtotime($metarDate);
  $age = abs(time() - $metarGMT); // age in seconds
  $Debug .= "<!-- age=$age sec '$metarDate' -->\n";
  mtr_load_iconDefs();  // initialize ICON defs to use and lookup arrays
  Metar formatter expects
    CYXU='2010/11/30 23:00 CYXU 302300Z 15013G18KT 5SM -RA BR OVC005 11/10 A2969 RMK SF8 SLP059'
// Clean up the metar.. some are not properly formatted, human made, most likely
    $unprocMetar = $metar;
    $metar = preg_replace('|[\r\n]+|is','',$metar);  // remove internal newlines
	$metar = preg_replace('|/////KT|is','VRB00KT',$metar); // replace bogus wind report
	$metar = preg_replace('|@|is','',$metar);       // remove strange @ in metar
	$metar = preg_replace('|///|is',' ',$metar);      // remove strange standalone slashes
	$metar = preg_replace('| /|is',' ',$metar);      // remove strange standalone slashes
	$metar = preg_replace('| / |is',' ',$metar);      // remove strange standalone slashes
	$metar = preg_replace('| \s+|is',' ',$metar);    // remove multiple spaces
	$metar = preg_replace('| COR |i',' ',$metar);    // remove COR (correction) from raw metar
	$metar = preg_replace('|(\d{5}) KT|i','${1}KT',$metar);    // fix any space in wind value
	$metar = preg_replace('| 999 |',' 9999 ',$metar); // fix malformed unlimited visibility
	$metar = preg_replace('| LRA |',' -RA ',$metar); // fix malformed light rain
	$metar = preg_replace('| HRA |',' +RA ',$metar); // fix malformed light rain
	// $metar = preg_replace('| (\d)SM|i',' 0${1}SM',$metar); // fix malformed visibility to two digits
 	// $metar = preg_replace('| (\d+) (\d+)/(\d+)SM |i',' $1_$2/${3}SM ',$metar); // fix NOAA visibility
    mtr_process($metar,$icao);  // actually parse the metar for conditions.. results in $mtrInfo array
    // assemble the conditions string:
	// use conditions first
	// use sky (clouds) second
	$mtrInfo['RAW-METAR'] = $unprocMetar;
    $Sky = isset($mtrInfo['CLOUDS'])?trim($mtrInfo['CLOUDS']):'';
    $Weather = isset($mtrInfo['CONDITIONS'])?trim($mtrInfo['CONDITIONS']):'';
    $Conds = $Weather;  // Choose any conditions report first
    if($Sky <> '' and $Conds <> '') {$Conds .= ", $Sky"; } // append a clouds descriptor if available
	if($Conds == '' and $Sky <> '') {$Conds = $Sky; }     // no weathercond .. use sky only
    $iconnumber = mtr_get_iconnumber('',$Conds,$sunrise,$sunset);
	if(!$useJpgIcon) {
	  $useicon = $Icons[$iconnumber];
	} else {
	  $useicon = $IconsLarge[$iconnumber];
	$icondescr = $IconsText[$iconnumber];
    $t = array($Conds,$iconnumber,$useicon,$icondescr,$mtrInfo,$metarGMT);
  } else {
	$t = array("$icao not loaded",5,'day_partly_cloudy.gif',"unable to load data RC=$RC",array(),$metarGMT);
  } // end of ICAO processing
  $Debug .= "<!-- mtr_conditions returns '".$t[0]."' iconnumber='".$t[1]."' img='".$t[2]."' comment='".$t[3]."' -->\n";
  return $t;
// ------------------------------------------------------------
// get contents from one URL and return as string 
 function mtr_fetchUrlWithoutHanging($url,$useFopen=false) {
// thanks to Tom at Carterlake.org for this script fragment
  global $Debug, $needCookie,$timeStamp,$TOTALtime;
  $overall_start = time();
  if (! $useFopen) {
   // Set maximum number of seconds (can have floating-point) to wait for feed before displaying page without feed
   $numberOfSeconds=5;   
   // Suppress error reporting so Web site visitors are unaware if the feed fails
   error_reporting(0);
   // Extract resource path and domain from URL ready for fsockopen
   $FullUrl = $url;
   $urlParts = parse_url($url);
   $domain = $urlParts['host'];
   if(isset($urlParts['port'])) {
      $port   = $urlParts['port'];
   } else { 
      $port   = 80;
   }
   $resourcePath = $urlParts['path'];
   $resourcePath = preg_replace('|nocache|','?'.$timeStamp,$resourcePath);
   if(isset($urlParts['query']))    {$resourcePath .= "?" . $urlParts['query']; }
   if(isset($urlParts['fragment'])) {$resourcePath .= "#" . $urlParts['fragment']; }
   $T_start = mtr_microtime_float();
   $hostIP = gethostbyname($domain);
   $T_dns = mtr_microtime_float();
   $ms_dns  = sprintf("%01.3f",round($T_dns - $T_start,3));
   $Debug .= "<!-- GET $resourcePath HTTP/1.1 \n      Host: $domain  Port: $port IP=$hostIP-->\n";
//   print "GET $resourcePath HTTP/1.1 \n      Host: $domain  Port: $port IP=$hostIP\n";
   // Establish a connection
   $socketConnection = fsockopen($hostIP, $port, $errno, $errstr, $numberOfSeconds);
   $T_connect = mtr_microtime_float();
   $T_puts = 0;
   $T_gets = 0;
   $T_close = 0;
   if (!$socketConnection)
       {
       // You may wish to remove the following debugging line on a live Web site
       $Debug .= "<!-- Network error: $errstr ($errno) -->\n";
//       print "Network error: $errstr ($errno)\n";
       }    // end if
   else    {
       $xml = '';
	   $getString = "GET $resourcePath HTTP/1.1\r\nHost: $domain\r\nConnection: Close\r\n";
	   if (isset($needCookie[$domain])) {
	     $getString .= $needCookie[$domain] . "\r\n";
		 $Debug .=  "<!-- cookie used '" . $needCookie[$domain] . "' for GET to $domain -->\n";
	   }
	   $getString .= "User-agent: Mesomap Loader\r\nAccept: text/plain,text/html\r\nAccept-Encoding: gzip;q=0,compress;q=0\r\n";
	   $getString .= "\r\n";
//	   print "Sending:\n$getString\n\n";
       fputs($socketConnection, $getString);
       $T_puts = mtr_microtime_float();
	   
       // Loop until end of file
	   $TGETstats = array();
	   $TGETcount = 0;
       while (!feof($socketConnection))
           {
		   $T_getstart = mtr_microtime_float();
           $xml .= fgets($socketConnection, 16384);
		   $T_getend = mtr_microtime_float();
		   $TGETcount++;
		   $TGETstats[$TGETcount] = sprintf("%01.3f",round($T_getend - $T_getstart,3));
           }    // end while
       $T_gets = mtr_microtime_float();
       fclose ($socketConnection);
       $T_close = mtr_microtime_float();
       }    // end else
   $ms_connect = sprintf("%01.3f",round($T_connect - $T_dns,3));
   if($T_close > 0) {
      $ms_puts = sprintf("%01.3f",round($T_puts - $T_connect,3));
	  $ms_gets = sprintf("%01.3f",round($T_gets - $T_puts,3));
	  $ms_close = sprintf("%01.3f",round($T_close - $T_gets,3));
	  $ms_total = sprintf("%01.3f",round($T_close - $T_start,3)); 
    } else {
       $ms_puts = 'n/a';
	  $ms_gets = 'n/a';
	  $ms_close = 'n/a';
	  $ms_total = sprintf("%01.3f",round($T_connect - $T_start,3)); 
   }
   $Debug .= "<!-- HTTP stats:  dns=$ms_dns conn=$ms_connect put=$ms_puts get($TGETcount blocks)=$ms_gets close=$ms_close total=$ms_total secs -->\n";
//   print  "HTTP stats: dns=$ms_dns conn=$ms_connect put=$ms_puts get($TGETcount blocks)=$ms_gets close=$ms_close total=$ms_total secs \n";
//   foreach ($TGETstats as $block => $mstimes) {
//     print "HTTP Block $block took $mstimes\n";
//   }
   $TOTALtime+= ($T_close - $T_start);
   $overall_end = time();
   $overall_elapsed =   $overall_end - $overall_start;
   $Debug .= "<!-- fetch function elapsed= $overall_elapsed secs. -->\n"; 
//   print "fetch function elapsed= $overall_elapsed secs.\n"; 
   return($xml);
 } else {
//   print "<!-- using file function -->\n";
   $T_start = mtr_microtime_float();
   $xml = implode('',file($url));
   $T_close = mtr_microtime_float();
   $ms_total = sprintf("%01.3f",round($T_close - $T_start,3)); 
   $Debug .= "<!-- file() stats: total=$ms_total secs -->\n";
//   print " file() stats: total=$ms_total secs.\n";
   $TOTALtime+= ($T_close - $T_start);
   $overall_end = time();
   $overall_elapsed =   $overall_end - $overall_start;
   $Debug .= "<!-- fetch function elapsed= $overall_elapsed secs. -->\n"; 
//   print "fetch function elapsed= $overall_elapsed secs.\n"; 
   return($xml);
   }    // end mtr_fetchUrlWithoutHanging
// ------------------------------------------------------------------
function mtr_microtime_float()
   list($usec, $sec) = explode(" ", microtime());
   return ((float)$usec + (float)$sec);
// ------------------------------------------------------------------
function mtr_gzdecode($rawdata,&$error='',&$filename='',$maxlength=null)
	//0d0a1f8b0800000000000003454d390ec3300cdbfb0aee45654a71e463ed5ef40bdd0214feff5adb49130814285122d502535082
	if(strcmp(substr($data,0,2),"\x0d\x0a")) { // got an extra \r\n in the data?
		$data = substr($rawdata,2);
	} else {
		$data = $rawdata;
    $len = strlen($data);
    if ($len < 18 || strcmp(substr($data,0,2),"\x1f\x8b")) {
        $error = "Not in GZIP format.";
        return null;  // Not GZIP format (See RFC 1952)
    }
    $method = ord(substr($data,2,1));  // Compression method
    $flags  = ord(substr($data,3,1));  // Flags
    if ($flags & 31 != $flags) {
        $error = "Reserved bits not allowed.";
        return null;
    }
    // NOTE: $mtime may be negative (PHP integer limitations)
    $mtime = unpack("V", substr($data,4,4));
    $mtime = $mtime[1];
    $xfl   = substr($data,8,1);
    $os    = substr($data,8,1);
    $headerlen = 10;
    $extralen  = 0;
    $extra     = "";
    if ($flags & 4) {
        // 2-byte length prefixed EXTRA data in header
        if ($len - $headerlen - 2 < 8) {
            return false;  // invalid
        }
        $extralen = unpack("v",substr($data,8,2));
        $extralen = $extralen[1];
        if ($len - $headerlen - 2 - $extralen < 8) {
            return false;  // invalid
        }
        $extra = substr($data,10,$extralen);
        $headerlen += 2 + $extralen;
    }
    $filenamelen = 0;
    $filename = "";
    if ($flags & 8) {
        // C-style string
        if ($len - $headerlen - 1 < 8) {
            return false; // invalid
        }
        $filenamelen = strpos(substr($data,$headerlen),chr(0));
        if ($filenamelen === false || $len - $headerlen - $filenamelen - 1 < 8) {
            return false; // invalid
        }
        $filename = substr($data,$headerlen,$filenamelen);
        $headerlen += $filenamelen + 1;
    }
    $commentlen = 0;
    $comment = "";
    if ($flags & 16) {
        // C-style string COMMENT data in header
        if ($len - $headerlen - 1 < 8) {
            return false;    // invalid
        }
        $commentlen = strpos(substr($data,$headerlen),chr(0));
        if ($commentlen === false || $len - $headerlen - $commentlen - 1 < 8) {
            return false;    // Invalid header format
        }
        $comment = substr($data,$headerlen,$commentlen);
        $headerlen += $commentlen + 1;
    }
    $headercrc = "";
    if ($flags & 2) {
        // 2-bytes (lowest order) of CRC32 on header present
        if ($len - $headerlen - 2 < 8) {
            return false;    // invalid
        }
        $calccrc = crc32(substr($data,0,$headerlen)) & 0xffff;
        $headercrc = unpack("v", substr($data,$headerlen,2));
        $headercrc = $headercrc[1];
        if ($headercrc != $calccrc) {
            $error = "Header checksum failed.";
            return false;    // Bad header CRC
        }
        $headerlen += 2;
    }
    // GZIP FOOTER
    $datacrc = unpack("V",substr($data,-8,4));
    $datacrc = sprintf('%u',$datacrc[1] & 0xFFFFFFFF);
    $isize = unpack("V",substr($data,-4));
    $isize = $isize[1];
    // decompression:
    $bodylen = $len-$headerlen-8;
    if ($bodylen < 1) {
        // IMPLEMENTATION BUG!
        return null;
    }
    $body = substr($data,$headerlen,$bodylen);
    $data = "";
    if ($bodylen > 0) {
        switch ($method) {
        case 8:
            // Currently the only supported compression method:
            $data = gzinflate($body,$maxlength);
            break;
        default:
            $error = "Unknown compression method.";
            return false;
        }
    }  // zero-byte body content is allowed
    // Verifiy CRC32
    $crc   = sprintf("%u",crc32($data));
    $crcOK = $crc == $datacrc;
    $lenOK = $isize == strlen($data);
    if (!$lenOK || !$crcOK) {
        $error = ( $lenOK ? '' : 'Length check FAILED. ') . ( $crcOK ? '' : 'Checksum FAILED.');
        return false;
    }
    return $data;
// ------------------------------------------------------------------
function mtr_load_iconDefs () {
global $Icons, $IconsLarge, $IconsText, $Conditions, $Debug;
   // CURRENT CONDITIONS ICONS FOR clientraw.txt
   // create array for icons. There are 35 possible values in clientraw.txt
   // It would be simpler to do this with array() but to make it easier to 
   // modify each element is defined individually. Each index [#] corresponds
   // to the value provided in clientraw.txt
   $Icons[0] = "day_clear.gif";            // image sunny.visible
   $Icons[1] = "night_clear.gif";          // image clearnight.visible
   $Icons[2] = "day_partly_cloudy.gif";    // image cloudy.visible
   $Icons[3] = "day_partly_cloudy.gif";    // image cloudy2.visible
   $Icons[4] = "night_partly_cloudy.gif";  // image night cloudy.visible
   $Icons[5] = "day_clear.gif";            // image dry.visible
   $Icons[6] = "fog.gif";                  // image fog.visible
   $Icons[7] = "haze-sm.gif";                 // image haze.visible
   $Icons[8] = "day_heavy_rain.gif";       // image heavyrain.visible
   $Icons[9] = "day_mostly_sunny.gif";     // image mainlyfine.visible
   $Icons[10] = "mist-sm.gif";                // image mist.visible
   $Icons[11] = "fog.gif";                 // image night fog.visible
   $Icons[12] = "night_heavy_rain.gif";    // image night heavyrain.visible
   $Icons[13] = "night_cloudy.gif";        // image night overcast.visible
   $Icons[14] = "night_rain.gif";          // image night rain.visible
   $Icons[15] = "night_light_rain.gif";    // image night showers.visible
   $Icons[16] = "night_snow.gif";          // image night snow.visible
   $Icons[17] = "night_tstorm.gif";        // image night thunder.visible
   $Icons[18] = "day_cloudy.gif";          // image overcast.visible
   $Icons[19] = "day_partly_cloudy.gif";   // image partlycloudy.visible
   $Icons[20] = "day_rain.gif";            // image rain.visible
   $Icons[21] = "day_rain.gif";            // image rain2.visible
   $Icons[22] = "day_light_rain.gif";      // image showers2.visible
   $Icons[23] = "sleet.gif";               // image sleet.visible
   $Icons[24] = "sleet.gif";               // image sleetshowers.visible
   $Icons[25] = "day_snow.gif";            // image snow.visible
   $Icons[26] = "day_snow.gif";            // image snowmelt.visible
   $Icons[27] = "day_snow.gif";            // image snowshowers2.visible
   $Icons[28] = "day_clear.gif";           // image sunny.visible
   $Icons[29] = "day_tstorm.gif";          // image thundershowers.visible
   $Icons[30] = "day_tstorm.gif";          // image thundershowers2.visible
   $Icons[31] = "day_tstorm.gif";          // image thunderstorms.visible
   $Icons[32] = "tornado.gif";             // image tornado.visible
   $Icons[33] = "windy-sm.gif";               // image windy.visible
   $Icons[34] = "day_partly_cloudy.gif";   // stopped rainning
   $Icons[35] = "windyrain-sm.gif";   // wind + rain
   $IconsText[0] =  'Sunny';
   $IconsText[1] =  'Clear';
   $IconsText[2] =  'Cloudy';
   $IconsText[3] =  'Cloudy2';
   $IconsText[4] =  'Partly Cloudy';
   $IconsText[5] =  'Dry';
   $IconsText[6] =  'Fog';
   $IconsText[7] =  'Haze';
   $IconsText[8] =  'Heavy Rain';
   $IconsText[9] =  'Mainly Fine';
   $IconsText[10] = 'Mist';
   $IconsText[11] = 'Fog';
   $IconsText[12] = 'Heavy Rain';
   $IconsText[13] = 'Overcast';
   $IconsText[14] = 'Rain';
   $IconsText[15] = 'Showers';
   $IconsText[16] = 'Snow';
   $IconsText[17] = 'Thunder';
   $IconsText[18] = 'Overcast';
   $IconsText[19] = 'Partly Cloudy';
   $IconsText[20] = 'Rain';
   $IconsText[21] = 'Rain2';
   $IconsText[22] = 'Showers2';
   $IconsText[23] = 'Sleet';
   $IconsText[24] = 'Sleet Showers';
   $IconsText[25] = 'Snow';
   $IconsText[26] = 'Snow Melt';
   $IconsText[27] = 'Snow Showers2';
   $IconsText[28] = 'Sunny';
   $IconsText[29] = 'Thunder Showers';
   $IconsText[30] = 'Thunder Showers2';
   $IconsText[31] = 'Thunder Storms';
   $IconsText[32] = 'Tornado';
   $IconsText[33] = 'Windy';
   $IconsText[34] = 'Stopped Raining';
   $IconsText[35] = 'Wind/Rain';
   $IconsLarge = array(
	"skc.jpg",          //  0 imagesunny.visible
	"nskc.jpg",         //  1 imageclearnight.visible
	"bkn.jpg",          //  2 imagecloudy.visible
	"sct.jpg",          //  3 imagecloudy2.visible
	"nbkn.jpg",         //  4 imagecloudynight.visible
	"sct.jpg",          //  5 imagedry.visible
	"fg.jpg",           //  6 imagefog.visible
	"hazy.jpg",         //  7 imagehaze.visible
	"ra.jpg",           //  8 imageheavyrain.visible
	"few.jpg",          //  9 imagemainlyfine.visible
	"mist.jpg",         // 10 imagemist.visible
	"nfg.jpg",          // 11 imagenightfog.visible
	"nra.jpg",          // 12 imagenightheavyrain.visible
	"novc.jpg",         // 13 imagenightovercast.visible
	"nra.jpg",          // 14 imagenightrain.visible
	"nshra.jpg",        // 15 imagenightshowers.visible
	"nsn.jpg",          // 16 imagenightsnow.visible
	"ntsra.jpg",        // 17 imagenightthunder.visible
	"ovc.jpg",          // 18 imageovercast.visible
	"sct.jpg",          // 19 imagepartlycloudy.visible
	"ra.jpg",           // 20 imagerain.visible
	"ra.jpg",           // 21 imagerain2.visible
	"shra.jpg",         // 22 imageshowers2.visible
	"ip.jpg",           // 23 imagesleet.visible
	"ip.jpg",           // 24 imagesleetshowers.visible
	"sn.jpg",           // 25 imagesnow.visible
	"sn.jpg",           // 26 imagesnowmelt.visible
	"sn.jpg",           // 27 imagesnowshowers2.visible
	"skc.jpg",          // 28 imagesunny.visible
	"scttsra.jpg",      // 29 imagethundershowers.visible
	"hi_tsra.jpg",      // 30 imagethundershowers2.visible
	"tsra.jpg",         // 31 imagethunderstorms.visible
	"nsvrtsra.jpg",     // 32 imagetornado.visible
	"wind.jpg",         // 33 imagewindy.visible
	"ra1.jpg",          // 34 stopped rainning
	"windyrain.jpg"     // 35 windy/rain 
	);	
/* the following is a lookup table for conditions text from the metar to return
  the WD Icon number above.  It is sorted such that the most severe conditions
  are at the top of the list, with least severe at the bottom.  This is done
  so that significant weather icon will prevail when multiple conditions/sky cover
  messages are emitted by the METAR station.
  tornado/waterspout
  thunder (in any form)
  Ice / Snow/ Freezing / Sleet
  Rain
  Fog
  Haze/Smoke/Dust/Volcano
  cloud cover
$Condstring = '
cond|tornado|32|32|Severe storm|
cond|thunder|31|17|Thunder storm|
cond|ice|23|23|Sleet|
cond|snow|25|16|Snow|
cond|freezing rain|23|23|FrzgRn|
cond|freezing drizzle|23|23|FrzgRn|
cond|freezing fog|6|11|FrzgFog|
cond|hail|23|23|Hail|
cond|heavy rain|8|12|Rain|
cond|light rain|22|15|Rain|
cond|showers|22|15|Showers|
cond|rain|20|14|Rain|
cond|fog|6|11|Fog|
cond|drizzle|22|15|Drizzle|
cond|mist|10|10|Mist|
cond|haze|7|7|Haze|
cond|dust|7|7|Dust|
cond|smoke|7|7|Smoke|
cond|volcanic|7|7|Volcanic Ash|
cond|sand|7|7|Sand|
cond|overcast|18|18|Overcast|
cond|mostly cloudy|2|4|Mostly Cloudy|
cond|partly cloudy|19|4|Partly Cloudy|
cond|few clouds|9|4|Few Clouds|
cond|clear|0|1|Clear|
cond|cloud|19|4|Variable Clouds|
$config = explode("\n",$Condstring);
foreach ($config as $key => $rec) { // load the parser condition strings
  $recin = trim($rec);
  if ($recin and substr($recin,0,1) <> '#') { // got a non comment record
    list($type,$keyword,$dayicon,$nighticon,$condition) = explode('|',$recin . '|||||');
        if (isset($type) and strtolower($type) == 'cond' and isset($condition)) {
          $Conditions["$keyword"] = "$dayicon\t$nighticon\t$condition";
//          $Debig .= "<!-- '$keyword'='$dayicon','$nighticon' '$condition' -->\n";
        }
  } // end if not comment or blank
} // end loading of loop over config recs
return;
// ------------------------------------------------------------------
function mtr_get_iconnumber ($time,$condString,$sunrise,$sunset) {
     // Many thanks to Larry at Anole Computer for the basis of
	 // this routine.
	 // adapted by Ken True to be compatible with WD icon set
     global $Icons, $IconsText, $Conditions, $Debug;
	 $Debug .= "<!-- mtr_get_iconnumber begin: '$time','$condString','$sunrise','$sunset' -->\n";
	 if(!preg_match('/^\d{1,2}:\d{2}[:\d{2}]{0,1}\s*[am|pm]*$/i',$sunrise)) { $sunrise = '';  }
	 if(!preg_match('/^\d{1,2}:\d{2}[:\d{2}]{0,1}\s*[am|pm]*$/i',$sunset)) { $sunset = '';  }
     $sunrise2 = mtr_fixupTime(($sunrise<>'')?"$sunrise":"6:00a");
     $sunset2 = mtr_fixupTime(($sunset<>'')?"$sunset":"7:00p");
     $time2 =   mtr_fixupTime(($time<>'')?"$time":date("H:i",time()));
     if ($time2 >= $sunrise2 and $time2 <= $sunset2) {
         $daynight = 'day';
     } // end if
     else {
         $daynight = 'night';
     } // end else
	 $Debug .= "<!-- mtr_get_iconnumber using: time2='$time2' as $daynight for sunrise2='$sunrise2',sunset2='$sunset2'  -->\n";
  $condString = trim($condString);
  reset($Conditions);  // Do search in load order
  $iconnumb = 5; // default is a sunny icon
  // scan over the conditions table and see if an icon fits the description in the table
  foreach ($Conditions as $cond => $condrec) { // look for matching condition
   if(preg_match("!$cond!i",$condString,$mtemp)) {
     list($dayicon,$nighticon,$condition) = explode("\t",$condrec);
         if (preg_match('|night|i',$daynight)) {
           $iconnumb = $nighticon;
         } else {
           $iconnumb = $dayicon;
         }
         break;
   }
 } // end of conditions search
  return $iconnumb;
// ------------------------------------------------------------------
function mtr_fixupTime ($intime) {
  global $Debug;
  $tfixed = preg_replace('/\s+([AM|PM])/i',"$1",$intime);
  $tfixed = preg_replace('/^(\S+)\s+(\S+)$/is',"$2",$tfixed);
  $t = explode(':',$tfixed);
  if (preg_match('/p/i',$tfixed)) { $t[0] = $t[0] + 12; }
  if ($t[0] > 23) {$t[0] = 12; }
  if (preg_match('/^12.*a/i',$tfixed)) { $t[0] = 0; }
  if ($t[0] < '10') {$t[0] = sprintf("%02d",$t[0]); } // leading zero on hour.
  $t2 = join(':',$t); // put time back to gether;
  $t2 = preg_replace('/[^\d\:]/is','',$t2); // strip out the am/pm if any
  $Debug .= "<!-- mtr_fixupTime in='$intime' tfixed='$tfixed' out='$t2' -->\n";
  return($t2);	
// ---------------------------------------------------------
function mtr_process($metar,$icao) {
  global $lang,$Debug, $mtrInfo, $metarPtr, $group,$UOMS;
  $Debug .= "<!-- called mtr_process -->\n";
  $Debug .= "<!-- UOMS\n".print_r($UOMS,true)." -->\n";
	//   This function directs the examination of each group of the METAR. The problem
	// with a METAR is that not all the groups have to be there. Some groups could be
	// missing. Fortunately, the groups must be in a specific order. (This function
	// also assumes that a METAR is well-formed, that is, no typographical mistakes.)
	//   This function uses a function variable to organize the sequence in which to
	// decode each group. Each function checks to see if it can decode the current
	// METAR part. If not, then the group pointer is advanced for the next function
	// to try. If yes, the function decodes that part of the METAR and advances the
	// METAR pointer and group pointer. (If the function can be called again to
	// decode similar information, then the group pointer does not get advanced.)
	// This function was modified by Ken True - webmaster@saratoga-weather.org to
	// work with the template sets.
	$lang = 'en';
  foreach ($mtrInfo as $i => $value) { // clear out prior contents
   unset($mtrInfo[$i]);
//    $mtrInfo[$i] = '';
//  $Debug .= "<!-- wxInfo cleared\n" . print_r($mtrInfo,true) . " -->\n";
  $mtrInfo['STATION'] = $icao;
  $mtrInfo['METAR'] = $metar;
	if ($metar != '') {
		$metarParts = explode(' ',$metar);
		$groupName = array('mtr_get_station',
                       'mtr_get_time',
                       'mtr_get_station_type',
                       'mtr_get_wind',
                       'mtr_get_var_wind',
                       'mtr_get_visibility',
                       'mtr_get_runway',
                       'mtr_get_conditions',
                       'mtr_get_cloud_cover',
                       'mtr_get_temperature',
                       'mtr_get_altimeter');
		$metarPtr = 3;  // mtr_get_station identity is ignored
		$group = 1; // start with Time
		while ($group < count($groupName)) {
			$part = $metarParts[$metarPtr];
			$Debug .= "<!-- calling '" . $groupName[$group] . "' part='$part' ptr=$metarPtr grp=$group -->\n";
			$groupName[$group]($part);  // $groupName is a function variable
			}
	} else {
	  $mtrInfo['ERROR'] = 'Data not available';
	$Debug .= "<!-- decode for $icao in mtrInfo is\n".print_r($mtrInfo,true)." -->\n";
//----------------------------------------------------------------
// Ignore station code. Script assumes this matches requesting
// $station. This function is never called. It is here for
// completeness of documentation.
function mtr_get_station($part)
{ global $lang,$Debug, $mtrInfo, $metarPtr, $group;
  if (strlen($part) == 4 and $group == 0)
    $group++;
    $metarPtr++;
function mtr_get_time($part)
{ global $lang,$Debug, $mtrInfo, $metarPtr, $group;
  // Ignore observation time. This information is found in the
  // first line of the NWS file.
  // Format is ddhhmmZ where dd = day, hh = hours, mm = minutes
  // in UTC time.
  if (substr($part,-1) == 'Z') {
     $dd = substr($part,0,2);
	 $hh = substr($part,2,2);
	 $mm = substr($part,4,2);
     $metarPtr++;
  $group++;
function mtr_get_station_type($part)
{ global $lang,$Debug, $mtrInfo, $metarPtr, $group;
  // Ignore station type if present.
  if ($part == 'AUTO' || $part == 'COR')
    $metarPtr++;
  $group++;
  function mtr_speed($part, $unit)
    global $lang,$Debug, $mtrInfo, $metarPtr, $group, $UOMS;
    // Convert wind speed into miles per hour.
    // Some other common conversion factors (to 6 significant digits):
    //   1 mi/hr = 1.15080 knots  = 0.621371 km/hr = 2.23694 m/s
    //   1 ft/s  = 1.68781 knots  = 0.911344 km/hr = 3.28084 m/s
    //   1 knot  = 0.539957 km/hr = 1.94384 m/s
    //   1 km/hr = 1.852 knots  = 3.6 m/s
    //   1 m/s   = 0.514444 knots = 0.277778 km/s
    if ($unit == 'KT') 
      $speed = 1.1508 * $part;    // from knots
    elseif ($unit == 'MPS')
      $speed = 2.23694 * $part;   // from meters per second
    else
      $speed = 0.621371 * $part;  // from km per hour
    $speedkph = $speed / 0.621371;
    if (preg_match('|mph|i',$UOMS['WIND']))
      $speed ="" . round($speed) . " mph (". round($speedkph) . " km/h)";
    else
      $speed = "" . round($speedkph) . " km/h";
	return $speed;
//-------------------------------------------------------------------------
// Decodes wind direction and speed information.
// Format is dddssKT where ddd = degrees from North, ss = speed,
// KT for knots  or dddssGggKT where G stands for gust and gg = gust
// speed. (ss or gg can be a 3-digit number.)
// KT can be replaced with MPH for meters per second or KMH for
//kilometers per hour.
function mtr_get_wind($part)
{ global $lang,$Debug, $mtrInfo, $metarPtr, $group;
  if (preg_match('/^([0-9G]{5,10}|VRB[0-9G]{2,7})(KT|MPS|KMH)$/',$part,$pieces))
    $part = $pieces[1];
    $unit = $pieces[2];
    if ($part == '00000')
    {
      $mtrInfo['WIND'] = 'calm';  // no wind
    }
    else
    {
      preg_match('/([0-9]{3}|VRB)([0-9]{2,3})G?([0-9]{2,3})?/',$part,$pieces);
      if ($pieces[1] == 'VRB')
        $direction = 'varies';
      else
      {
        $angle = (integer) $pieces[1];
        $compass = array('N','NNE','NE','ENE','E','ESE','SE','SSE',
                         'S','SSW','SW','WSW','W','WNW','NW','NNW');
        $direction = $compass[round($angle / 22.5) % 16];
      }
      if (!isset($pieces[3]) or (isset($pieces[3]) and $pieces[3] == 0 ) ) {
        $gust = '';
	   } else {
        $gust = ', gusting to ' . mtr_speed($pieces[3], $unit);
	   }
	  if ($unit == 'KT') {
        $speed = 1.1508 * $pieces[2];    // from knots
	  } elseif ($unit == 'MPS') {
        $speed = 2.23694 * $pieces[2];   // from meters per second
	  } else {
        $speed = 0.621371 * $pieces[2];  // from km per hour
	  }
	  $mtrInfo['WINDMPH'] = $direction . ' at ' . round($speed) . ' mph';
      $mtrInfo['WIND'] = $direction . ' at ' . mtr_speed($pieces[2], $unit) . $gust;
    }
    $metarPtr++;
  $group++;
function mtr_get_var_wind($part)
{ global $lang,$Debug, $mtrInfo, $metarPtr, $group;
  // Ignore variable wind direction information if present.
  // Format is fffVttt where V stands for varies from fff
  // degrees to ttt degrees.
  if (preg_match('/([0-9]{3})V([0-9]{3})/',$part,$pieces))
    $metarPtr++;
  $group++;
//------------------------------------------------------------------
// Decodes visibility information. This function will be called a
// second time if visibility is limited to an integer mile plus a
// fraction part.
// Format is mmSM for mm = statute miles, or m n/dSM for m = mile
// and n/d = fraction of a mile, or just a 4-digit number nnnn (with
// leading zeros) for nnnn = meters.
function mtr_get_visibility($part) {
  global $lang,$Debug, $mtrInfo, $metarPtr, $group, $UOMS;
  static $integerMile = '';
  if (strlen($part) == 1)
    // visibility is limited to a whole mile plus a fraction part
    $integerMile = $part . ' ';
    $metarPtr++;
  elseif (preg_match('|^\d{4}$|',$part)) { 
  // international code for meters of visibility
     $kmVis = round($part/1000);
	 $miVis = round($part/1609);
     if ($miVis > 1) {$unit = ' miles';} else {$unit = ' mile';}
     if (preg_match('|mph|i',$UOMS['WIND'])) {
       $mtrInfo['VISIBILITY'] = " $miVis $unit ($kmVis km)";
	 } else {
      $mtrInfo['VISIBILITY'] = "$kmVis km";
	$integerMile = ''; 
    $metarPtr++;
    $group++;
  elseif (substr($part,-2) == 'SM')
    // visibility is in miles
    $part = substr($part,0,strlen($part)-2);
    if (substr($part,0,1) == 'M')
    {
      $prefix = 'less than ';
      $part = substr($part, 1);
    }
    else
      $prefix = '';
    if (preg_match('|mph|i',$UOMS['WIND']))
    {
      if (($integerMile == '' && preg_match('![/]!',$part,$pieces)) || $part == '1')
        $unit = ' mile';
      else
        $unit = ' miles';
    }
    $kmVis = round( $part * 1.6 );
    if (preg_match('|mph|i',$UOMS['WIND']))
      $mtrInfo['VISIBILITY'] = $prefix . $integerMile . 
                              " $part $unit ($kmVis km)";
    else
      $mtrInfo['VISIBILITY'] = "$kmVis km";
	$integerMile = '';
    $metarPtr++;
    $group++;
  elseif (substr($part,-2) == 'KM')
    // unknown (Reported by NFFN in Fiji)
	$integerMile = '';
    $metarPtr++;
    $group++;
  elseif (preg_match('/^([0-9]{4})/',$part,$pieces))
    // visibility is in meters
    $distance = round($part/ 621.4, 1);      // convert to miles
    if ($distance > 5)
      $distance = round($distance);
    if ($distance <= 1)
      $unit = ' mile';
    else
      $unit = ' miles';
    $mtrInfo['VISIBILITY'] = $distance . $unit;
	$integerMile = '';
    $metarPtr++;
    $group++;
  elseif ($part == 'CAVOK')
    // good weather
	if (preg_match('|mph|i',$UOMS['WIND'])) {
	   $mtrInfo['VISIBILITY'] = 'greater than 7 miles (10 km)';  // or 10 km
	} else {
	   $mtrInfo['VISIBILITY'] = 'greater than 10 km';  // or 10 km
    $mtrInfo['CONDITIONS'] = 'Clear';
//    $mtrInfo['CLOUDS'] = 'clear skies';
    $metarPtr++;
    $group += 4;  // can skip the next 3 groups
  else
    $group++;
function mtr_get_runway($part)
{ global $lang,$Debug, $mtrInfo, $metarPtr, $group;
  // Ignore runway information if present. Maybe called a second time.
  // Format is Rrrr/vvvvFT where rrr = runway number and
  // vvvv = visibility in feet.
//  if (substr($part,0,1) == 'R')
  if(preg_match('|^\d{4}[NESW]+$|',$part)) {
	  // WMO formatted limited visibility
	  $metarPtr++;
	  return;
  if(preg_match('|^R\d\d|',$part)) {
    $metarPtr++;
  } else {
    $group++;
function mtr_get_conditions($part) {
global $lang,$Debug, $mtrInfo, $metarPtr, $group;
	// Decodes current weather conditions. This function maybe called several times
	// to decode all conditions. To learn more about weather condition codes, visit section
	// 12.6.8 - Present Weather Group of the Federal Meteorological Handbook No. 1 at
	// www.nws.noaa.gov/oso/oso1/oso12/fmh1/fmh1ch12.htm
  if(preg_match('|^R\d\d|',$part)) { // more than one runway conditions report?
    $metarPtr++;
	static $conditions = '';
        $Debug .= "<!-- conditions='$conditions' on entry -->\n";
	static $wxCode = array(
		'VC' => 'Nearby ',
		'MI' => 'Shallow ',
		'PR' => 'Partial ',
		'BC' => 'Patches of ',
		'DR' => 'Low Drifting ',
		'BL' => 'Blowing ',
		'SH' => 'Showers',
		'TS' => 'Thunderstorm',
		'FZ' => 'Freezing ',
		'DZ' => 'Drizzle',
		'RA' => 'Rain',
		'SN' => 'Snow',
		'SG' => 'Snow Grains',
		'IC' => 'Ice Crystals',
		'PE' => 'Ice Pellets',
		'GR' => 'Hail',
		'GS' => 'Small Hail',  // and/or snow pellets
		'UP' => '',   // leave 'Unknown' out of the conditions .. reads better :)
		'BR' => 'Mist',
		'FG' => 'Fog',
		'FU' => 'Smoke',
		'VA' => 'Volcanic Ash',
		'DU' => 'Widespread Dust',
		'SA' => 'Sand',
		'HZ' => 'Haze',
		'PY' => 'Spray',
		'PO' => 'Well-developed Dust/Sand Whirls',
		'SQ' => 'Squalls',
		'FC' => 'Funnel Cloud, Tornado, or Waterspout',
		'SS' => 'Sandstorm/Duststorm');
	if (preg_match('/^(-|\+|VC)?(TS|SH|FZ|BL|DR|MI|BC|PR|RA|DZ|SN|SG|GR|GS|PE|IC|UP|BR|FG|FU|VA|DU|SA|HZ|PY|PO|SQ|FC|SS|DS)+$/',$part,$pieces)) {
	    $Debug .= "<!-- mtr_get_conditions part='$part' -->\n";
		$join = (strlen($conditions) == 0)?'':', '; // append conditions with a ', ' between
		if (substr($part,0,1) == '-') {
			$prefix = 'Light ';
			$part = substr($part,1);
			}
		elseif (substr($part,0,1) == '+') {
			$prefix = 'Heavy ';
			$part = substr($part,1);
			}
		elseif (substr($part,0,2) == 'VC') {
			$prefix = 'Nearby ';
			$part = substr($part,2);
			}
		else $prefix = '';  // moderate conditions have no descriptor
		$conditions .= $join . $prefix;
		// The 'showers' code 'SH' is moved behind the next 2-letter code to make the English translation read better.
		if (substr($part,0,2) == 'SH') $part = substr($part,2,2) . substr($part,0,2). substr($part, 4);
		while ($code = substr($part,0,2)) {
			$join = (strlen($conditions) < 1)?' ':', ';
			$conditions .= $wxCode[$code]. $join;
			$part = substr($part,2);
			}
		$conditions = preg_replace('|, $|','',$conditions);  // remove trailing comma if any
		$conditions = preg_replace('| , |is',', ',$conditions); // replace space before comma
		$conditions = preg_replace('|\s+|is',' ',$conditions);  // remove multiple spaces
		$mtrInfo['CONDITIONS'] = $conditions;
//        $Debug .= "<!-- conditions='$conditions' metarPtr incr -->\n";
		$metarPtr++;
	else {
		$mtrInfo['CONDITIONS'] = $conditions;
		$group++;
//        $Debug .= "<!-- conditions='$conditions' group incr -->\n";
		$conditions = '';
//        $Debug .= "<!-- conditions='$conditions' reset -->\n";
function mtr_get_cloud_cover($part) {
global $lang,$Debug, $mtrInfo, $metarPtr, $group, $UOMS;
	// Decodes cloud cover information. This function maybe called several times
	// to decode all cloud layer observations. Only the last layer is saved.
	// Format is SKC or CLR for clear skies, or cccnnn where ccc = 3-letter code and
	// nnn = altitude of cloud layer in hundreds of feet. 'VV' seems to be used for
	// very low cloud layers. (Other conversion factor: 1 m = 3.28084 ft)
	$doMetric = preg_match('|C|',$UOMS['TEMP']);
	static $cloudCode = array(
		'SKC' => 'Clear',
		'CLR' => 'Clear',
		'FEW' => 'Few Clouds',
		'FW'  => 'Few Clouds',
		'SCT' => 'Partly Cloudy',
		'BKN' => 'Mostly Cloudy',
		'BK'  => 'Mostly Cloudy',
		'OVC' => 'Overcast',
//		'NSC' => 'No significant clouds', // official designation.. we map to Partly Cloudy
		'NSC' => 'Partly Cloudy',
//        'NCD' => 'No cloud detected',  // official designation .. we map to Clear
        'NCD' => 'Clear',
//		'TCU' => 'Towering Cumulus',     // official designation .. we map to Thunder Storm
		'TCU' => 'Thunderstorm',
//		'CB'  => 'Cumulonimbus',         // official designation .. we map to Thunder Storm
		'CB'  => 'Thunderstorm',
		'VV'  => 'Overcast');
	$Debug .= "<!-- get cloud cover '$part' -->\n";
	if ($part == 'VV') {
		$metarPtr++;
	   
	if ($part == 'SKC' || $part == 'CLR' || $part == 'NSC' || $part == 'NCD'|| $part == 'TCU'|| $part == 'CB') {
		$mtrInfo['CLOUDS'] = $cloudCode[$part];
		$metarPtr++;
		$group++;
	else {
		if (preg_match('/^([A-Z]{2,3})([0-9]{3})/',$part,$pieces)) {  // codes for CB and TCU are ignored
			$mtrInfo['CLOUDS'] = $cloudCode[$pieces[1]];
			$altitude = (integer) 100 * $pieces[2];  // units are feet
			$altitudeM = round($altitude/3.28084);
			if(!isset($mtrInfo['CLOUD-DETAILS'])) {$mtrInfo['CLOUD-DETAILS'] = '';}
			if($doMetric) {
			   $mtrInfo['CLOUD-DETAILS'] .= $cloudCode[$pieces[1]]." ${altitudeM} m\t";
			} else {
			   $mtrInfo['CLOUD-DETAILS'] .= $cloudCode[$pieces[1]]." ${altitude} ft\t";
			}
			if ($pieces[1] == 'VV') {
				$mtrInfo['CLOUDS'] = "Overcast";
			} else {
				
			}
			$metarPtr++;
		else {
			$group++;
			}
  function mtr_get_heat_index($tempF, $rh)
  { global $lang,$Debug, $mtrInfo, $metarPtr, $group, $UOMS;
    // Calculate Heat Index based on temperature in F and relative
    //humidity (65 = 65%)
    if ($tempF > 79 && $rh > 39)
    {
      $hiF = -42.379 + 2.04901523 * $tempF + 10.14333127 * 
             $rh - 0.22475541 * $tempF * $rh;
      $hiF += -0.00683783 * pow($tempF, 2) - 0.05481717 * pow($rh, 2);
      $hiF += 0.00122874 * pow($tempF, 2) * $rh + 0.00085282 * $tempF 
             * pow($rh, 2);
      $hiF += -0.00000199 * pow($tempF, 2) * pow($rh, 2);
      $hiF = round($hiF);
      $hiC = round(($hiF - 32) / 1.8);
	  if(preg_match('|C|',$UOMS['TEMP'])) {
        $mtrInfo['HEAT INDEX'] = "$hiC&deg;C";
	  } else {
        $mtrInfo['HEAT INDEX'] = "$hiF&deg;F ($hiC&deg;C)";
	  }
    }
  function mtr_get_wind_chill($tempF)
    global $lang,$Debug, $mtrInfo, $metarPtr, $group,$UOMS;
    // Calculate Wind Chill Temperature based on temperature in F and
    // wind speed in miles per hour
    if (isset($mtrInfo['WINDMPH']) and $tempF < 51 && $mtrInfo['WINDMPH'] !== 'calm')
    {
      $pieces = explode(' ', $mtrInfo['WINDMPH']);
      $windspeed = (integer) $pieces[2]; // wind speed must be in mph
      if ($windspeed > 3)
      {
        $chillF = 35.74 + 0.6215 * $tempF - 35.75 * pow($windspeed, 0.16) + 
                  0.4275 * $tempF * pow($windspeed, 0.16);
        $chillF = round($chillF);
        $chillC = round(($chillF - 32) / 1.8);
		if(preg_match('|C|',$UOMS['TEMP'])) {
          $mtrInfo['WIND CHILL'] = "$chillC&deg;C";
		} else {
          $mtrInfo['WIND CHILL'] = "$chillF&deg;F ($chillC&deg;C)";
      }
    }
//-------------------------------------------------------------------------
// Decodes temperature and dew point information. Relative humidity is
// calculated. Also, depending on the temperature, Heat Index or Wind
// Chill Temperature is calculated.
// Format is tt/dd where tt = temperature and dd = dew point temperature.
// All units are in Celsius. A 'M' preceeding the tt or dd indicates a
// negative temperature. Some stations do not report dew point, so the
// format is tt/ or tt/XX.
function mtr_get_temperature($part)
  global $lang, $Debug, $mtrInfo, $metarPtr, $group, $UOMS;
  if (preg_match('/^(M?[0-9]{2})\/(M?[0-9]{2}|[X]{2})?$/',$part,$pieces))
	$doMetric = preg_match('|C|',$UOMS['TEMP']);
    $tempC = (integer) strtr($pieces[1], 'M', '-');
    $tempF = round(1.8 * $tempC + 32);
    if (!$doMetric) {
        $mtrInfo['TEMP'] = $tempF . "&deg;F (" . $tempC . "&deg;C)";
	} else {
        $mtrInfo['TEMP'] = $tempC . "&deg;C";
    }
    mtr_get_wind_chill($tempF);
    if (isset($pieces[2]) and strlen($pieces[2]) != 0 && $pieces[2] != 'XX')
    {
      $dewC = (integer) strtr($pieces[2], 'M', '-');
      $dewF = round(1.8 * $dewC + 32);
      if (!$doMetric) {
          $mtrInfo['DEWPT'] = $dewF . "&deg;F (" . $dewC . "&deg;C)";
	  } else {
          $mtrInfo['DEWPT'] = $dewC . "&deg;C";
	  }
      $rh = round(100 * pow((112 - (0.1 * $tempC) + $dewC) / 
                                                (112 + (0.9 * $tempC)), 8));
      $mtrInfo['HUMIDITY'] = $rh . '%';
      mtr_get_heat_index($tempF, $rh);
    }
    $metarPtr++;
    $group++;
  else
    $group++;
//-----------------------------------------------------------------------
// Decodes altimeter or barometer information.
// Format is Annnn where nnnn represents a real number as nn.nn in
// inches of Hg,
// or Qpppp where pppp = hectoPascals.
// Some other common conversion factors:
//   1 millibar = 1 hPa
//   1 in Hg = 0.02953 hPa
//   1 mm Hg = 25.4 in Hg = 0.750062 hPa
//   1 lb/sq in = 0.491154 in Hg = 0.014504 hPa
//   1 atm = 0.33421 in Hg = 0.0009869 hPa
function mtr_get_altimeter($part)
{  global $Debug, $mtrInfo, $metarPtr, $group, $UOMS;
  if (preg_match('/^(A|Q)([0-9]{4})/',$part,$pieces))
    if ($pieces[1] == 'A')
    {
      $pressureIN = substr($pieces[2],0,2) . '.' . substr($pieces[2],2);
      // units are inches Hg, converts to hectoPascals
      $pressureHPA = round($pressureIN / 0.02953,1);
    }
    else
    {
      $pressureHPA = (integer) $pieces[2];        // units are hectoPascals
      $pressureIN = round(0.02953 * $pressureHPA,2);  // convert to inches Hg
    }
	if(preg_match('|inhg|i',$UOMS['BARO'])) {
      $mtrInfo['BAROMETER'] = "$pressureIN inHg ($pressureHPA hPa)";
	} else {
      $mtrInfo['BAROMETER'] = "$pressureHPA hPa";
    $metarPtr++;
    $group++;
  else
    $group++;
// end of the mtr_process function set
//----------------------------------------------
?><?php
//Get regional alarm/warning from http://www.meteoalarm.eu/
// Script by Ken True - saratoga-weather.org
// Version 1.00 - 13-Sep-2008 - Initial Release
// Version 1.01 - 20-Sep-2008 - removed TZ setting (not used), added $EUAtarget option for links
// Version 1.02 - 06-Oct-2008 - some XHTML 1.0-Strict changes for <br />
// Version 2.00 - 22-Apr-2010 - major changes to support major meteoalarm.eu website changes
// Version 2.01 - 23-Apr-2010 - changes for revised TOS of meteoalarm.eu website
// Version 2.02 - 26-Jan-2011 - added support for global $cacheFileDir for new templates
// Version 2.03 - 07-Feb-2011 - added color based on warning level
// Version 2.04 - 24-Feb-2011 - added UTF-8->template character set conversion
// Version 2.05 - 02-Mar-2011 - added slovenian (lang=si) capability
// Version 2.06 - 05-Jun-2011 - changes for updated meteoalarm.eu website
// Version 2.07 - 22-Oct-2011 - added more UTF-8->character set conversion for 'more info' area
// Version 2.08 - 18-Jul-2012 - added fixes for meteoalarm.eu website changes
// error_reporting(E_ALL); // uncomment for error checking
// this script is designed to be used by
//   include("get-meteoalarm-warning-inc.php");
// Find the warning area for your location by going to www.meteoalarm.eu
// Navigate to the warning area that represents your region and view the detail page for that area.
// For standalone script use,
// Copy the URL in the browser address bar into the $EUA_URL area as shown below.
// For Carterlake/WD/PHP template use, add to your Settings.php:
// $SITE['EUwarningURL'] = '<URL-to-use-on-meteoalarm.eu>';
// where the <URL-to-use-on-meteoalarm.eu> is replaced by the URL in the browser address bar found
// by the method above.  No other customization is needed in the script for use in the Carterlake/WD/PHP template.
// -------------Settings ---------------------------------
  $Lang = 'en';  // default language to be used (lowercase, must correspond to available 
//               template languages of
//              'en','ct','de','dk','el','es','fi','fr','it','nl','no','pl','pt','se'
$EUA_URL = 'http://www.meteoalarm.eu/index3.php?area=DK004&day=0&lang=en_UK';
//$EUA_URL = 'http://www.meteoalarm.eu/index3.php?lang=en_UK&area=DE001&day=0';
//$EUA_URL = 'http://www.meteoalarm.eu/index3.php?area=DE012&day=0&lang=fr_FR';
//$EUA_URL = 'http://www.meteoalarm.eu/index3.php?area=IT001&day=0&lang=en_UK';
//$EUA_URL = 'http://www.meteoalarm.eu/index3.php?area=UK013&day=0&lang=fr_FR';
//$EUA_URL = 'http://www.meteoalarm.eu/index3.php?area=IE004&day=0&lang=fr_FR';
//$EUA_URL = 'http://www.meteoalarm.eu/index3.php?area=SK012&day=0&lang=en_UK';
//$EUA_URL = 'http://www.meteoalarm.eu/index3.php?area=AT001&day=0&lang=en_UK';
//$EUA_URL = 'http://www.meteoalarm.eu/en_UK/0/0/DE004-Hessen.html';
//$EUA_URL = 'http://www.meteoalarm.eu/en_UK/0/0/ES051-El_Hierro.html';
//$EUA_URL = 'http://www.meteoalarm.eu/en_UK/1/0/AT001-Niederosterreich.html';
$cacheFileDir = './';   // default cache file directory
// create a 'meteoalarm-en.txt' file in the same directory as the script.
// you may have to set the permissions on the file to '666' so it is writable
// by the webserver.  Repeat for each language supported by your site.
$EUAcacheName = "meteoalarm.txt";  // prototype for path/filename for cache file
// note: $EUAcacheName will be changed to -$Lang.txt (like -en.txt) to allow languages to have unique cache files.
$EUArefetchSeconds = 300;  // refresh every 5 minutes
$EUAtarget  = '';  // set to 'target="_blank"' for links.. note: makes output not XHTML 1.0-Strict 
$charsetOutput = 'ISO-8859-1';        // default character encoding of output
//$EUAtarget = 'target="_blank"';  // to launch links in new page .. not XHTML 1.0-Strict though 
// -------------End Settings -----------------------------
$EUAversion = 'get-meteoalarm-warning-inc.php V2.08 - 18-Jul-2012';
// the following note is required by agreement with the authors of the website www.meteoalarm.eu
/* -----------------------------------------------------------------------------------------
Date: Thu, 11 Sep 2008 11:39:52 +0200
From: karin buchauer <karin.buchauer@zamg.ac.at>
Organization: zamg
Dear Mr True,
you are quite right:
you can use the material featured on the website, without modifying it, providing the source (link) as well as time and date of issue of the data, as stipulated in the Terms & Conditions.
With best regards,
Karin Buchauer
Ken True schrieb:
> Dear Sirs,
> I am an amateur weather enthusiast who also writes scripting for other weather enthusiasts to incorporate weather data into their personal, non-commercial weather websites.  Many of my scripts (which I write as a hobby, and are distributed gratis) are in use on personal weather websites worldwide.
> I've had requests to package the excellent data from www.meteoalarm.eu for weather advisories in EU countries, and before I generate a script for that purpose, I'd like to have your permission to proceed.
> Your Terms and Conditions page (http://www.meteoalarm.eu/terms.asp?lang=EN ) says:
> "The material featured on this site is the common property of the Meteoalarm partners, and is subject to copyright protection.
> The ownership and intellectual rights on all operational and updated awareness and warning information delivered to the Meteoalarm system remain with the Meteoalarm partners who originally delivered this information. The information on this web site may be used freely by the public.
> Before using information obtained from this server special attention should be given to the date & time of the data and products being displayed.
> In case this information is re-used: This information shall not be modified in content and the source of the information has always to be displayed as EUMETNET - MeteoAlarm, or if a single country, the providing national Institute (for internet application in all cases in the form of a link to: www.meteoalarm.eu). The time of issue at www.meteoalarm.eu must be count.
> Third parties producing copyrighted works consisting predominantly of the material of this website must provide notice with such work(s) identifying the source of material incorporated and stating that such material is not subject to copyright protection. Further information can be obtained from this following address: meteoalarm@zamg.ac.at"
> My reading of this implies that you do permit re-use/publishing of the information with attribution and an active link to the source page for the data on your site, and a note that the data is copyrighted by the data providing organization (and not subject to copyright by the 3rd-party website including/displaying the data).  Is that correct?
> Is it ok with you for me to generate a script for displaying national/regional weather alerts using your data from www.meteoalarm.eu with the appropriate attribution.
> Please feel free to examine other scripts I've written which use NOAA, Environment Canada, US Geological Services, and temis.nl as data sources (http://saratoga-weather.org/scripts.php ).
> Thank you in advance for your response,
> Best regards,
> Ken True
> webmaster@saratoga-weather.org
> Saratoga, California, USA
Karin Buchauer
Assistant to the Project Manager EMMA
Zentralanstalt f
r Meteorologie und Geodynamik
Regionalstelle f
r Salzburg und Ober
sterreich
Freisaalweg 16
A - 5020 SALZBURG
Fon ++43 (0)662 626301-22
Fax ++43 (0)662 625838
karin.buchauer@zamg.ac.at       www.zamg.ac.at
 ----------------------------------------------------------------------------------------- */
// overrides from Settings.php if available
$langCharset = array( // for languages that DON'T use ISO-8859-1 (latin) set
 'bg' => 'ISO-8859-5',
 'el' => 'ISO-8859-7',
 'hu' => 'ISO-8859-2',
 'ro' => 'ISO-8859-2',
 'pl' => 'ISO-8859-2',
 'si' => 'ISO-8859-2',
global $SITE;
if (isset($SITE['tz'])) {$ourTZ = $SITE['tz']; }
if (isset($SITE['lang'])) {$Lang = $SITE['lang']; }
if (isset($SITE['langCharset'])) {$langCharset = $SITE['langCharset']; }
if (isset($SITE['EUwarningURL'])) {$EUA_URL = $SITE['EUwarningURL']; }
if(isset($SITE['cacheFileDir']))     {$cacheFileDir = $SITE['cacheFileDir']; }
// end of overrides from Settings.php
if (isset($_REQUEST['sce']) && strtolower($_REQUEST['sce']) == 'view' ) {
   //--self downloader --
   $filenameReal = __FILE__;
   $download_size = filesize($filenameReal);
   header('Pragma: public');
   header('Cache-Control: private');
   header('Cache-Control: no-cache, must-revalidate');
   header("Content-type: text/plain");
   header("Accept-Ranges: bytes");
   header("Content-Length: $download_size");
   header('Connection: close');
   readfile($filenameReal);
   exit;
$EUA_languages = array( // our names for lang= to meteoalarm.eu names for lang=
// the uncommented ones are supported by the WD/AJAX/PHP World-ML template set
  'en' => 'en_UK',  // english
  'ct' => 'ca_ES',  // catal
//  'xx' => 'ce_CZ',  // ce
tina
  'dk' => 'da_DK',  // dansk
  'de' => 'de_GE',  // deutsch
  'es' => 'es_ES',  // espa
//  'xx' => 'ee_EE',  // eesti
//  'xx' => 'eu_VA',  // euskera
  'fr' => 'fr_FR',  // fran
//  'xx' => 'ga_UK',  // galego
//  'xx' => 'hr_HR',  // hrvatski
//  'xx' => 'is_IS',  // 
slenska
  'it' => 'it_IT',  // italiano
//  'xx' => 'li_LT',  // lietuviu
//  'xx' => 'la_LV',  // latvie
  'hu' => 'ma_HU',  // magyar
//  'xx' => 'ma_MT',  // malti
  'nl' => 'ne_NL',  // nederlands
  'no' => 'no_NO',  // norsk
  'pl' => 'po_PL',  // polski
  'pt' => 'po_PT',  // portugu
  'ro' => 'ro_RO',  // rom
//  'xx' => 'cp_RS',  // russian
  'si' => 'sl_SI',  // sloven
cina
//  'xx' => 'sl_SK',  // slovencina
  'fi' => 'su_FI',  // suomi
  'se' => 'sv_SE',  // svenska
  'el' => 'gr_GR',  // greek
$EUA_lang = $EUA_languages[$Lang];
if (isset($_REQUEST['lang'])) {  // 
  $tlang = strtolower($_REQUEST['lang']);
  if (isset($EUA_languages[$tlang])) {
    $EUA_lang = $EUA_languages[$tlang];
	$Lang = $tlang;
if(isset($langCharset[$Lang])) {
	$charsetOutput = $langCharset[$Lang];        // default character encoding of output
/*  Old warning color array
$EUA_warncolors = array(
'wb0' =>'#fff',      // white .. Missing, insufficient, outdated or suspicious data.
'wb1' =>'#99ff99',   // green .. No particular awareness of the weather is required.
'wb2' => '#FFFF66',  // yellow ..The weather is potentially dangerous.
'wb3' => '#FECC33',  // orange ..The weather is dangerous.
'wb4' => '#FF6666'   // red ..   The weather is very dangerous. Exceptionally intense meteorological phenomena have been forecast.
/* New Warning color array
.awt.l0 {   background-position-y:	    0px;  background-color:#ffffff; }
.awt.l1 {   background-position-y:	  -20px;  background-color:#29d660;  }
.awt.l2 {   background-position-y:	  -40px;  background-color:#ffff00; }
.awt.l3 {   background-position-y:	  -60px;  background-color:#fecb31; }
.awt.l4 {   background-position-y:	  -80px;  background-color:#fe0104; }
<div class="warnbox awt nt l l1">
$EUA_warncolors = array(
'wl0' => '#ffffff',      // white .. Missing, insufficient, outdated or suspicious data.
'wl1' => '#29d660',   // green .. No particular awareness of the weather is required.
'wl2' => '#ffff00',  // yellow ..The weather is potentially dangerous.
'wl3' => '#fecb31',  // orange ..The weather is dangerous.
'wl4' => '#fe0104'   // red ..   The weather is very dangerous. Exceptionally intense meteorological phenomena have been forecast.
$t = parse_url($EUA_URL);
$EUA_hostname = $t['host'];
if (isset($_REQUEST['debug'])) {$doDebug = true; } else {$doDebug = false; }
print "<!-- lang=$Lang ($EUA_lang) used -->\n";
if(preg_match('|index3|',$EUA_URL)) { // use older format of URL
  $EUA_URL = preg_replace('|lang=[^&]+|',"lang=$EUA_lang",$EUA_URL);
} else { // use newer format of URL
  $EUA_URL = preg_replace('|meteoalarm.eu/[^/]+/|',"meteoalarm.eu/$EUA_lang/",$EUA_URL);
$EUAcacheName = $cacheFileDir.$EUAcacheName;
$EUAcacheName = preg_replace('|\.txt$|',"-$Lang.txt",$EUAcacheName);
$EUA_URLLink = htmlspecialchars($EUA_URL);
$requiredNoteEUA = "<a href=\"$EUA_URLLink\" $EUAtarget>Warning data</a> courtesy of and Copyright &copy; EUMETNET-METEOalarm (http://www.meteoalarm.eu/).<br />Used with permission.
<br/>Time delays between this website and the www.meteoalarm.eu website are possible, for the most up to date information about alert levels as published by the participating National Meteorological Services please use www.meteoalarm.eu";
print "<!-- $EUAversion -->\n<!-- ".strip_tags($requiredNoteEUA)." -->\n";
// You can now force the cache to update by adding ?force=1 to the end of the URL
if ( empty($_REQUEST['force']) ) 
        $_REQUEST['force']="0";
$Force = $_REQUEST['force'];
if ($Force==1) {
      $html = fetchEUAUrlWithoutHanging($EUA_URL,$EUAcacheName); 
      print "<!-- force reload from URL $EUA_URL -->\n";
      $fp = fopen($EUAcacheName, "w"); 
	  if($fp) {
        $write = fputs($fp, $html); 
        fclose($fp);
	  } else {
	    print "<!--Unable to write cache $EUAcacheName -->\n";
	  }
// refresh cached copy of page if needed
// fetch/cache code by Tom at carterlake.org
if (file_exists($EUAcacheName) and filemtime($EUAcacheName) + $EUArefetchSeconds > time()) {
      $WhereLoaded = "from cache $EUAcacheName";
      $html = implode('', file($EUAcacheName));
    } else {
      $WhereLoaded = "from URL $EUA_URL";
      $html = fetchEUAUrlWithoutHanging($EUA_URL);
      $fp = fopen($EUAcacheName, "w"); 
	  if($fp) {
        $write = fputs($fp, $html); 
        fclose($fp);
	  } else {
	    print "<!--Unable to write cache $EUAcacheName -->\n";
	  }
print "<!-- Meteoalarm data load from $WhereLoaded -->\n";
if(strlen($html) < 50 ) {
  print "<!-- data not available -->\n";
  return;
  preg_match('|charset=([^"]+)\r\n"|i',$html,$matches);
  if (isset($matches[1])) {
    $charsetInput = strtoupper($matches[1]);
  } else {
    $charsetInput = 'UTF-8';
 print "<!-- using charsetInput='$charsetInput' charsetOutput='$charsetOutput' -->\n";
// now slice it up
// Get the table to use:
    preg_match_all('!<td[^>]*(class|width)="([^"]+)"[^>]*>(.*)</td>!Uis',$html,$betweenspan);
  if($doDebug) {
    print "<!-- betweenspan \n" . print_r($betweenspan,true) . " -->\n";
//  $cTypes = $betweenspan[1];  // contains 'class' or 'width'
//  $cNames = $betweenspan[2];  // contains the class="(.*)" or width="(.*)" values
  $cData  = $betweenspan[3];  // contains the <td class="..">(.*)</td> data area
  $EUAregionName = '';
  $EUAwarning = '';
  $EUAMetOffice = '';
  $moreInfo = 'More...';
  if($doDebug) {
//    print "<!-- cTypes \n" . print_r($cTypes,true) . " -->\n";
//    print "<!-- cNames \n" . print_r($cNames,true) . " -->\n";
    print "<!-- cData \n" . print_r($cData,true) . " -->\n";
/* $cData now contains:
<!-- cData 
Array
    [0] => <h1>Weather warnings: Bremen und Niedersachsen&nbsp;<a style="right:13px; position:absolute;" href="/documents/rss/de/DE001.rss"><img src="/theme/style1/img/object_rss.png" border="0" alt="Show RSS version" title="Show RSS version"> </a></h1>
    [1] => <div class="warnbox wb2">
								<img src="http://meteoalarm.eu/intranet/images/aw12.jpg">
								<div class="info"><b>valid from</b> 21.04.2010 21:03 CET <b>Until</b> 22.04.2010 03:03 CET </div>
								<div class="info"><b>Wind&nbsp;</b><span style="position:absolute; right:0px;"> Awareness Level: <b>Yellow&nbsp;</b> </span></div>
								<div class="text">Gefahr einzelner B
en um 55 km/h (St
rke Bft 7) aus West bis Nordwest, anfangs vereinzelt auch B
en bis 70 hm/h (St
rke Bft 8) m
glich.&nbsp;</div>
							</div><div class="warnbox wb2">
						<img src="http://meteoalarm.eu/intranet/images/aw62.jpg">
								<div class="info"><b>valid from</b> 21.04.2010 20:03 CET <b>Until</b> 22.04.2010 09:03 CET </div>
								<div class="info"><b>Extreme low temperature&nbsp;</b><span style="position:absolute; right:0px;"> Awareness Level: <b>Yellow&nbsp;</b> </span></div>
								<div class="text">Frost mit Tiefstwerten zwischen 0 und minus 4 Grad, in Bodenn
he minus 3 bis minus 8 Grad.&nbsp;</div>
							</div>					<div class="warn-nav" 					<form method="GET" name="warn-nav" action="">
								<script>
									function WM(day){
									if(day == "") day = 0;
									document.location.href = "index3.php?area=DE001&lang=EN&day="+day;
									}
								</script>
								
								<input type="hidden" name="lang" value="EN">
								<span class="right-colum">
								<input id="day" name="day" type="hidden" value="0">
								Display:&nbsp;&nbsp;<input name="day" class="day active" type="button" value="today" onclick="WM(0)"> <input name="day" class="day " type="button" value="tomorrow" onclick="WM(1)">
								</span>
								</form>
							</div>
						
    [2] => &nbsp;&nbsp;
						
    [3] => 
										<a href="index.php?lang=EN&day=0">
											<p>Back to Europe:</p>
											<img src="map.php?iso=euro&data=0&type=0&tiny=1" border="0"> 
										</a>
									<br>
										<a href="index2.php?lang=EN&country=DE&day=0">
											<p>Back to Germany:</p>
											<img src="map.php?iso=DE&data=0&tiny=1" border="0">
										</a>
								<br>
						
					<a href="http://www.wettergefahren.de/index.htm?Land=HN00&Art=O" target="_blank">
					<p>more information:</p>
					<img src="/documents/societe/logos/DWD-Logo_7.JPG" border="0" alt="Regionalzentrale Hamburg" name="Regionalzentrale Hamburg">
					</a>
								
    [4] => 
					
//	if (preg_match_all('|<a href="(.*)".*>\s*<p>(.*)</p>|Uis',$cData[$idx],$matches) ) {
	$temp = explode('<br>',$cData[3]);  // split out the links
	if ($doDebug) { print "<!-- moreInfo temp \n".print_r($temp,true)." -->\n"; }
	$tstr = $temp[count($temp)-1];
	if ($doDebug) { print "<!-- moreInfo tstr ='$tstr' -->\n"; }
	preg_match('|<a href="(.*)".*>\s*<p>(.*)</p>\s*<img.*alt="(.*)"|Uis',$tstr,$matches);
	if ($doDebug) { print "<!-- moreInfo matches \n".print_r($matches,true)." -->\n"; }
/*Array
    [0] => <a href="http://www.meteoam.it" target="_blank">
					<p>ulteriorii informazioni:</p>
					<img src="/documents/societe/logos/Servizio Meteorologicostemma_16.jpg" border="0" alt="CNMCA"
    [1] => http://www.meteoam.it
    [2] => ulteriorii informazioni:
    [3] => CNMCA
*/	if(isset($matches[0]) and count($matches[0]) > 0) {
		$moreInfo = '<a href="' . trim($matches[1]) . '">' . trim($matches[2]).'</a>';
		$EUAMetOffice = '<a href="' . trim($matches[1]) . '">' . trim($matches[3]).'</a>';
		$EUAMetOffice = preg_replace('|Go to |i','',$EUAMetOffice);
		if ($doDebug) { print "<!-- moreInfo ='$moreInfo' -->\n"; }
  $EUAregionName = 'METEOalarm.eu '. preg_replace('|&nbsp;|',"",strip_tags($cData[0]));
  $EUAregionName = preg_replace('|&amp;amp;|is','&amp;',$EUAregionName);
  $EUAwarning = '<table width="99%">'."\n";
  //warnbox awt nt l l1
  preg_match_all('|<div class="warnbox[^"]+">(.*)\t</div>|Uis',$cData[1],$warnboxes);
<!-- warnboxes
Array
    [0] => Array
        (
            [0] => <div class="warnbox awt nt l l2">
								<img src="/theme/common/pictures/aw12.jpg">
								<div class="info"><b>valid from</b> 18.07.2012 17:44 CET <b>Until</b> 18.07.2012 21:00 CET </div>
								<div class="info"><b>Wind&nbsp;</b><span style="position:absolute; right:0px;"> Awareness Level: <b>Yellow&nbsp;</b> </span></div>
								<div class="text">Weiterhin zeitweise Windb
en um 55 km/h aus S
dwest.&nbsp;</div>
							</div>
            [1] => <div class="warnbox awt nt l l2">
								<img src="/theme/common/pictures/aw32.jpg">
								<div class="info"><b>valid from</b> 18.07.2012 20:05 CET <b>Until</b> 18.07.2012 22:00 CET </div>
								<div class="info"><b>Thunderstorms&nbsp;</b><span style="position:absolute; right:0px;"> Awareness Level: <b>Yellow&nbsp;</b> </span></div>
								<div class="text">Einzelne starke Schauer, dabei
rtlich Gewitter mit 
Windb
en um 55 km/h aus S
dwest.
ACHTUNG! Hinweis auf m
gliche Gefahren:
rtlich kann es Blitzschlag geben. Bei Blitzschlag besteht 
Lebensgefahr!&nbsp;</div>
							</div>
        )
    [1] => Array
        (
            [0] => 
								<img src="/theme/common/pictures/aw12.jpg">
								<div class="info"><b>valid from</b> 18.07.2012 17:44 CET <b>Until</b> 18.07.2012 21:00 CET </div>
								<div class="info"><b>Wind&nbsp;</b><span style="position:absolute; right:0px;"> Awareness Level: <b>Yellow&nbsp;</b> </span></div>
								<div class="text">Weiterhin zeitweise Windb
en um 55 km/h aus S
dwest.&nbsp;</div>
						
            [1] => 
								<img src="/theme/common/pictures/aw32.jpg">
								<div class="info"><b>valid from</b> 18.07.2012 20:05 CET <b>Until</b> 18.07.2012 22:00 CET </div>
								<div class="info"><b>Thunderstorms&nbsp;</b><span style="position:absolute; right:0px;"> Awareness Level: <b>Yellow&nbsp;</b> </span></div>
								<div class="text">Einzelne starke Schauer, dabei
rtlich Gewitter mit 
Windb
en um 55 km/h aus S
dwest.
ACHTUNG! Hinweis auf m
gliche Gefahren:
rtlich kann es Blitzschlag geben. Bei Blitzschlag besteht 
Lebensgefahr!&nbsp;</div>
						
        )
) -->
  if ($doDebug) { print "<!-- warnboxes\n".print_r($warnboxes,true)." -->\n"; }
  for ($idx = 0;$idx < count($warnboxes[1]);$idx++) {  // loop over the warning box notices
     $rawWarning = trim($warnboxes[1][$idx]);
	 // find color from <div class="warnbox awt nt l l2">
	 preg_match('|<div class="warnbox awt\s+\S+\s+\S+\s+([^"]+)">|is',$warnboxes[0][$idx],$colormatches);
	 if($doDebug) {
		// print "<!-- looked at \n".$warnboxes[0][$idx]." -->\n";
		 print "<!-- warnbox color matches\n".print_r($colormatches,true)." -->\n";
		 if(isset($colormatches[1])) { print "<!-- color='".$colormatches[1]."' used -->\n"; }
		 //print "<!-- EUA_warncolors\n".print_r($EUA_warncolors,true)." -->\n";
	 if(isset($colormatches[1]) ) {
	   $tColorCode = 'w'.$colormatches[1];
	   $WarnColor = $EUA_warncolors[$tColorCode];
	 if ($doDebug) { print "<!-- rawWarning ='$rawWarning' \n WarnColor='$WarnColor' -->\n"; }
	 $EUAwarning .= "<tr>\n";
	 preg_match('|<img src="(.*)"|',$rawWarning,$matches);
	 $warnImg = "http://" . $EUA_hostname . $matches[1];
	 if ($doDebug) { print "<!-- warnImg ='$warnImg' -->\n"; }
	 preg_match_all('|<div class="([^"]+)".*>(.*)</div>|Uis',$rawWarning,$matches);
     if($doDebug) { print "<!-- detail matches \n".print_r($matches,true)." -->\n"; }
	 $warnTxt = '';
	 foreach ($matches[2] as $i => $txt) {
		 $t = strip_tags($txt,'<b>');
		 if (strlen($t)>0) {$warnTxt .= $t . "<br/>\n";}
	 if ($doDebug) { print "<!-- warnTxt ='$warnTxt' -->\n"; }
	 $warnTxt = iconv($charsetInput,$charsetOutput.'//TRANSLIT',$warnTxt);
	 $EUAwarning .= "    <td width=\"250\"><img src=\"$warnImg\" alt=\" \" width=\"250\" height=\"167\"/></td>\n";
	 $EUAwarning .= "    <td align=\"left\" style=\"background-color: $WarnColor;\">$warnTxt</td>\n";
	 $EUAwarning .= "  </tr>\n";
  $EUAwarning .= "</table>\n";
  $EUAregionName = iconv($charsetInput,$charsetOutput.'//TRANSLIT',$EUAregionName);
print "<h1>$EUAregionName</h1>\n";
print "$EUAwarning";
if ($EUAMetOffice <> "") {
  $EUAMetOffice = iconv($charsetInput,$charsetOutput.'//TRANSLIT',$EUAMetOffice);
  $moreInfo = iconv($charsetInput,$charsetOutput.'//TRANSLIT',$moreInfo);
  print "<p>$moreInfo ";
  if(strlen(strip_tags($EUAMetOffice)) > 1) {print "Data provided by $EUAMetOffice."; }
  print "</p>\n";
print "<p>$requiredNoteEUA</p>\n";
return; 
// ----------------------------functions ----------------------------------- 
 function fetchEUAUrlWithoutHanging($url) // thanks to Tom at Carterlake.org for this script fragment
   {
   // Set maximum number of seconds (can have floating-point) to wait for feed before displaying page without feed
   $numberOfSeconds=4;   
   // Suppress error reporting so Web site visitors are unaware if the feed fails
   error_reporting(0);
   // Extract resource path and domain from URL ready for fsockopen
   $url = str_replace("http://","",$url);
   $urlComponents = explode("/",$url);
   $domain = $urlComponents[0];
   $resourcePath = str_replace($domain,"",$url);
   // Establish a connection
   $socketConnection = fsockopen($domain, 80, $errno, $errstr, $numberOfSeconds);
   if (!$socketConnection)
       {
       // You may wish to remove the following debugging line on a live Web site
        print("<!-- Network error: $errstr ($errno) -->\n");
       }    // end if
   else    {
       $xml = '';
       fputs($socketConnection, "GET $resourcePath HTTP/1.1\r\nHost: $domain\r\nConnection: Close\r\n\r\n");
       // Loop until end of file
       while (!feof($socketConnection))
           {
           $xml .= fgets($socketConnection, 4096);
           }    // end while
       fclose ($socketConnection);
       }    // end else
   return($xml);
   }    // end function
// ----------------------------------------------------------
      
?><?php
if (isset($_REQUEST['sce']) && strtolower($_REQUEST['sce']) == 'view' ) {
   //--self downloader --
   $filenameReal = __FILE__;
   $download_size = filesize($filenameReal);
   header('Pragma: public');
   header('Cache-Control: private');
   header('Cache-Control: no-cache, must-revalidate');
   header("Content-type: text/plain");
   header("Accept-Ranges: bytes");
   header("Content-Length: $download_size");
   header('Connection: close');
   readfile($filenameReal);
   exit;
function getUSNOsunmoon() {
Function: get-USNO-sunmoon()
Purpose: fetch and cache the sun/moon data for one day from the US Naval Observatory, 
    using a GET request to http://api.usno.navy.mil/rstt/oneday?
    parse the returned JSON, and return data in the an array compatible with the V1.x
	of the script.
Calling sequence:
    $array = getUSNOsunmoon();
Returned array contents like:
    $Data['beginciviltwilight'] => 06:52
    $Data['beginciviltwilightdate'] => 01/18/2011
    $Data['sunrise'] => 07:20
    $Data['sunrisedate'] => 01/18/2011
    $Data['suntransit'] => 12:18
    $Data['suntransitdate'] => 01/18/2011
    $Data['sunset'] => 17:17
    $Data['sunsetdate'] => 01/18/2011
    $Data['endciviltwilight'] => 17:46
    $Data['endciviltwilightdate'] => 01/18/2011
    $Data['moonriseprior'] => 15:13
    $Data['moonrisepriordate'] => 01/17/2011
    $Data['moonset'] => 06:16
    $Data['moonsetdate'] => 01/18/2011
    $Data['moonrise'] => 16:21
    $Data['moonrisedate'] => 01/18/2011
    $Data['moontransit'] => 23:45
    $Data['moontransitdate'] => 01/18/2011
    $Data['moonsetnext'] => 07:02
    $Data['moonsetnextdate'] => 01/19/2011
    $Data['moonphase'] => Waxing Gibbous
    $Data['illumination'] => 98%
    $Data['hoursofpossibledaylight'] => 09:57
	Note: the moonriseprior and moonrisenext may not always appear in the data from the USNO
Author: Ken True - webmaster@saratoga-weather.org
//  Version 1.00 - 18-Jan-2011 - initial release
//  Version 1.01 - 23-Mar-2011 - added code for missing moonrise/moonset due to prior/next day times
//  Version 1.02 - 03-Dec-2011 - fixed moonset date if for following day
//  Version 2.00 - 29-Jul-2015 - changes to use new JSON API call for aa.usno.navy.mil
//  Version 2.01 - 29-Jul-2015 - added conditionals for moon-prior/moon-next vars (may not be in JSON)
//  Version 2.02 - 31-Jul-2015 - fixed issue with missing JSON fracillum/curphase data
//  Version 2.03 - 01-Aug-2015 - added illum. value for missing JSON fracillum data
$Version = 'get-USNO-sunmoon.php - Version 2.03 - 01-Aug-2015';
// -----------local settings-------------------
$ourTZ = "America/Los_Angeles";     //NOTE: this *MUST* be set correctly to
// translate UTC times to your LOCAL time for the displays.
//  set to station latitude/longitude (decimal degrees)
$myLat  = 37.27153397;             //North=positive, South=negative decimal degrees
$myLong = -122.02274323;           //East=positive, West=negative decimal degrees
// The above settings are for saratoga-weather.org location
$myCity = 'Saratoga';              // my city name
$useMDY = true;                    // true=use mm/dd/yyyy for dates, false=use dd/mm/yyyy for dates
$cacheFileDir = './';              // default cache file directory
$cacheName = "USNO-moondata.txt";  // used to store the file so we don't have to fetch from USNO website
$refetchSeconds = 3600;            // refetch every nnnn seconds 3600=1 hour
// -----------end local settings --------------
// overrides from Settings.php if available
global $SITE;
if (isset($SITE['latitude'])) 	{$myLat = $SITE['latitude'];}
if (isset($SITE['longitude'])) 	{$myLong = $SITE['longitude'];}
if (isset($SITE['tz'])) {$ourTZ = $SITE['tz']; }
if (isset($SITE['location'])) {$myCity = $SITE['location'];}
if (isset($SITE['WDdateMDY']))  {$useMDY = $SITE['WDdateMDY'];}
if(isset($SITE['cacheFileDir']))     {$cacheFileDir = $SITE['cacheFileDir']; }
// end of overrides from Settings.php
global $Debug, $doDebug;
$Debug = "<!-- $Version -->\n";
$Data = array();
# Set timezone in PHP5/PHP4 manner
  if (!function_exists('date_default_timezone_set')) {
	putenv("TZ=" . $ourTZ);
#	$Debug .= "<!-- using putenv(\"TZ=$ourTZ\") -->\n";
    } else {
	date_default_timezone_set("$ourTZ");
#	$Debug .= "<!-- using date_default_timezone_set(\"$ourTZ\") -->\n";
   }
if(isset($_REQUEST['force']) or isset($_REQUEST['cache']) ) {
	$refetchSeconds = 1;
$doDebug = false;
if(isset($_REQUEST['debug'])) {$doDebug = true;}
# fixup the POST parameters before the call to the USNO website so it looks like the form is used for the query
$myTZOffset = date('Z')/3600; // difference of our time from UTC in hours
$USNOUrl = "http://api.usno.navy.mil/rstt/oneday?date=today&coords=$myLat,$myLong&tz=$myTZOffset";
$cacheName = $cacheFileDir.$cacheName;
// either load the cached html page or fetch and cache a new html page
if (file_exists($cacheName) and filemtime($cacheName) + $refetchSeconds > time()) {
      $Debug .= "<!-- using Cached version of $cacheName -->\n";
      $html = implode('', file($cacheName));
    } else {
      $Debug .= "<!-- loading $cacheName from $USNOUrl -->\n";
      $html = get_sunmoon_fetchUrlWithoutHanging($USNOUrl);
      $fp = fopen($cacheName, "w");
      if ($fp) {
        $write = fputs($fp, $html);
        fclose($fp);
      } else {
            $Debug .= "<!-- unable to write cache file $cacheName -->\n";
      }
      $Debug .= "<!-- loading finished. -->\n";
  $i = strpos($html,"\r\n\r\n");
  $headers = substr($html,0,$i-1);
  $content = substr($html,$i+4);
  if(preg_match('|Transfer-Encoding: chunke|Ui',$headers)) {
	  $Debug .= "<!-- unchunking response -->\n"; 
	  $Debug .= "<!-- in=".strlen($html);
      $content = trim(get_sunmoon_unchunk_content($content));
	  $Debug .= " out=".strlen($html). " bytes -->\n";
  $Debug .= "<!-- processing JSON entries for Moon data -->\n";
  $rawJSON = $content; // kludge.. our unchunking removed this
  if($doDebug) {
	  $Debug .= "<!-- rawJSON size is ".strlen($rawJSON). " bytes -->\n";
  	  $Debug .= "<!-- rawJSON is '".$rawJSON."' -->\n";
//  $rawJSON = WU_prepareJSON($rawJSON);
  $MoonJSON = json_decode($rawJSON,true); // get as associative array
  $Debug .= get_sunmoon_decode_JSON_error();
  if($doDebug) {$Debug .= "<!-- JSON\n".print_r($MoonJSON,true)." -->\n";}
USNO returns info like:
      "error":false,
      "apiversion":"1.0",
      "year":2015,
      "month":7,
      "day":28,"datechanged":false,
      "lon":-122.02,
      "lat":37.67,
      "tz":-7,
      
   "sundata":[
            {"phen":"BC", "time":"05:39"},
            {"phen":"R", "time":"06:08"},
            {"phen":"U", "time":"13:15"},
            {"phen":"S", "time":"20:20"},
            {"phen":"EC", "time":"20:50"}
            ],
            "moondata":[
            
            {"phen":"S", "time":"03:25"},
            {"phen":"R", "time":"17:57"},
            {"phen":"U", "time":"23:09"} ]
               , "nextmoondata":[{"phen":"S","time":"04:22"}]
      , "closestphase":{
         "phase":"Full Moon",
         "date":"July 31, 2015",
         "time":"03:43"
      }
            , "fracillum":"91%"
               , "curphase":"Waxing Gibbous" }
			  
Which we decode as:
<!-- JSON
Array
    [error] => 
    [apiversion] => 1.0
    [year] => 2015
    [month] => 7
    [day] => 28
    [datechanged] => 
    [lon] => 0
    [lat] => 0
    [tz] => 0
    [sundata] => Array
        (
            [0] => Array
                (
                    [phen] => BC
                    [time] => 05:41
                )
            [1] => Array
                (
                    [phen] => R
                    [time] => 06:03
                )
            [2] => Array
                (
                    [phen] => U
                    [time] => 12:07
                )
            [3] => Array
                (
                    [phen] => S
                    [time] => 18:10
                )
            [4] => Array
                (
                    [phen] => EC
                    [time] => 18:32
                )
        )
    [moondata] => Array
        (
            [0] => Array
                (
                    [phen] => S
                    [time] => 03:00
                )
            [1] => Array
                (
                    [phen] => R
                    [time] => 15:29
                )
            [2] => Array
                (
                    [phen] => U
                    [time] => 21:42
                )
        )
    [nextmoondata] => Array
        (
            [0] => Array
                (
                    [phen] => S
                    [time] => 03:55
                )
        )
    [closestphase] => Array
        (
            [phase] => Full Moon
            [date] => July 31, 2015
            [time] => 10:43
        )
    [fracillum] => 89%
    [curphase] => Waxing Gibbous
 -->
// now slice the page for the main times for the sun and moon
$phen_name = array(
    'BC' => 'Begin civil twilight',
    'R' => 'Rise',
    'U' => 'Upper Transit',
    'S' => 'Set',
    'EC' => 'End civil twilight',
    'L' => 'Lower Transit (above the horizon)',
    '**' => 'object continuously above the horizon',
    '--' => 'object continuously below the horizon',
    '^^' => 'object continuously above the twilight limit',
    '~~' => 'object continuously below the twilight limit',
$phen_lookup = array(
    'BC' => 'beginciviltwilight',
    'R' => 'rise',
    'U' => 'transit',
    'S' => 'set',
    'EC' => 'endciviltwilight',
    'L' => 'Lower Transit (above the horizon)',
    '**' => 'object continuously above the horizon',
    '--' => 'object continuously below the horizon',
    '^^' => 'object continuously above the twilight limit',
    '~~' => 'object continuously below the twilight limit',
/*  Targeted output is:
USNOdata returns
Array
    [beginciviltwilight] => 05:40
    [beginciviltwilightdate] => 07/28/2015
    [sunrise] => 06:09
    [sunrisedate] => 07/28/2015
    [suntransit] => 13:15
    [suntransitdate] => 07/28/2015
    [sunset] => 20:19
    [sunsetdate] => 07/28/2015
    [endciviltwilight] => 20:48
    [endciviltwilightdate] => 07/28/2015
    [moonriseprior] => 17:00
    [moonrisepriordate] => 07/27/2015
    [moonset] => 03:26
    [moonsetdate] => 07/28/2015
    [moonrise] => 17:56
    [moonrisedate] => 07/28/2015
    [moontransit] => 23:09
    [moontransitdate] => 07/28/2015
    [moonsetnext] => 04:23
    [moonsetnextdate] => 07/29/2015
    [moonphase] => Waxing Gibbous
    [illumination] => 91%
    [hoursofpossibledaylight] => 14:10
$Data = array();
$useDateFormat = $useMDY?"m/d/Y":"d/m/Y";
$dateprior = date($useDateFormat,strtotime("-1 day"));
$datenow   = date($useDateFormat);
$datenext  = date($useDateFormat,strtotime("+1 day"));
$mtype = 'sun';
foreach ($MoonJSON['sundata'] as $n => $d) {
	$mt = $mtype . $phen_lookup[$d['phen']];
	if(preg_match('|civil|i',$mt)) {
		$mt = $phen_lookup[$d['phen']]; // no 'sun' in civil entries
	$Data[$mt] = $d['time'];
	$Data[$mt.'date'] = $datenow;
$mtype = 'moon';
foreach ($MoonJSON['moondata'] as $n => $d) {
	$mt = $mtype . $phen_lookup[$d['phen']];
	$Data[$mt] = $d['time'];
	$Data[$mt.'date'] = $datenow;
$mtype = 'moon';
if(isset($MoonJSON['nextmoondata']) ) {
  foreach ($MoonJSON['nextmoondata'] as $n => $d) {
	$mt = $mtype . $phen_lookup[$d['phen']] . 'next';
	$Data[$mt] = $d['time'];
	$Data[$mt.'date'] = $datenext;
$mtype = 'moon';
if(isset($MoonJSON['prevmoondata']) ) {
  foreach ($MoonJSON['prevmoondata'] as $n => $d) {
	$mt = $mtype . $phen_lookup[$d['phen']] . 'prior';
	$Data[$mt] = $d['time'];
	$Data[$mt.'date'] = $dateprior;
									
if(isset($MoonJSON['curphase']))  { $Data['moonphase'] = $MoonJSON['curphase']; }
if(!isset($Data['moonphase']) and isset($MoonJSON['closestphase']['phase']) ) {
	$Data['moonphase'] = $MoonJSON['closestphase']['phase'];
	$Debug .= "<!-- note: 'curphase' not in JSON.  Used 'closestphase' instead. -->\n";
if(isset($MoonJSON['fracillum'])) {	
  $Data['illumination'] = $MoonJSON['fracillum']; 
} elseif (isset($Data['moonphase'])) {
	if(preg_match('|full|i',$Data['moonphase'])) {$Data['illumination'] = '100%'; }
	if(preg_match('|quarter|i',$Data['moonphase'])) {$Data['illumination'] = '50%'; }
	if(preg_match('|new|i',$Data['moonphase'])) {$Data['illumination'] = '0%'; }
	if(isset($Data['illumination']) ) {
		$Debug .= "<!-- note: 'fracillum' not in JSON, 'illumination' set to '" .
		$Data['illumination'] . "' based on moon phase of '" . $Data['moonphase'] . "'. -->\n";
} else {
  $Debug .= "<!-- note: 'fracillum' not in JSON, no 'illumination' is available. -->\n";
if(isset($Data['sunrise']) and isset($Data['sunset'])) {
	$diff =	strtotime($Data['sunset'])-strtotime($Data['sunrise']);
	$diffh = intval($diff/3600); // hours
	$diffm = intval(($diff / 60) % 60);
	$Data['hoursofpossibledaylight'] = sprintf("%02d:%02d",$diffh,$diffm);
if( !isset($Data['moonrise']) and isset($Data['moonriseprior']) ) {
	$Debug .= "<!-- moonrise missing.. using moonriseprior -->\n";
	$Data['moonrise'] = $Data['moonriseprior'];
	$Data['moonrisedate'] = $Data['moonrisepriordate'];
if( !isset($Data['moonset']) and isset($Data['moonsetnext']) ) {
	$Debug .= "<!-- moonset missing.. using moonsetnext -->\n";
	$Data['moonset'] = $Data['moonsetnext'];
	$Data['moonsetdate'] = $Data['moonsetnextdate'];
$Debug .= "<!-- USNOdata\n".print_r($Data,true) . " -->\n";
print $Debug;
return($Data);
} // end of getUSNOsunmoon function
# --------- end of mainline function --------------
// get contents from one URL and return as string 
 function get_sunmoon_fetchUrlWithoutHanging($url,$useFopen=false) {
// thanks to Tom at Carterlake.org for this script fragment
  global $Debug, $doDebug, $needCookie,$timeStamp,$TOTALtime,$Version;
  $overall_start = time();
  if (! $useFopen) {
   // Set maximum number of seconds (can have floating-point) to wait for feed before displaying page without feed
   $numberOfSeconds=5;   
   // Suppress error reporting so Web site visitors are unaware if the feed fails
   error_reporting(0);
   // Extract resource path and domain from URL ready for fsockopen
   $FullUrl = $url;
   $urlParts = parse_url($url);
   $domain = $urlParts['host'];
   if(isset($urlParts['port'])) {
      $port   = $urlParts['port'];
   } else { 
      $port   = 80;
   }
   $resourcePath = $urlParts['path'];
   $resourcePath = preg_replace('|nocache|','?'.$timeStamp,$resourcePath);
   if(isset($urlParts['query']))    {$resourcePath .= "?" . $urlParts['query']; }
   if(isset($urlParts['fragment'])) {$resourcePath .= "#" . $urlParts['fragment']; }
   $T_start = get_sunmoon_microtime_float();
   $hostIP = gethostbyname($domain);
   $T_dns = get_sunmoon_microtime_float();
   $ms_dns  = sprintf("%01.3f",round($T_dns - $T_start,3));
   $Debug .= "<!-- GET $resourcePath HTTP/1.1 \n      Host: $domain  Port: $port IP=$hostIP-->\n";
//   print "GET $resourcePath HTTP/1.1 \n      Host: $domain  Port: $port IP=$hostIP\n";
   // Establish a connection
   $socketConnection = fsockopen($hostIP, $port, $errno, $errstr, $numberOfSeconds);
   $T_connect = get_sunmoon_microtime_float();
   $T_puts = 0;
   $T_gets = 0;
   $T_close = 0;
   if (!$socketConnection)
       {
       // You may wish to remove the following debugging line on a live Web site
       $Debug .= "<!-- Network error: $errstr ($errno) -->\n";
//       print "Network error: $errstr ($errno)\n";
       }    // end if
   else    {
       $xml = '';
	   $getString = "GET $resourcePath HTTP/1.1\r\nHost: $domain\r\nConnection: Close\r\n";
	   if (isset($needCookie[$domain])) {
	     $getString .= $needCookie[$domain] . "\r\n";
		 $Debug .=  "<!-- cookie used '" . $needCookie[$domain] . "' for GET to $domain -->\n";
	   }
	   $getString .= "User-agent: Mozilla/5.0 (get-USNO-sunmoon.php; saratoga-weather.org)\r\nAccept: text/plain,text/html\r\nAccept-Encoding: gzip;q=0,compress;q=0\r\n";
	   $getString .= "\r\n";
	   if($doDebug) {$Debug .= "<!-- Request:\n$getString\n -->\n";}
       fputs($socketConnection, $getString);
       $T_puts = get_sunmoon_microtime_float();
	   
       // Loop until end of file
	   $TGETstats = array();
	   $TGETcount = 0;
       while (!feof($socketConnection))
           {
		   $T_getstart = get_sunmoon_microtime_float();
           $xml .= fgets($socketConnection, 16384);
		   $T_getend = get_sunmoon_microtime_float();
		   $TGETcount++;
		   $TGETstats[$TGETcount] = sprintf("%01.3f",round($T_getend - $T_getstart,3));
           }    // end while
       $T_gets = get_sunmoon_microtime_float();
       fclose ($socketConnection);
       $T_close = get_sunmoon_microtime_float();
       }    // end else
   $ms_connect = sprintf("%01.3f",round($T_connect - $T_dns,3));
   if($T_close > 0) {
      $ms_puts = sprintf("%01.3f",round($T_puts - $T_connect,3));
	  $ms_gets = sprintf("%01.3f",round($T_gets - $T_puts,3));
	  $ms_close = sprintf("%01.3f",round($T_close - $T_gets,3));
	  $ms_total = sprintf("%01.3f",round($T_close - $T_start,3)); 
    } else {
       $ms_puts = 'n/a';
	  $ms_gets = 'n/a';
	  $ms_close = 'n/a';
	  $ms_total = sprintf("%01.3f",round($T_connect - $T_start,3)); 
   }
   $Debug .= "<!-- HTTP stats:  dns=$ms_dns conn=$ms_connect put=$ms_puts get($TGETcount blocks)=$ms_gets close=$ms_close total=$ms_total secs -->\n";
//   print  "HTTP stats: dns=$ms_dns conn=$ms_connect put=$ms_puts get($TGETcount blocks)=$ms_gets close=$ms_close total=$ms_total secs \n";
//   foreach ($TGETstats as $block => $mstimes) {
//     print "HTTP Block $block took $mstimes\n";
//   }
   $TOTALtime+= ($T_close - $T_start);
   $overall_end = time();
   $overall_elapsed =   $overall_end - $overall_start;
   $Debug .= "<!-- fetch function elapsed= $overall_elapsed secs. -->\n"; 
//   print "fetch function elapsed= $overall_elapsed secs.\n"; 
   return($xml);
 } else {
//   print "<!-- using file function -->\n";
   $T_start = get_sunmoon_microtime_float();
   $xml = implode('',file($url));
   $T_close = get_sunmoon_microtime_float();
   $ms_total = sprintf("%01.3f",round($T_close - $T_start,3)); 
   $Debug .= "<!-- file() stats: total=$ms_total secs -->\n";
//   print " file() stats: total=$ms_total secs.\n";
   $TOTALtime+= ($T_close - $T_start);
   $overall_end = time();
   $overall_elapsed =   $overall_end - $overall_start;
   $Debug .= "<!-- fetch function elapsed= $overall_elapsed secs. -->\n"; 
//   print "fetch function elapsed= $overall_elapsed secs.\n"; 
   return($xml);
   }    // end get_sunmoon_fetchUrlWithoutHanging
// ------------------------------------------------------------------
function get_sunmoon_microtime_float()
   list($usec, $sec) = explode(" ", microtime());
   return ((float)$usec + (float)$sec);
// ------------------------------------------------------------------
function get_sunmoon_unchunk_content($data) {
    $fp = 0;
    $outData = "";
    while ($fp < strlen($data)) {
        $rawnum = substr($data, $fp, strpos(substr($data, $fp), "\r\n") + 2);
        $num = hexdec(trim($rawnum));
        $fp += strlen($rawnum);
        $chunk = substr($data, $fp, $num);
        $outData .= $chunk;
        $fp += strlen($chunk);
    }
    return $outData;
// ------------------------------------------------------------------
function get_sunmoon_decode_JSON_error() {
  $Status = '';
  $Status .= "<!-- json_decode returns ";
  switch (json_last_error()) {
	case JSON_ERROR_NONE:
		$Status .= ' - No errors';
	break;
	case JSON_ERROR_DEPTH:
		$Status .= ' - Maximum stack depth exceeded';
	break;
	case JSON_ERROR_STATE_MISMATCH:
		$Status .= ' - Underflow or the modes mismatch';
	break;
	case JSON_ERROR_CTRL_CHAR:
		$Status .= ' - Unexpected control character found';
	break;
	case JSON_ERROR_SYNTAX:
		$Status .= ' - Syntax error, malformed JSON';
	break;
	case JSON_ERROR_UTF8:
		$Status .= ' - Malformed UTF-8 characters, possibly incorrectly encoded';
	break;
	default:
		$Status .= ' - Unknown error, json_last_error() returns \''.json_last_error(). "'";
	break;
   } 
   $Status .= " -->\n";
   return($Status);
?><?php
//import UV Forecast
// Script by Ken True - saratoga-weather.org
// Version 1.00 - 25-Feb-2008 - Initial Release
// Version 1.01 - 01-Mar-2008 - fixed logic to skip header row
// Version 1.02 - 03-Mar-2008 - added logic to adjust return arrays so [0] is always 'today's forecast
//                              based on timezone setting in $ourTZ (or $SITE['tz'] for templates
// Version 1.03 - 03-Jul-2009 - PHP5 support for timezone set
// Version 1.04 - 26-Jan-2011 - added support for $cacheFileDir for cache file
// Version 1.05 - 15-Feb-2011 - fixed undefined index Notice: errata
// Version 1.06 - 18-Feb-2011 - added support for comma decimal point in returned UVfcstUVI array
// Version 1.07 - 30-Mar-2011 - added support for date formatting
// error_reporting(E_ALL); // uncomment for error checking
// this script is designed to be used by
//   include("get-UV-forecast-inc.php");
// the script does no printing other than the HTML comments on status and the
// required copyright info.
//  to print values in your page, just:
//   echo "UV Forecast $UVfcstDate[0] is $UVfcstUVI[0]\n";
//  Returns Arrays:
//  $UVfcstDate[n]  -- date of forecast in dd Mon yyyy format
//  $UVfcstUVI[n]   -- forecast UVI in dd.d format
//                     n=0...8 (usually)
//  $UVfcstDOW[n]   -- forecast DayOfWeek ('Sunday' ... 'Saturday') from date('l',time());
//  $UVfcstISO[n]   -- forecast date in YYYYMMDD format.
//  will return $UVfcstUVI[n] = 'n/a' if forecast is not available.
// -------------Settings ---------------------------------
  $cacheFileDir = './';      // default cache file directory
  $myLat = '37.27153397';    //North=positive, South=negative decimal degrees
  $myLong = '-122.02274323';  //East=positive, West=negative decimal degrees
  $ourTZ = "America/Los Angeles";  //NOTE: this *MUST* be set correctly to
// translate UTC times to your LOCAL time for the displays.
//  http://us.php.net/manual/en/timezones.php  has the list of timezone names
//  pick the one that is closest to your location and put in $ourTZ like:
//   $ourTZ = "Europe/Paris";  
//   $ourTZ = "Pacific/Auckland";
  $commaDecimal = false;     // =true to use comma as decimal point in UVfcstUVI
  $dateOnlyFormat = 'd M Y'; // dd MON YYYY
// -------------End Settings -----------------------------
$UVversion = 'get-UV-forecast-inc.php V1.07 - 30-Mar-2012';
// the following note is required by agreement with the authors of the website www.temis.nl
/* -----------------------------------------------------------------------------------------
Date: Wed, 20 Feb 2008 11:30:43 +0100
From: Ronald van der A <avander@knmi.nl>
Organization: KNMI
To: webmaster@saratoga-weather.org
CC: Ronald.van.der.A@knmi.nl, Jos.van.Geffen@knmi.nl
Subject: Re: Request to use data
Dear Ken,
If you change the line into
<p>UV forecast courtesy of and <a href="http://www.temis.nl/">Copyright
&copy; KNMI/ESA</a>. Used with permission.</p>
then it is ok for us. In this way KNMI is acknowledged, who have done
the major part of the UV product development.
Best regards,
Ronald van der A
 ----------------------------------------------------------------------------------------- */
$requiredNote = 'UV forecast courtesy of and Copyright &copy; KNMI/ESA (http://www.temis.nl/). Used with permission.';
// overrides from Settings.php if available
global $SITE;
if (isset($SITE['latitude'])) 	{$myLat = $SITE['latitude'];}
if (isset($SITE['longitude'])) 	{$myLong = $SITE['longitude'];}
if (isset($SITE['tz'])) {$ourTZ = $SITE['tz']; }
if(isset($SITE['cacheFileDir']))     {$cacheFileDir = $SITE['cacheFileDir']; }
if(isset($SITE['commaDecimal']))     {$commaDecimal = $SITE['commaDecimal']; }
if(isset($SITE['dateOnlyFormat']))   {$dateOnlyFormat = $SITE['dateOnlyFormat']; }
// end of overrides from Settings.php
$myLat = round($myLat,4);
$myLong = round($myLong,4);
$UV_URL = "http://www.temis.nl/uvradiation/nrt/uvindex.php?lon=$myLong&lat=$myLat";
// create a 'uv-forecast.txt' file in the same directory as the script.
// you may have to set the permissions on the file to '666' so it is writable
// by the webserver.
$UVcacheName = $cacheFileDir."uv-forecast.txt";
$UVrefetchSeconds = 3600;
// ---------- end of settings -----------------------
if (isset($_REQUEST['sce']) && strtolower($_REQUEST['sce']) == 'view' ) {
   //--self downloader --
   $filenameReal = __FILE__;
   $download_size = filesize($filenameReal);
   header('Pragma: public');
   header('Cache-Control: private');
   header('Cache-Control: no-cache, must-revalidate');
   header("Content-type: text/plain");
   header("Accept-Ranges: bytes");
   header("Content-Length: $download_size");
   header('Connection: close');
   readfile($filenameReal);
   exit;
print "<!-- $UVversion -->\n<!-- $requiredNote -->\n";
// Establish timezone offset for time display
# Set timezone in PHP5/PHP4 manner
  if (!function_exists('date_default_timezone_set')) {
	putenv("TZ=" . $ourTZ);
#	$Status .= "<!-- using putenv(\"TZ=$ourTZ\") -->\n";
    } else {
	date_default_timezone_set("$ourTZ");
#	$Status .= "<!-- using date_default_timezone_set(\"$ourTZ\") -->\n";
   }
 $TZ = date('T',time()); // get our timezone abbr
// You can now force the cache to update by adding ?force=1 to the end of the URL
if ( empty($_REQUEST['force']) ) 
        $_REQUEST['force']="0";
$Force = $_REQUEST['force'];
if ($Force==1) {
      $html = fetchUVUrlWithoutHanging($UV_URL,$UVcacheName); 
      print "<!-- force reload from URL $UV_URL -->\n";
      $fp = fopen($UVcacheName, "w"); 
	  if($fp) {
        $write = fputs($fp, $html); 
        fclose($fp);
	  } else {
	    print "<!--Unable to write cache $UVcacheName -->\n";
	  }
// refresh cached copy of page if needed
// fetch/cache code by Tom at carterlake.org
if (file_exists($UVcacheName) and filemtime($UVcacheName) + $UVrefetchSeconds > time()) {
      $WhereLoaded = "from cache $UVcacheName";
      $html = implode('', file($UVcacheName));
    } else {
      $WhereLoaded = "from URL $UV_URL";
      $html = fetchUVUrlWithoutHanging($UV_URL);
      $fp = fopen($UVcacheName, "w"); 
	  if($fp) {
        $write = fputs($fp, $html); 
        fclose($fp);
	  } else {
	    print "<!--Unable to write cache $UVcacheName -->\n";
	  }
print "<!-- UV data load from $WhereLoaded -->\n";
/*$UVfcstDate = array_fill(0,9,'');   // initialize the return arrays
$UVfcstUVI  = array_fill(0,9,'n/a');
$UVfcstDOW  = array_fill(0,9,'');
$UVfcstYMD  = array_fill(0,9,'');
$UVfcstISO  = array_fill(0,9,'');
$UVfcstDate = array();   // initialize the return arrays
$UVfcstUVI  = array();
$UVfcstDOW  = array();
$UVfcstYMD  = array();
$UVfcstISO  = array();
if(strlen($html) < 50 ) {
  print "<!-- data not available -->\n";
  return;
// now slice it up
// Get the table to use:
  preg_match_all('|<dl><dd>\s*<table(.*?)</table>|is',$html,$betweenspan);
//  print "<!-- betweenspan \n" . print_r($betweenspan[1],true) . " -->\n";
// slice the table into rows
  preg_match_all('|<tr>(.*)</tr>|Uis',$betweenspan[1][0],$uvsets);
  $uvsets = $uvsets[1];
//  print "<!-- uvsets \n" . print_r($uvsets,true) . " -->\n";
<!-- uvsets 
Array
    [0] => <td align=left ><i>&nbsp;<br>&nbsp; Date</i> </td>
    <td align=right><i>UV <br>&nbsp; index</i> </td>
    <td align=right><i>ozone <br>column</i> </td>
    [1] => <td align=right nowrap>&nbsp; 25 Feb 2008 </td>
    <td align=right nowrap> 4.2 </td>
    <td align=right nowrap>&nbsp;  303.4 DU </td>
    [2] => <td align=right nowrap>&nbsp; 26 Feb 2008 </td>
    <td align=right nowrap> 4.5 </td>
    <td align=right nowrap>&nbsp;  291.8 DU </td>
    [3] => <td align=right nowrap>&nbsp; 27 Feb 2008 </td>
    <td align=right nowrap> 4.0 </td>
    <td align=right nowrap>&nbsp;  328.0 DU </td>
	...
*/  
// $headings = array_shift($uvsets);  // lose the headings row	
$indx = 0;
foreach ($uvsets as $n => $uvtext) { // take each row forecast and slice it up
// extract the data from the current table row
   $uvtext = preg_replace('|&nbsp;|is','',$uvtext);
   preg_match_all('|<td.*?>(.*?)</td>|is',$uvtext,$matches);
//   print "<!-- $indx : matches \n" . print_r($matches,true) . " -->\n";
   if (is_numeric(trim($matches[1][1]))) {
	 $t = strtotime(trim($matches[1][0]));
     $UVfcstDate[$indx] = date($dateOnlyFormat,$t);  // save the values found
	 $UVfcstDOW[$indx] = date('l',$t); // sets to 'Sunday' thru 'Saturday'
	 $UVfcstYMD[$indx] = date('Ymd',$t);  // sets to YYYYMMDD
	 $UVfcstUVI[$indx] = trim($matches[1][1]);   // save UV index
	 $indx++;
   }
foreach ($UVfcstDate as $i => $val) {
  print "<!-- Date='$val', UV='" . $UVfcstUVI[$i] . "' DOW='".$UVfcstDOW[$i]. "' YMD='".$UVfcstYMD[$i]."' -->\n";
// now fix up the array so 'today' is the [0] entry
$YMD = date('Ymd',time());
$shifted = 0;
foreach ($UVfcstYMD as $i => $uvYMD ) {
  if ($uvYMD < $YMD) {
    $junk = array_shift($UVfcstDate);
	$junk = array_shift($UVfcstUVI);
	$junk = array_shift($UVfcstDOW);
    $shifted++; 
for ($i=0;$i<$shifted;$i++) { // clean up the YMD array after shifting
  $junk = array_shift($UVfcstYMD);
if ($shifted) {
  print "<!-- after date=$YMD processing, shifted $shifted entries -->\n";
  foreach ($UVfcstDate as $i => $val) {
    print "<!-- Date='$val', UV='" . $UVfcstUVI[$i] . "' DOW='".$UVfcstDOW[$i]. "' YMD='".$UVfcstYMD[$i]."' -->\n";
if($commaDecimal) {
	foreach ($UVfcstUVI as $i => $uvi) {
		$UVfcstUVI[$i] = preg_replace('|\.|',',',$UVfcstUVI[$i]);
   print "<!-- UVfcstUVI entries now use decimal comma format -->\n";
return; // printing is left to the including page
// ----------------------------functions ----------------------------------- 
 function fetchUVUrlWithoutHanging($url) // thanks to Tom at Carterlake.org for this script fragment
   {
   // Set maximum number of seconds (can have floating-point) to wait for feed before displaying page without feed
   $numberOfSeconds=4;   
   // Suppress error reporting so Web site visitors are unaware if the feed fails
   error_reporting(0);
   // Extract resource path and domain from URL ready for fsockopen
   $url = str_replace("http://","",$url);
   $urlComponents = explode("/",$url);
   $domain = $urlComponents[0];
   $resourcePath = str_replace($domain,"",$url);
   // Establish a connection
   $socketConnection = fsockopen($domain, 80, $errno, $errstr, $numberOfSeconds);
   if (!$socketConnection)
       {
       // You may wish to remove the following debugging line on a live Web site
        print("<!-- Network error: $errstr ($errno) -->\n");
       }    // end if
   else    {
       $xml = '';
       fputs($socketConnection, "GET $resourcePath HTTP/1.0\r\nHost: $domain\r\n\r\n");
       // Loop until end of file
       while (!feof($socketConnection))
           {
           $xml .= fgets($socketConnection, 4096);
           }    // end while
       fclose ($socketConnection);
       }    // end else
   return($xml);
   }    // end function
// ----------------------------------------------------------
      
?><?php
############################################################################
# A Project of TNET Services, Inc. and Saratoga-Weather.org (WD-World-ML template set)
############################################################################
#	Project:	Sample Included Website Design
#	Module:		header.php
#	Purpose:	Provides the displayable top of the website
# 	Authors:	Kevin W. Reed <kreed@tnet.com>
#				TNET Services, Inc.
#               Ken True <webmaster@saratoga-weather.org>
#               Saratoga-Weather.org
# 	Copyright:	(c) 1992-2007 Copyright TNET Services, Inc.
###########################################################################
# This program is free software; you can redistribute it and/or
# modify it under the terms of the GNU General Public License
# as published by the Free Software Foundation; either version 2
# of the License, or (at your option) any later version.
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
# You should have received a copy of the GNU General Public License
# along with this program; if not, write to the Free Software
# Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA
############################################################################
#	This document uses Tab 4 Settings
############################################################################
require_once("Settings.php");
require_once("common.php");
############################################################################
if (isset($SITE['uomTemp']) ) {
  $tuom = $SITE['uomTemp'];
} else {
$tuom = split('
',$temperature);  // extract units
$tuom = '&deg;' . $tuom[1];
<div id="page"><!-- page wrapper -->
<!-- header -->
    <div id="header">
      <h1 class="headerTitle">
<!--
	/* modificato MASSI
	disattivato il collegamento
    attivo nell'intestazione
    cliccando su "Meteo Xerocambos"
	/* <a href="index.php" title="Browse to homepage"><?php echo langtransstr($SITE['organ']); ?></a> */
      
        <a title="Browse to homepage"><?php echo langtransstr($SITE['organ']); ?></a>
      </h1>	
	  <div class="headerTemp">
	    <span class="doNotPrint">
 		  <span class="ajax" id="ajaxbigtemp"><?php print isset($tempnodp)?"$tempnodp$tuom":"&nbsp;"; ?>
		  </span>
		</span>
 	  </div>
      <div class="subHeader">
        <?php echo $SITE['location']; ?>
		<?php if($SITE['allowLanguageSelect']) { // insert code for language select ?>
			   <br />
		<!-- begin language select -->
		<?php echo print_language_selects(); ?>
		<!-- end language select -->
		<?php } // end code for language select ?>
      </div>
      <div class="subHeaderRight">
	  <?php 
		if (isset($showGizmo) and $showGizmo) {
		  include_once("ajax-gizmo.php");
		} else {
		  print "&nbsp;<br/><br/>\n"; // needed as placeholder if no gizmo
	  ?>
	  </div><!-- end subHeaderRight -->
</div>
<!-- end of header -->	
<div class="ajaxDashboard">
<?php
# Used with get-metar-conditions-inc.php to format and display multiple METAR reports
# Author: Ken True webmaster@saratoga-weather.org
# NOTE: it is recommended that you NOT change this file .. it is subject to updates to fix display issues
#       do your customizations in the wxmetar.php page to specify settings.
# Version 1.00 - 17-Nov-2011 - initial release
# Version 1.01 - 18-Nov-2011 - chg $Lang to $mtrLang to address language selection stickyness
# Version 1.02 - 19-Nov-2011 - fixed a malformed PHP code marker, remove 'at' in Wind string
# Version 1.03 - 22-Nov-2011 - added 2-up/3-up display format based on narrow/wide aspect for screen
# Version 1.04 - 24-Nov-2011 - added translation capability for VISIBILITY 'greater than' phrase
# Version 1.05 - 27-Nov-2011 - added 'Distance to station' for metar lists generated by find-metar.php
# Version 1.06 - 29-Nov-2011 - added cloud-detail display and improved conditions translations
$IMDversion = 'include-metar-display.php - Version 1.06 - 29-Nov-2011';
if (isset($_REQUEST['sce']) && ( strtolower($_REQUEST['sce']) == 'view' or
    strtolower($_REQUEST['sce']) == 'show') ) {
   //--self downloader --
   $filenameReal = __FILE__;
   $download_size = filesize($filenameReal);
   header('Pragma: public');
   header('Cache-Control: private');
   header('Cache-Control: no-cache, must-revalidate');
   header("Content-type: text/plain");
   header("Accept-Ranges: bytes");
   header("Content-Length: $download_size");
   header('Connection: close');
   readfile($filenameReal);
   exit;
// overrides from Settings.php if available
global $Debug, $SITE;
if (isset($SITE['lang'])) 	{$mtrLang = $SITE['lang'];}
if (isset($SITE['uomTemp'])) 	{$uomTemp = $SITE['uomTemp'];}
if (isset($SITE['uomBaro'])) 	{$uomBaro = $SITE['uomBaro'];}
if (isset($SITE['uomWind'])) 	{$uomWind = $SITE['uomWind'];}
if (isset($SITE['uomRain'])) 	{$uomRain = $SITE['uomRain'];}
if (isset($SITE['fcsticonstype'])) 	{$condIconType = $SITE['fcsticonstype'];}
print "<!-- $IMDversion -->\n";
if(file_exists("get-metar-conditions-inc.php")) {
  include_once("get-metar-conditions-inc.php");
  print "<!-- $GMCVersion -->\n";
} else {
  print "<p>Unable to find/load get-metar-conditions-inc.php.</p>\n";
  return;
$UOM = "$uomTemp,$uomWind,$uomBaro,$uomRain";
//$UOM = "&deg;C,km/h,hPa,mm";
$toDisplay = array(  // keys in $mtr array to display (if they exist) and in this order
'TEMP' => 'Temperature',
'WIND CHILL' => 'Wind Chill',
'HEAT INDEX' => 'Heat Index',
'WIND' => 'Wind',
'DEWPT' => 'Dew Point',
'HUMIDITY' => 'Humidity',
'BAROMETER' => 'Barometer',
'CONDITIONS' => 'Summary',
'CLOUDS' => 'Clouds',
'VISIBILITY' => 'Visibility',
'CLOUD-DETAILS' => 'Cloud details',
// Get translation values if available
foreach ($toDisplay as $key => $val) {
	$toDisplay[$key] = langtransstr($val);
if ($mtrLang <> 'en') { // try changing windrose graphics test for the Calm graphic
  $tfile = preg_replace('|^'.$wrName.'|',$wrName.$mtrLang.'-',$wrCalm);
  print "<!-- checking for '" . $condIconDir.$tfile . "' -->\n";
  if (file_exists($condIconDir.$tfile)) {
	$wrCalm = $tfile;  // change the PHP dashboard settings too
	$wrName = $wrName . $mtrLang . '-';
	print "<!-- new wrName='$wrName', wrCalm='$wrCalm' -->\n";
  } 
$maxCols = 2;
if(isset($SITE['CSSscreen']) and preg_match('|wide|',$SITE['CSSscreen'])) {
	$maxCols = 3;
$thisCol = 0;
echo "<table width=\"99%\">\n";
echo "<tr>\n";
foreach ($MetarList as $idx => $Mrec) {
  list($mtrICAO,$mtrName,$mtrDistanceM,$mtrDistanceK,$direction) = explode('|',$Mrec.'|||||');
  if($mtrICAO == '') { continue;}
  $Debug = '';
  list($condwords,$iconnum,$condicon,$condicondesc,$mtr,$metarGMT) =
        mtr_conditions($mtrICAO, $time, $sunrise, $sunset, true,$UOM);
  $metarUpdated = date($SITE['timeFormat'],$metarGMT);
  if(isset($_REQUEST['debug']) and strtolower($_REQUEST['debug']) == 'y') {
	  print $Debug;
	  print "<!-- mtr_conditions returns\n";
	  print "condwords='$condwords', iconnum=$iconnum, condicon='$condicon',\n";
	  print "condicondesc='$condicondesc'\n";
	  print "metarUpdated = $metarGMT ". gmdate("Y-m-d h:i",$metarGMT) . " GMT ($metarUpdated)\n"; 
	  // print "mtr = ".print_r($mtr,true)."\n";
	  print " -->\n";
// now $mtr array contains the decoded values
foreach ($toDisplay as $key => $legend) {
   	
   if (!isset($mtr[$key]) or strlen($mtr[$key]) < 1) { continue; }
   if($key == 'CONDITIONS' or $key == 'CLOUDS') {
	   $mtr[$key] = fixupCondition($mtr[$key]);  // handle translations if needed
   }
   if($key == 'CLOUD-DETAILS') {
	   $cd = explode("\t",$mtr[$key]);
	   foreach ($cd as $k => $cdrec) {
		  if(preg_match('/^(.*) (\d+.*)$/',$cdrec,$matches)) {
		   
		   $cd[$k] = fixupCondition($matches[1]) . " ".$matches[2];
		   print "<!-- cloud detail fixupCondition in='$cdrec' out='".$cd[$k]."' -->\n";
		  }
	   }
	   
	   $mtr[$key] = join("<br/>\n",$cd);
   }
   if($key == 'WIND') {
	   $t = explode(" ",$mtr[$key]);
	   $dirlabel = $t[0];
	   if(isset($t[0])) $t[0] = langtransstr($t[0]); // translate wind direction
	   if(isset($t[1])) $t[1] = ''; // remove 'at'
	   $mtr[$key] = join(' ',$t);
   }
// time to format the output for display
if($thisCol >= $maxCols) {
	print "</tr>\n";
	print "<tr><td colspan=\"$maxCols\">&nbsp;</td></tr>\n";
	print "<tr>\n";
	$thisCol = 0;
?><td valign="top" align="center">
<table width="320" cellpadding="2" cellspacing="1" style="border:solid; border-color: #CCCCCC;">
  <tr>
    <td colspan="2" class="datahead" style="text-align: center;border: none">
    <?php echo "$mtrICAO - $mtrName"; 
	 if($mtrDistanceM <> '' and $mtrDistanceK <> '') {
		 echo "<br/>".langtransstr('Distance from station').": ";
		 if($direction <> '') {
			 echo " ".langtransstr($direction). " ";
		 }
		 if(isset($SITE['uomDistance']) and preg_match('|mi|i',$SITE['uomDistance'])) {
			 echo "${mtrDistanceM}mi, ";
		 }
		 echo "${mtrDistanceK}km";
		  
	 } ?>
    </td>
  </tr>
  <tr>
    <td colspan="2" class="data1" style="text-align: center;border: none">
    <?php echo langtransstr('Updated') . ": $metarUpdated"; ?>
    <?php
	 if(time() - $metarGMT > $maxAge) {
		print "<br/><span style=\"color: red\"><b>".langtransstr('NOT Current')."</b></span>\n";
	?>	 
    </td>
  </tr>
  <tr>
    <td align="center" valign="top" class="data1" style="text-align: center;border: none">
          <img src="<?php echo $condIconDir . newIcon($iconnum) ?>"  
            alt="<?php $t1 = fixupCondition($condwords);
                  echo $t1; ?>" 
            title="<?php echo $t1; ?>" height="58" width="55" /><br/>
            <b><?php echo $t1; ?></b>
    </td>
    <td align="center" valign="top" class="data1" style="text-align: center;border: none">
      <?php if(isset($mtr['WIND'])) { ?>
				  <img src="<?php echo $condIconDir; ?>spacer.gif" width="1" 
				    height="<?php echo $wrHeight; ?>" alt=" " align="left"/>
				  <?php $wr = $condIconDir . $wrName . $dirlabel . $wrType; // normal wind rose
				        $wr = preg_replace('|varies|','calm',$wr);
				        $wrtext = langtransstr('Wind from') ." " . langtransstr($dirlabel);
						if (preg_match('!(calm|varies)!i',$mtr['WIND']) and
						     ($wrCalm <> '') ) { // use calm instead
						  $wr = $condIconDir . $wrCalm;
						}
						$t = preg_match('|calm|i',$mtr['WIND'])?langtransstr('Calm'):$mtr['WIND'];
						$t = preg_replace('|varies|i',langtransstr('varies'),$t);
						$t = preg_replace('|gusting to|',langtransstr('Gust').":",$t);
                        $t = preg_replace('|\((.*)\)|U'," <span class=\"bidi\">, $1</span>",$t); 
						// fix parenthesis issue in RTL language
						
				  ?>
				    <img src="<?php echo $wr; ?>" 
					height="<?php echo $wrHeight; ?>" width="<?php echo $wrWidth; ?>" 
					title="<?php echo $wrtext; ?>" 
					alt="<?php echo $wrtext; ?>"  style="text-align:center" /><br/>
                    <span class="bidi"><?php echo $toDisplay['WIND']; ?>:</span>
                    <span class="bidi"><?php echo $t; ?></span>
       <?php } else { // isset($mtr['WIND']
	      echo "&nbsp;\n";
	   } // end isset($mtr['WIND')
	   ?>
     </td>
  </tr>
 <?php
STATION : LEIB
WIND : NNW at 7 mph (11 km/h)
VISIBILITY : 16 miles
CONDITIONS :
CLOUDS : Few Clouds
TEMP : 63F (17C)
DEWPT : 57F (14C)
HUMIDITY : 83%
BAROMETER : 1019 hPa (30.09 inHg)
foreach ($toDisplay as $key => $legend) {
   	
   if (!isset($mtr[$key]) or strlen($mtr[$key]) < 1) { continue; }
   if ($key == 'WIND') {continue;}
   $t = $mtr[$key];
   if ($key == 'VISIBILITY') {
     $t = preg_replace('|greater than|i',langtransstr('greater than'),$t);
   }
   $t = preg_replace('|\((.*)\)|U'," <span class=\"bidi\">, $1</span>",$t); // fix parenthesis issue in RTL language
   print "  <tr>\n";
   print "    <td class=\"data1\" align=\"right\">${legend}:</td>\n";
   print "    <td class=\"data1\" align=\"left\"><b><span class=\"bidi\">".$t."</span></b></td>\n";
   print "  </tr>\n";
   print "  <tr>\n";
   print "     <td class=\"data1\" colspan=\"2\"><small>".$mtr['RAW-METAR']."</small></td>\n"; 
   print "  </tr>\n";
   if(isset($_REQUEST['debug']) and strtolower($_REQUEST['debug']) == 'y') {
     print "  <tr>\n";
     print "     <td class=\"data1\" colspan=\"2\"><small>".$mtr['METAR']."</small></td>\n"; 
     print "  </tr>\n";
   }
</table>
</td>
<?php
  $thisCol++;
} // end of metar loop
?></tr>
</table>
</div> <!-- end ajaxDashboard class format -->
<?php
// supporting functions
//=========================================================================
// pick the NOAA style condition icon based on iconnumber 
function newIcon($numb) {
  global $condIconDir,$condIconType;
  $iconList = array(
	"skc.jpg",          //  0 imagesunny.visible
	"nskc.jpg",         //  1 imageclearnight.visible
	"bkn.jpg",          //  2 imagecloudy.visible
	"sct.jpg",          //  3 imagecloudy2.visible
	"nbkn.jpg",         //  4 imagecloudynight.visible
	"sct.jpg",          //  5 imagedry.visible
	"fg.jpg",           //  6 imagefog.visible
	"hazy.jpg",         //  7 imagehaze.visible
	"ra.jpg",           //  8 imageheavyrain.visible
	"few.jpg",          //  9 imagemainlyfine.visible
	"mist.jpg",         // 10 imagemist.visible
	"nfg.jpg",          // 11 imagenightfog.visible
	"nra.jpg",          // 12 imagenightheavyrain.visible
	"novc.jpg",         // 13 imagenightovercast.visible
	"nra.jpg",          // 14 imagenightrain.visible
	"nshra.jpg",        // 15 imagenightshowers.visible
	"nsn.jpg",          // 16 imagenightsnow.visible
	"ntsra.jpg",        // 17 imagenightthunder.visible
	"ovc.jpg",          // 18 imageovercast.visible
	"sct.jpg",          // 19 imagepartlycloudy.visible
	"ra.jpg",           // 20 imagerain.visible
	"ra.jpg",           // 21 imagerain2.visible
	"shra.jpg",         // 22 imageshowers2.visible
	"ip.jpg",           // 23 imagesleet.visible
	"ip.jpg",           // 24 imagesleetshowers.visible
	"sn.jpg",           // 25 imagesnow.visible
	"sn.jpg",           // 26 imagesnowmelt.visible
	"sn.jpg",           // 27 imagesnowshowers2.visible
	"skc.jpg",          // 28 imagesunny.visible
	"scttsra.jpg",      // 29 imagethundershowers.visible
	"hi_tsra.jpg",      // 30 imagethundershowers2.visible
	"tsra.jpg",         // 31 imagethunderstorms.visible
	"nsvrtsra.jpg",     // 32 imagetornado.visible
	"wind.jpg",         // 33 imagewindy.visible
	"ra1.jpg",          // 34 stopped rainning
	"windyrain.jpg"     // 35 windy/rain 
	);	
	$tempicon = $iconList[$numb];
	if($condIconType <> '.jpg') {
	  $tempicon = preg_replace('|\.jpg|',$condIconType,$tempicon);
	return($tempicon);
// Function to process %Currentsolarcondition% string and 
// remove duplicate stuff, then fix capitalization, and translate from English if needed
//  
  function fixupCondition( $inCond ) {
    global $DebugMode;
    $Cond = str_replace('_',' ',trim($inCond));
	$Cond = strtolower($Cond);
	$dt = '';
	$vals = array();
	if(strpos($Cond,'/') !==false) {
		$dt .= "<!-- vals split on slash -->\n";
		$vals = explode("/",$Cond);
	if(strpos($Cond,',') !==false) {
		$dt .= "<!-- vals split on comma -->\n";
		$vals = explode(",",$Cond);
	$ocnt = count($vals);
	if($ocnt < 1) { return(langtransstr(trim($inCond))); }
	foreach ($vals as $k => $v) { 
	  if($DebugMode) { $dt .= "<!-- v='$v' -->\n"; }
	  $v = ucfirst(strtolower(trim($v)));
	  $vals[$k] = langtransstr($v); 
	  if($DebugMode) { $dt .= "<!-- vals[$k]='".$vals[$k]."' -->\n"; }
	if($vals[0] == '') {$junk = array_shift($vals);}
	if(isset($vals[2]) and $vals[0] == $vals[2]) {$junk = array_pop($vals);}
	reset($vals);
	$t = join(', ',$vals);
//	return($Cond . "' orig=$ocnt n=" . count($vals) ." t='$t'");
    if($DebugMode) {
      $t = "<!-- fixupCondition in='$inCond' out='$t' ocnt='$ocnt' -->" . $dt . $t;
    return($t);
?><?php
PHP script by Mike Challis, www.642weather.com/weather/
Carterlake/AJAX/PHP Template - Color Theme Switcher Plugin PHP Script
Script available at: http://www.642weather.com/weather/scripts.php
Contact Mike: http://www.642weather.com/weather/contact_us.php
Live Demo: http://www.642weather.com/weather/template/
Download: http://www.642weather.com/weather/scripts/css-theme-switcher.zip
Version: 1.17  19-Dec-2008
- adjustment to cookie path setting
Version 1.18 - 10-Feb-2011 - fix duplicate id= in wide/narrow selection HTML
Version 1.19 - 05-Feb-2013 = fix HTML5 validation issues
see changelog.txt for all change history
Support comes from MCHALLIS in this topic at the Weather-Watch.com forum:
http://www.weather-watch.com/smf/index.php/topic,30183.0.html
You are free to use and modify the code
This php code provided "as is", and Long Beach Weather (Michael Challis)
disclaims any and all warranties, whether express or implied, including
(without limitation) any implied warranties of merchantability or
fitness for a particular purpose.
# session_start() must be processed before any other output
# or you might get a warning "headers already sent".
if( !isset( $_SESSION ) ) {
    session_start();
#################
# begin settings
# ##############
# note the style names in this array are intentionally missing
# the '-wide' and '-narrow' part of the file name, because it is automatically
# replaced by the program based on the user's setting for wide or narrow
# ie: a css file on the server has weather-screen-blue-wide.css
# but the name of it in this array is weather-screen-blue.css
# You can make new styles and add them, just add a new file to the server
# and add a new entry in the array below using the file name conventions noted above
# you can add or remove styles from this array
$CSSstyles = array(
'weather-screen-black.css'   => 'Black',
'weather-screen-blue.css'    => 'Blue',
'weather-screen-dark.css'    => 'Dark',
'weather-screen-fall.css'    => 'Fall',
'weather-screen-green.css'   => 'Green',
'weather-screen-icetea.css'  => 'Ice Tea',
'weather-screen-mocha.css'   => 'Mocha',
'weather-screen-orange.css'  => 'Orange',
'weather-screen-pastel.css'  => 'Pastel',
'weather-screen-purple.css'  => 'Purple',
'weather-screen-red.css'     => 'Red',
'weather-screen-salmon.css'  => 'Salmon',
'weather-screen-silver.css'  => 'Silver',
'weather-screen-spring.css'  => 'Spring',
'weather-screen-taupe.css'   => 'Taupe',
'weather-screen-teal.css'    => 'Teal',
############
# Use javascript 'OnChange' to post form
############
# if set to true, the style select will not need a "set" button
# if set to false, the style select show a "set" button
# There is a known issue with IE6 and the onchange feature,
# the ajax updates sometimes interfere causing the onchange not to change when changing a selection
# recommended setting: false
$use_onchange_submit = false; # set to true or false
############
# Use cookies to remember settings between site visits
############
# cookies are used to remember the users style settings on each visit to the web site
# you can disable use of cookies, but then the settings would have to be set by
# the user each visit to the web site
# recommended setting: true
$use_cookies = true; # set to true or false
# sets allowable user style select options: (can be overriden with $SITE['CSSsettings_mode'])
$settings_mode = 1; # user can select style and widescreen (show style select and screen width select)
//$settings_mode = 2; # user can select styles only (hide screen width select)
//$settings_mode = 3; # user can select screen width only (hide style select)
#################
# end settings
# ##############
  include_once("Settings.php");
  include_once("common.php");
  global $SITE, $LANGLOOKUP;
if (isset($SITE['CSSsettings_mode']) && $SITE['CSSsettings_mode'] > 0 && $SITE['CSSsettings_mode'] < 4) {
  $settings_mode = $SITE['CSSsettings_mode'];
function print_css_style_menu ($menubar = 0, $output = 'echo') {
  global $SITE, $LANGLOOKUP;
$string = '';
/* ###
  # this function makes the form input html so a user can select a style
  # it can be called in menubar.php or on index.php
  # when using on on menubar.php, you can have it print narrow on a few lines this:
  #<div style="margin-left: 5px">
  #<?php print_css_style_menu(1); ?>
  #</div>
  # when using on on index.php, you can have it print horizontal on one line like this:
  #<?php print_css_style_menu(0); ?>
*/ ###
  global $CSSstyles, $use_onchange_submit, $settings_mode;
$CSSstyle = '';
# was there a style selected from the form input
if (isset($_POST['CSSstyle']) && preg_match("/^[a-z0-9-]{1,50}.css$/i", $_POST['CSSstyle'])) {
     $CSSstyle = $_POST['CSSstyle'];
} else if (isset($_SESSION['CSSstyle'])) {
     $CSSstyle = $_SESSION['CSSstyle'];
# was use widescreen template selected from the form input?
$CSSwscreenOnChecked = '';
$CSSwscreenOffChecked = '';
if (isset($_SESSION['CSSwidescreen']) && $_SESSION['CSSwidescreen'] == 1) {
    $CSSwscreenOnChecked = ' checked="checked"';
} else if (isset($_SESSION['CSSwidescreen']) && $_SESSION['CSSwidescreen'] == 0) {
    $CSSwscreenOffChecked = ' checked="checked"';
} else {
    $CSSwscreenOffChecked = ' checked="checked"';
$string .= '<p class="sideBarTitle" style="margin-left: -5px;">'. langtransstr('Style Options') .'</p>';
$string .= '
<form method="post" name="style_select" action="#">
<p>';
if ($settings_mode != 3) {  // style settings allowed
	$string .= '<label for="CSSstyle">'.langtransstr('Style').':</label>';
	if ($menubar) $string .= '<br />';
	if($use_onchange_submit == false) {
	$string .= '
	 <select id="CSSstyle" name="CSSstyle">';
	else {
	$string .= '
	<select id="CSSstyle" name="CSSstyle" onchange="this.form.submit();">';
	$CSSstyleSelected = '';
	foreach ($CSSstyles as $k => $v) {
	 if ($CSSstyle == "$k") $CSSstyleSelected = ' selected="selected"';
	$string .= '<option value="'.$k.'"'.$CSSstyleSelected.'>'.langtransstr($v).'</option>'."\n";
	 $CSSstyleSelected = '';
	$string .= '</select>';
	if ($menubar) {
		   $string .= '<br />';
	}else{
		   $string .= ' &nbsp;&nbsp; ';
		   if($use_onchange_submit == false) {
			  $string .= '<input type="submit" name="' . langtransstr('Set') .'" value="' . langtransstr('Set') .'" />';
		   }
	if (!$menubar) {
		   $string .= ' &nbsp;&nbsp; ';
if ($settings_mode != 2) {  // screen width settings allowed
	$string .= langtransstr('Widescreen') . ':';
	if ($menubar) {
		   $string .= '<br />';
	}else{
		   $string .= ' ';
	if($use_onchange_submit == true) {
	$string .= '<label for="CSSwidescreenOn">'.langtransstr('On').'</label> <input type="radio" id="CSSwidescreenOn" name="CSSwidescreen" value="1" '.$CSSwscreenOnChecked.' onchange="this.form.submit();" />
	| <label for="CSSwidescreenOff">'.langtransstr('Off').'</label> <input type="radio" id="CSSwidescreenOff" name="CSSwidescreen" value="0" '.$CSSwscreenOffChecked.' onchange="this.form.submit();" />';
	else {
	$string .= '<label for="CSSwidescreenOn">'.langtransstr('On').'</label> <input type="radio" id="CSSwidescreenOn" name="CSSwidescreen" value="1" '.$CSSwscreenOnChecked.' />
	| <label for="CSSwidescreenOff">'.langtransstr('Off').'</label> <input type="radio" id="CSSwidescreenOff" name="CSSwidescreen" value="0" '.$CSSwscreenOffChecked.' />';
if ($menubar) {
       $string .= '<br />';
}else{
       $string .= ' &nbsp;&nbsp; ';
if($use_onchange_submit == false) {
  $string .= '<input type="submit" name="' . langtransstr('Set') .'" value="' . langtransstr('Set') .'" />';
$string .= '</p>
</form>';
# can be printed right where you call it or loaded into a string for later print
# $menubottom .= print_css_style_menu(1,'string');
# print_css_style_menu(1);
if ($output == 'echo') {
         echo $string;
} else {
         return $string;
 # uncomment only for debugging
// echo '<p><b>COOKIE INFO:</b><br>';
// print_r($_COOKIE).'</p>';
// echo '<hr>';
// echo '<p><b>SESSION INFO:</b><br>';
// print_r($_SESSION).'</p>';
// echo '<p>Style choice ' .$SITE['CSSscreen'] .'</p>';
function validate_style_choice() {
   # this function sets the working style based on user's input or not
   # input can come from post, cookie, or session
   global $CSSstyles, $SITE, $use_cookies, $settings_mode;
  $wide_style = 0;
  $narrow_style = 0;
  $CSSstyle = '';
  // incase site admin sets up $SITE['CSSscreenDefault'] wrong
  $SITE['CSSscreenDefault'] = str_replace ('-narrow','',$SITE['CSSscreenDefault']);
  $SITE['CSSscreenDefault'] = str_replace ('-wide','',$SITE['CSSscreenDefault']);
  if ($settings_mode == 2) { // user can select styles only (screen width will be $SITE['CSSscreenDefault'])
    if ($SITE['CSSwideOrNarrowDefault'] == 'wide') {
            $_SESSION['CSSwidescreen'] = 1;
            $wide_style = 1;
    }else {
            $_SESSION['CSSwidescreen'] = 0;
            $narrow_style = 1;
    }
  # is there a CSSstyle selection from the post, cookie, or session?
  if (isset($_POST['CSSstyle']) && preg_match("/^[a-z0-9-]{1,50}.css$/i", $_POST['CSSstyle'])) {
       $CSSstyle = $_POST['CSSstyle'];
  else if ($use_cookies == true && isset($_COOKIE['CSSstyle'])) {
       $_SESSION['CSSstyle'] = $_COOKIE['CSSstyle'];
       $CSSstyle = $_COOKIE['CSSstyle'];
  else if (isset($_SESSION['CSSstyle'])) {
       $CSSstyle = $_SESSION['CSSstyle'];
  if ($settings_mode == 3) { // widescreen on off only (user cannot select styles)
       $_SESSION['CSSstyle'] = $SITE['CSSscreenDefault'];
       $CSSstyle = $SITE['CSSscreenDefault'];
  # was use CSSwidescreen template selected from the form post?
  if (isset($_POST['CSSwidescreen']) && $_POST['CSSwidescreen'] == 1) {
       if ($use_cookies == true) set_style_cookie ('CSSwidescreen', '1');
       $_SESSION['CSSwidescreen'] = 1;
       $wide_style = 1;
  # was use CSSwidescreen template unselected from the form post?
  else if (isset($_POST['CSSwidescreen']) && $_POST['CSSwidescreen'] == 0) {
       if ($use_cookies == true) set_style_cookie ('CSSwidescreen', '0');
       $_SESSION['CSSwidescreen'] = 0;
       $narrow_style = 1;
  //  fixed bug (default widescreen not being set)
  if (isset($_SESSION['CSSwidescreen']) && $_SESSION['CSSwidescreen'] == 1) {
       $wide_style = 1;
  # was use CSSwidescreen template selected from a stored cookie?
  if ($wide_style == 0 && $narrow_style == 0 && $use_cookies == true && isset($_COOKIE['CSSwidescreen']) && $_COOKIE['CSSwidescreen'] == 1) {
       if ($use_cookies == true) set_style_cookie ('CSSwidescreen', '1');
       $_SESSION['CSSwidescreen'] = 1;
       $wide_style = 1;
  # was use CSSwidescreen template unselected from a stored cookie?
  if ($wide_style == 0 && $narrow_style == 0 && $use_cookies == true && isset($_COOKIE['CSSwidescreen']) && $_COOKIE['CSSwidescreen'] == 0) {
       if ($use_cookies == true) set_style_cookie ('CSSwidescreen', '0');
       $_SESSION['CSSwidescreen'] = 0;
  # is the seletcted template or one in session one we really have?
  if ($CSSstyle != '') {
       foreach ($CSSstyles as $k => $v) {
          if ($CSSstyle == "$k")  {
              $_SESSION['CSSstyle'] = $k;
              if ($use_cookies == true) {
                  set_style_cookie ('CSSstyle', $k);
                  set_style_cookie ('CSSwidescreen' , $wide_style);
              }
              if (isset($_SESSION['CSSwidescreen']) && $_SESSION['CSSwidescreen'] == 1) {
                      $CSSstyle = str_replace ('.css','-wide.css',$k);
              } else {
                      $CSSstyle = str_replace ('.css','-narrow.css',$k);
              }
              return $CSSstyle;
          }
       }
  }else{
       # nothing was matched, show default, no set cookie
       $_SESSION['CSSstyle'] = $SITE['CSSscreenDefault'];
       if ($SITE['CSSwideOrNarrowDefault'] == 'wide') {
               $_SESSION['CSSwidescreen'] = 1;
               $CSSstyle = str_replace ('.css','-wide.css',$SITE['CSSscreenDefault']);
       } else {
               $_SESSION['CSSwidescreen'] = 0;
               $CSSstyle = str_replace ('.css','-narrow.css',$SITE['CSSscreenDefault']);
       }
       return $CSSstyle;
function set_style_cookie ($name, $val) {
   global $SITE;
   # this function sets a cookie
   # set expiration date 6 months ahead
   $expire = strtotime("+6 month");
   if ( isset($SITE['cookie_path']) ) {
     $path = $SITE['cookie_path']; // this can be set in Settings.php
   } else {
     $scripturlparts = explode('/', $_SERVER['PHP_SELF']);
     $scriptfilename = $scripturlparts[count($scripturlparts)-1];
     $scripturl = preg_replace("/$scriptfilename$/i", '', $_SERVER['PHP_SELF']);
     $path = $scripturl;
   }
   setcookie("$name",$val,$expire,$path);
?><?php
############################################################################
# include-wxstatus.php
# Purpose: provide the stock checks for all supported weather software
#   Please DO NOT CHANGE this file .. add your custom checks to wxstatus.php instead
#   That will make it easy to just replace this file as new weather software 
#   is supported.
# Version - 1.00 - 20-Nov-2011 - initial release - bulk of wx software checks moved from wxstatus.php to here
# Version - 1.01 - 21-Nov-2011 - add check for Cumulus NOAA report (per Beau n9mfk9 ) and WD NOAA+month reports + some ML fixes
# Version - 1.02 - 14-Jan-2012 - add support for WeatherSnoop
# Version - 1.03 - 22-Jan-2012 - fix support for dd.mm.yy format dates in tags
# Version - 1.04 - 24-Mar-2011 - add support for WeatherCat
# Version - 1.05 - 20-Jul-2014 - add support for WeatherSnoop V3
############################################################################
$WXSIVer = 'include-wxstatus.php - V1.05 - 20-Jul-2014';
//--self downloader --
if(isset($_REQUEST['sce']) and strtolower($_REQUEST['sce']) == 'view') {
   $filenameReal = __FILE__;
   $download_size = filesize($filenameReal);
   header('Pragma: public');
   header('Cache-Control: private');
   header('Cache-Control: no-cache, must-revalidate');
   header("Content-type: text/plain");
   header("Accept-Ranges: bytes");
   header("Content-Length: $download_size");
   header('Connection: close');
   readfile($filenameReal);
   exit;
print "<!-- $WXSIVer -->\n";
// Standard checks for weather software updates
// check the appropriate realtime file first
  if($SITE['WXsoftware'] == 'WD' and isset($SITE['clientrawfile'])) {
	do_check($SITE['WXsoftwareLongName']." ".langtransstr("realtime"),$SITE['clientrawfile'],15,'file');
  if($SITE['WXsoftware'] == 'MH' and isset($SITE['clientrawFile'])) {
	do_check($SITE['WXsoftwareLongName']." ".langtransstr("realtime"),$SITE['clientrawFile'],60+30,'file');
  if($SITE['WXsoftware'] == 'VWS' and isset($SITE['wflashdir'])) {
	do_check($SITE['WXsoftwareLongName']." ".langtransstr("realtime"),$SITE['wflashdir'].'wflash.txt',15,'file');
  if($SITE['WXsoftware'] == 'VWS' and isset($SITE['wflashdir'])) {
	do_check($SITE['WXsoftwareLongName']." ".langtransstr("realtime").' 2',$SITE['wflashdir'].'wflash2.txt',60+15,'file');
  if($SITE['WXsoftware'] == 'CU' and isset($SITE['realtimefile'])) {
	do_check($SITE['WXsoftwareLongName']." ".langtransstr("realtime"),$SITE['realtimefile'],15,'file');
  if($SITE['WXsoftware'] == 'WL' and isset($SITE['WLrealtime'])) {
	do_check($SITE['WXsoftwareLongName']." ".langtransstr("realtime"),$SITE['WLrealtime'],90,'file');  // weatherlink updates at 90 second intervals
  if($SITE['WXsoftware'] == 'WCT' and isset($SITE['WCTrealtime'])) {
	do_check($SITE['WXsoftwareLongName']." ".langtransstr("realtime"),$SITE['WCTrealtime'],90,'file');  // weatherlink updates at 90 second intervals
  // check the weather tags themselves
  if($SITE['WXsoftware'] == 'WSN') { // Only WeatherSnoop does not upload the WXtags file 
    do_check($SITE['WXsoftwareLongName']." ".langtransstr("FTP"),'weather.json',60*5+15,'file');
  } else {
    do_check($SITE['WXsoftwareLongName']." ".langtransstr("FTP"),$SITE['WXtags'],60*5+15,'file'); 
  // check the internal date of the tags file
  $chkdate = fixup_date($date) . ' ' . fixup_time($time); // handle all formats to make standard
  print "<!-- ".$SITE['WXtags']." internal update date time='$date $time' fixed='$chkdate' -->\n";
  do_check($SITE['WXsoftwareLongName']." ".langtransstr("weather data"),strtotime($chkdate),60*5+15,'application');
  // checks for optional NOAA-style report updates
  if($SITE['WXsoftware'] == 'CU' and isset($WX['LatestNOAAMonthlyReport']) and 
		file_exists($SITE['NOAAdir'].$WX['LatestNOAAMonthlyReport'])) {
	do_check($SITE['WXsoftwareLongName']." ".langtransstr("NOAA report"),
	  $SITE['NOAAdir'].$WX['LatestNOAAMonthlyReport'],24*60*60+10*60,'file');
  if($SITE['WXsoftware'] == 'VWS' and file_exists($SITE['NOAAdir'].'noaamo.txt')) {
	do_check($SITE['WXsoftwareLongName']." ".langtransstr("NOAA report"),
	  $SITE['NOAAdir'].'noaamo.txt',60*65+15,'file');
  if($SITE['WXsoftware'] == 'WD' and 
		file_exists($SITE['HistoryFilesDir'].'dailynoaareport.htm')) {
	do_check($SITE['WXsoftwareLongName']." ".langtransstr("NOAA report"),
	  $SITE['HistoryFilesDir'].'dailynoaareport.htm',24*60*60+15*60,'file');
  $MYYYYfile = date('FY') . '.htm'; // generates the <Monthname><YYYY>.htm filename used by WD
  if($SITE['WXsoftware'] == 'WD' and file_exists($SITE['HistoryFilesDir'].$MYYYYfile)) {
	do_check($SITE['WXsoftwareLongName']." ".langtransstr("Month report"),
	  $SITE['HistoryFilesDir'].$MYYYYfile,24*60*60+15*60,'file');
  if($SITE['WXsoftware'] == 'WL' and file_exists($SITE['NOAACurDir'].'NOAAMO.TXT')) {
	do_check($SITE['WXsoftwareLongName']." ".langtransstr("NOAA report"),
	  $SITE['NOAACurDir'].'NOAAMO.TXT',60*5+15,'file');
  // check for optional GR3 radar images (USA)
  if(isset($SITE['GR3DIR'])) {
	if (! isset($_SERVER['DOCUMENT_ROOT'] ) ) {
	   $path_trans = str_replace( '\\\\', '/', $_SERVER['PATH_TRANSLATED']);
	   $SELF = $_SERVER['PHP_SELF'];
	   $WEBROOT = substr($path_trans, 0, strlen($path_trans)-strlen($SELF) );
	} else {
	   $WEBROOT        = $_SERVER['DOCUMENT_ROOT'];
	$path = realpath($WEBROOT . $SITE['GR3DIR'] . '/' ) . '/';
	$GR3file = $path . $SITE['GR3radar'] . "_" . $SITE['GR3type'] . "_0." . $SITE['GR3img'];
	print "<!-- GR3='$GR3file' -->\n";
	if(file_exists($GR3file)) {
		if(file_exists("radar-status.php")) { // add radar status check if available
		   echo "	<tr>\n";
		   echo "	  <td colspan=\"4\">\n";
		   include_once("radar-status.php");
		   echo "</td>\n";
		   echo "	</tr>\n";
	   do_check(langtransstr("GRLevel3 Radar FTP"),$GR3file,60*10+15,'file');
  } // end GR3 checking
  // check for optional WXSIM forecast
  if(isset($SITE['WXSIM']) and file_exists('plaintext.txt')) {
	 $doPrint = false;
	 include_once($SITE['WXSIMscript']);
	 print "<!-- wdate='$wdate' -->\n";
	 $lastWXSIM = strtotime($wdate);
	 // note: '6*60*60 + 2*60' is 6:02:00 hms
	 do_check(langtransstr("WXSIM forecast"),$lastWXSIM,6*60*60 + 2*60,'application');
  // check for optional Boltek/Nexstorm files
  $nxDir = './';
  if(isset($SITE['nexstormDir'])) {$nxDir = $SITE['nexstormDir']; }
  if(file_exists($nxDir.'nexstorm.jpg')) {
	 do_check(langtransstr("Nexstorm Lightning map"),$nxDir.'nexstorm.jpg',10*60+15,'file');
  if(file_exists($nxDir.'TRACReport.txt')) {
	 do_check(langtransstr("Nexstorm TRACreport"),$nxDir.'TRACReport.txt',10*60+15,'file');
  if(file_exists($nxDir.'nexstorm_arc.dat')) {
	 do_check(langtransstr("Nexstorm Data file"),$nxDir.'nexstorm_arc.dat',10*60+15,'file');
print "<!-- end include-wxstatus.php -->\n";
// Functions used on this page
function do_check($title, $fileOrAppTime,$maxFileSecs,$type='file') {
	if(preg_match('/file/i',$type)) {
	   $cur_status = do_check_file($fileOrAppTime,$maxFileSecs);
	} else {
	   $cur_status = do_check_applic($fileOrAppTime,$maxFileSecs);
	 list($stat,$age,$data) = explode("\t",$cur_status);
echo "    <tr>
      <td>$title</td>
      <td align=\"center\">$stat</td>
      <td align=\"right\">$age</td>
      <td align=\"right\">$data</td>
    </tr>\n";
// check time on a file for last update
function do_check_file($chkfile,$maxFileSecs) {
  global $SITE;
  $timeFormat = $SITE['timeFormat']; 
  $now = time();
  if (file_exists($chkfile)) {
    $age = $now - filemtime($chkfile);
	$updateTime = date($timeFormat,filemtime($chkfile));
  } else {
    $age = 'unknown';
	$updateTime = 'file not found';
  $status = '';
  $hms = sec2hms($age);
  print "<!-- $chkfile age = $age secs. $hms -->\n";
  $age = $hms;
  if (file_exists($chkfile) and (filemtime($chkfile) + $maxFileSecs > $now) ) {     // stale file
    $status = "<span style=\"color: green\"><b>".langtransstr('Current')."</b></span>\t$age\t$updateTime ";
  } else {
    $status = "<span style=\"color: red\"><b>".langtransstr('NOT Current')."</b></span>\t$age\t > " . sec2hms($maxFileSecs) ."<br/><b>$updateTime</b>";
  return($status);
// check time on an application returned update time
function do_check_applic($applTime,$maxFileSecs) {
  global $SITE;
  $timeFormat = $SITE['timeFormat']; 
  $now = time();
    $age = $now - $applTime;
	$updateTime = date($timeFormat,$applTime);
  $status = '';
  $hms = sec2hms($age);
  print "<!-- age = $age secs. $hms -->\n";
  $age=$hms;
  if ($applTime + $maxFileSecs > $now ) {     // stale file
    $status = "<span style=\"color: green\"><b>".langtransstr('Current')."</b></span>\t$age\t$updateTime ";
  } else {
    $status = "<span style=\"color: red\"><b>".langtransstr('NOT Current')."</b></span>\t$age\t > " . sec2hms($maxFileSecs) . " <br/><b>$updateTime</b>";
  return($status);
  function sec2hms ($sec, $padHours = false) 
    // holds formatted string
    $hms = "";
    if (! is_numeric($sec)) { return($sec); }
    // there are 3600 seconds in an hour, so if we
    // divide total seconds by 3600 and throw away
    // the remainder, we've got the number of hours
    $hours = intval(intval($sec) / 3600); 
    // add to $hms, with a leading 0 if asked for
    $hms .= ($padHours) 
          ? str_pad($hours, 2, "0", STR_PAD_LEFT). ':'
          : $hours. ':';
     
    // dividing the total seconds by 60 will give us
    // the number of minutes, but we're interested in 
    // minutes past the hour: to get that, we need to 
    // divide by 60 again and keep the remainder
    $minutes = intval(($sec / 60) % 60); 
    // then add to $hms (with a leading 0 if needed)
    $hms .= str_pad($minutes, 2, "0", STR_PAD_LEFT). ':';
    // seconds are simple - just divide the total
    // seconds by 60 and keep the remainder
    $seconds = intval($sec % 60); 
    // add to $hms, again with a leading 0 if needed
    $hms .= str_pad($seconds, 2, "0", STR_PAD_LEFT);
    // done!
    return $hms;
    
//=========================================================================
// change the hh:mm AM/PM to h:mmam/pm format
function fixup_time ( $WDtime ) {
  global $timeOnlyFormat,$DebugMode;
  if ($WDtime == "00:00: AM") { return ''; }
  $t = explode(':',$WDtime);
  if (preg_match('/p/i',$WDtime)) { $t[0] = $t[0] + 12; }
  if ($t[0] > 23) {$t[0] = 12; }
  if (preg_match('/^12.*a/i',$WDtime)) { $t[0] = 0; }
  $t2 = join(':',$t); // put time back to gether;
  $t2 = preg_replace('/[^\d\:]/is','',$t2); // strip out the am/pm if any
  return ($t2);
//=========================================================================
// adjust date to standard format
function fixup_date ($WDdate) {
  global $SITE;
  $d = explode('/',$WDdate);
  if(!isset($d[2])) {$d=explode("-",$WDdate); }
  if(!isset($d[2])) {$d=explode(".",$WDdate); }
  if ($d[2] > 70 and $d[2] <= 99) {$d[2] += 1900;} // 2 digit dates 70-99 are 1970-1999
  if ($d[2] < 99) {$d[2] += 2000; } // 2 digit dates (left) are assumed 20xx dates.
  if ($SITE['WDdateMDY']) {
    $new = sprintf('%04d-%02d-%02d',$d[2],$d[0],$d[1]); //  M/D/YYYY -> YYYY-MM-DD
  } else {
    $new = sprintf('%04d-%02d-%02d',$d[2],$d[1],$d[0]); // D/M/YYYY -> YYYY-MM-DD
  return($new);
// end of functions
<?php
 File: MB-defs.php
 Purpose: provide a bridge to naming of weather variables from the native Meteobridge software package to
          Weather-Display names used in common scripts like ajax-dashboard.php and ajax-gizmo.php
 Author: Ken True - webmaster@saratoga-weather.org
 (created by gen-defs.php - V1.09 - 02-Mar-2013)
 Generated on 2013-03-02 11:03:58 PST
//Version MB-defs.php - V1.00 - 08-Mar-2013
//Version MB-defs.php - V1.01 - 09-Mar-2013 - fixes for stations w/o solar and/or UV sensors
//Version MB-defs.php - V1.02 - 17-Mar-2013 - added processing for new Meteobridge system variables
//Version MB-defs.php - V1.03 - 19-Aug-2013 - added Davis forecast text support Meteobridge 1.8(2198)+
//Version MB-defs.php - V1.04 - 08-Feb-2014 - corrected $yearrn to use rain0rain-yearsum variable
// --------------------------------------------------------------------------
// allow viewing of generated source
if (isset($_REQUEST["sce"]) and strtolower($_REQUEST["sce"]) == "view" ) {
//--self downloader --
   $filenameReal = __FILE__;
   $download_size = filesize($filenameReal);
   header("Pragma: public");
   header("Cache-Control: private");
   header("Cache-Control: no-cache, must-revalidate");
   header("Content-type: text/plain");
   header("Accept-Ranges: bytes");
   header("Content-Length: $download_size");
   header("Connection: close");
   readfile($filenameReal);
   exit;
$WXsoftware = 'MB';  
// this has WD $varnames = $WX['MB-varnames']; equivalents
$uomtemp = $WX['uomTemp'];
$uombaro = $WX['uomBaro'];
$uomwind = $WX['uomWind'];
$uomrain = $WX['uomRain'];
$time = $WX['time'];
$date = $WX['date'];
$temperature = $WX['th0temp-act'];
$tempnodp  = round($temperature,0); // calculated value
$humidity = $WX['th0hum-act'];
$dewpt = $WX['th0dew-act'];
$maxtemp = $WX['th0temp-dmax'];
$mintemp = $WX['th0temp-dmin'];
$windch = $WX['wind0chill-act'];
$windchnodp  = round($windch,0); // calculated value
$maxtempyest = $WX['th0temp-ydmax'];
$mintempyest = $WX['th0temp-ydmin'];
$avgspd = $WX['wind0avgwind-act'];
$gstspd = $WX['wind0wind-hmax'];
$maxgst = $WX['wind0wind-dmax'];
$maxgsthr = $WX['wind0wind-hmax'];
$dirdeg = $WX['wind0dir-act'];
$dirlabel  = MB_deg2dir($dirdeg); // calculated value
$baro = $WX['thb0seapress-act'];
$dayrn = $WX['rain0total-daysum'];
$monthrn = $WX['rain0total-monthsum'];
$yearrn = $WX['rain0total-yearsum'];
$currentrainratehr = $WX['rain0rate-act'];
$maxrainrate = $WX['rain0rate-dmax'];
$maxrainratehr = $WX['rain0rate-hmax'];
$yesterdayrain = $WX['rain0total-ydaysum'];
$mrecordwindgust = $WX['wind0wind-mmax'];
$highbaro = $WX['thb0seapress-dmax'];
$hourrn = $WX['rain0total-sum60'];
$minchillyest = $WX['wind0chill-ydmin'];
$minwindch = $WX['wind0chill-dmin'];
// end of generation script
// manual adds
if(MB_isData('mbsystem-swversion')) {
  $wdversiononly = $WX['mbsystem-swversion'];
  $wdbuild = (MB_isData('mbsystem-buildnum'))?$WX['mbsystem-buildnum']:'n/a';
  $wdplatform = (MB_isData('mbsystem-platform'))?$WX['mbsystem-platform']:'';
  $wdversion = $WX['mbsystem-swversion'] . ' build '.$wdbuild. ' '. $wdplatform;	
$heatidx = MB_calcHeatIndex($temperature,$humidity,$uomtemp);
if(MB_isData('sol0rad-act')) { 
 $VPsolar = $WX['sol0rad-act'];
 $highsolaryest = $WX['sol0rad-ydmax'];
 $highsolar = $WX['sol0rad-dmax']; // fix this one! max instead of min
if(MB_isData('sol0rad-dmaxtime')) {$highsolartime = MB_timeOnly($WX['sol0rad-dmaxtime']);} 
if(MB_isData('sol0rad-ydmaxtime')) {$highsolaryesttime = MB_timeOnly($WX['sol0rad-ydmaxtime']);}
if(MB_isData('uv0index-act')) {
  $VPuv = $WX['uv0index-act'];
  $highuv = $WX['uv0index-dmax'];
  $highuvyest = $WX['uv0index-ydmax'];
if(MB_isData('uv0index-dmaxtime')) {$highuvtime = MB_timeOnly($WX['uv0index-dmaxtime']);}
if(MB_isData('uv0index-ydmaxtime')) {$highuvyesttime = MB_timeOnly($WX['uv0index-ydmaxtime']);}
if(MB_isData('th0temp-dmaxtime')) {$maxtempt = MB_timeOnly($WX['th0temp-dmaxtime']);}
if(MB_isData('th0temp-dmintime')) {$mintempt = MB_timeOnly($WX['th0temp-dmintime']);}
if(MB_isData('th0temp-ydmaxtime')) {$maxtempyestt = MB_timeOnly($WX['th0temp-ydmaxtime']);}
if(MB_isData('th0temp-ydmintime')) {$mintempyestt = MB_timeOnly($WX['th0temp-ydmintime']);}
if(MB_isData('wind0chill-dmintime')) {$minwindcht = MB_timeOnly($WX['wind0chill-dmintime']);}
if(MB_isData('wind0wind-mmaxtime')) {$mrecordwindgustt = MB_timeOnly($WX['wind0wind-mmaxtime']);}
if(MB_isData('thb0seapress-dmaxtime')) {$highbarot = MB_timeOnly($WX['thb0seapress-dmaxtime']);}
// change last hour
if(MB_isData('th0temp-val60')) {
	$tempchangehour = $WX['th0temp-act']-$WX['th0temp-val60'];
if(MB_isData('th0hum-val60')) {
	$humchangelasthour = $WX['th0hum-act']-$WX['th0hum-val60'];
if(MB_isData('th0dew-val60')) {
	$dewchangelasthour = $WX['th0dew-act']-$WX['th0dew-val60'];
if(MB_isData('thb0seapress-val60')) {
	$trend = $WX['thb0seapress-act']-$WX['thb0seapress-val60'];
	$pressuretrendname = MB_get_barotrend_text($trend,$uombaro);
} else {
	$pressuretrendname = '--';
$lowbaro = $WX['thb0seapress-dmin'];
$lowbarot = MB_timeOnly($WX['thb0seapress-dmintime']);
$maxgstdirectionletter = ' '; // not collected data
$maxgstt = MB_timeOnly($WX['wind0wind-dmaxtime']);
// trends info
$temp0minuteago = $WX['th0temp-act'];
$wind0minuteago = $WX['wind0avgwind-act'];
$dir0minuteago =  MB_deg2dir($WX['wind0dir-act']);
$hum0minuteago =  $WX['th0hum-act'];
$dew0minuteago =  $WX['th0dew-act'];
$baro0minuteago = $WX['thb0seapress-act'];
$rain0minuteago = $WX['rain0total-daysum'];
$rainDP = ( preg_match('|mm|i',$uomrain) )?'%01.1F':'%01.2F';
if ( MB_isdata('th0temp-val5') ) { // only set if the variable has valid data
  $temp5minuteago = $WX['th0temp-val5'];
  $wind5minuteago = $WX['wind0avgwind-val5'];
  $dir5minuteago =  MB_deg2dir($WX['wind0dir-val5']);
  $hum5minuteago =  $WX['th0hum-val5'];
  $dew5minuteago =  $WX['th0dew-val5'];
  $baro5minuteago = $WX['thb0seapress-val5'];
  $rain5minuteago = sprintf($rainDP,$WX['rain0total-val5']-$WX['rain0total-ydmin']); // should be dmax!
if ( MB_isdata('th0temp-val10') ) { // only set if the variable has valid data
  $temp10minuteago = $WX['th0temp-val10'];
  $wind10minuteago = $WX['wind0avgwind-val10'];
  $dir10minuteago =  MB_deg2dir($WX['wind0dir-val10']);
  $hum10minuteago =  $WX['th0hum-val10'];
  $dew10minuteago =  $WX['th0dew-val10'];
  $baro10minuteago = $WX['thb0seapress-val10'];
  $rain10minuteago = sprintf($rainDP,$WX['rain0total-val10']-$WX['rain0total-ydmin']); // should be dmax!
if ( MB_isdata('th0temp-val15') ) { // only set if the variable has valid data
  $temp15minuteago = $WX['th0temp-val15'];
  $wind15minuteago = $WX['wind0avgwind-val15'];
  $dir15minuteago =  MB_deg2dir($WX['wind0dir-val15']);
  $hum15minuteago =  $WX['th0hum-val15'];
  $dew15minuteago =  $WX['th0dew-val15'];
  $baro15minuteago = $WX['thb0seapress-val15'];
  $rain15minuteago = sprintf($rainDP,$WX['rain0total-val15']-$WX['rain0total-ydmin']); // should be dmax!
if ( MB_isdata('th0temp-val30') ) { // only set if the variable has valid data
  $temp30minuteago = $WX['th0temp-val30'];
  $wind30minuteago = $WX['wind0avgwind-val30'];
  $dir30minuteago =  MB_deg2dir($WX['wind0dir-val30']);
  $hum30minuteago =  $WX['th0hum-val30'];
  $dew30minuteago =  $WX['th0dew-val30'];
  $baro30minuteago = $WX['thb0seapress-val30'];
  $rain30minuteago = sprintf($rainDP,$WX['rain0total-val30']-$WX['rain0total-ydmin']); // should be dmax!
if ( MB_isdata('th0temp-val60') ) { // only set if the variable has valid data
  $temp60minuteago = $WX['th0temp-val60'];
  $wind60minuteago = $WX['wind0avgwind-val60'];
  $dir60minuteago =  MB_deg2dir($WX['wind0dir-val60']);
  $hum60minuteago =  $WX['th0hum-val60'];
  $dew60minuteago =  $WX['th0dew-val60'];
  $baro60minuteago = $WX['thb0seapress-val60'];
  $rain60minuteago = sprintf($rainDP,$WX['rain0total-val60']-$WX['rain0total-ydmin']); // should be dmax!
$mrecordhighbaro = $WX['thb0seapress-mmax'];
$mrecordhighbaroday = substr($WX['thb0seapress-mmaxtime'],6,2);
$mrecordhighbaromonth = substr($WX['thb0seapress-mmaxtime'],4,2);
$mrecordhighbaroyear = substr($WX['thb0seapress-mmaxtime'],0,4);
$mrecordlowbaro = $WX['thb0seapress-mmin'];
$mrecordlowbaroday = substr($WX['thb0seapress-mmintime'],6,2);
$mrecordlowbaromonth = substr($WX['thb0seapress-mmintime'],4,2);
$mrecordlowbaroyear = substr($WX['thb0seapress-mmintime'],0,4);
$mrecordhightemp = $WX['th0temp-mmax'];
$mrecordhightempday = substr($WX['th0temp-mmaxtime'],6,2);
$mrecordhightempmonth = substr($WX['th0temp-mmaxtime'],4,2);
$mrecordhightempyear = substr($WX['th0temp-mmaxtime'],0,4);
$mrecordlowtemp = $WX['th0temp-mmin'];
$mrecordlowtempday = substr($WX['th0temp-mmintime'],6,2);
$mrecordlowtempmonth = substr($WX['th0temp-mmintime'],4,2);
$mrecordlowtempyear = substr($WX['th0temp-mmintime'],0,4);
$mrecordlowchill = $WX['wind0chill-mmin'];
$mrecordlowchillday = substr($WX['wind0chill-mmintime'],6,2);
$mrecordlowchillmonth = substr($WX['wind0chill-mmintime'],4,2);
$mrecordlowchillyear = substr($WX['wind0chill-mmintime'],0,4);
$mrecordhighgust = $WX['wind0wind-mmax'];
$mrecordhighgustday = substr($WX['wind0wind-mmaxtime'],6,2);
$mrecordhighgustmonth = substr($WX['wind0wind-mmaxtime'],4,2);
$mrecordhighgustyear = substr($WX['wind0wind-mmaxtime'],0,4);
$yrecordhighbaro = $WX['thb0seapress-ymax'];
$yrecordhighbaroday = substr($WX['thb0seapress-ymaxtime'],6,2);
$yrecordhighbaromonth = substr($WX['thb0seapress-ymaxtime'],4,2);
$yrecordhighbaroyear = substr($WX['thb0seapress-ymaxtime'],0,4);
$yrecordlowbaro = $WX['thb0seapress-ymin'];
$yrecordlowbaroday = substr($WX['thb0seapress-ymintime'],6,2);
$yrecordlowbaromonth = substr($WX['thb0seapress-ymintime'],4,2);
$yrecordlowbaroyear = substr($WX['thb0seapress-ymintime'],0,4);
$yrecordhightemp = $WX['th0temp-ymax'];
$yrecordhightempday = substr($WX['th0temp-ymaxtime'],6,2);
$yrecordhightempmonth = substr($WX['th0temp-ymaxtime'],4,2);
$yrecordhightempyear = substr($WX['th0temp-ymaxtime'],0,4);
$yrecordlowtemp = $WX['th0temp-ymin'];
$yrecordlowtempday = substr($WX['th0temp-ymintime'],6,2);
$yrecordlowtempmonth = substr($WX['th0temp-ymintime'],4,2);
$yrecordlowtempyear = substr($WX['th0temp-ymintime'],0,4);
$yrecordlowchill = $WX['wind0chill-ymin'];
$yrecordlowchillday = substr($WX['wind0chill-ymintime'],6,2);
$yrecordlowchillmonth = substr($WX['wind0chill-ymintime'],4,2);
$yrecordlowchillyear = substr($WX['wind0chill-ymintime'],0,4);
$yrecordwindgust = $WX['wind0wind-ymax'];
$yrecordhighgustday = substr($WX['wind0wind-ymaxtime'],6,2);
$yrecordhighgustmonth = substr($WX['wind0wind-ymaxtime'],4,2);
$yrecordhighgustyear = substr($WX['wind0wind-ymaxtime'],0,4);
if(isset($WX['forecast-text']) and $WX['forecast-text'] <> '') {
	$vpforecasttext = $WX['forecast-text'];
# MB unique functions included from MB-functions-inc.txt 
#-------------------------------------------------------------------------------------
# function processed WD variables
#-------------------------------------------------------------------------------------
global $SITE;
$SITE['commaDecimal'] = strpos($temperature,',') !==false?true:false; // using comma for decimal point?
if(!isset($SITE['WDdateMDY'])) {$WDdateMDY = false;} else {$WDdateMDY = $SITE['WDdateMDY'];}
if(isset($SITE['conditionsMETAR'])) { // override with METAR conditions for text and icon if requested.
	include_once("get-metar-conditions-inc.php");
	list($sunrise,$sunset) = MB_getSuntimes("$date $time",$SITE['latitude'],$SITE['longitude']);
	list($Currentsolardescription,$iconnumber) = mtr_conditions($SITE['conditionsMETAR'], $time, $sunrise, $sunset);
# generate the separate date/time variables by dissection of input date/time and format
list($date_year,$date_month,$date_day,$time_hour,$time_minute,$monthname,$dayname)
  = MB_setDateTimes($date,$time,$WDdateMDY);
$beaufortnum =  MB_beaufortNumber($avgspd,$uomwind);
$bftspeedtext = MB_beaufortText($beaufortnum);
list($chandler,$chandlertxt,$chandlerimg) = MB_CBI($temperature,$uomtemp,$humidity);
if(!isset($wdversion) and isset($SITE['WXsoftwareVersion'])) {$wdversion = $SITE['WXsoftwareVersion']; }
$humidex = MB_calcHumidex($temperature,$humidity,$uomtemp); // WD Sample= '61.6
list($feelslike,$heatcolourword) = MB_setFeelslike ($temperature,$windch,$humidex,$uomtemp);
$date = MB_dateOnly($date_year.$date_month.$date_day,$WDdateMDY); // convert YYYYMMDD to DD/MM/YYYY or MM/DD/YYYY
#-------------------------------------------------------------------------------------
# MB support function - MB_getSuntimes($time,$stationlatitude,$stationlongitude);
#-------------------------------------------------------------------------------------
function MB_getSuntimes($stationtime,$stationlatitude,$stationlongitude) {
	$tstamp = strtotime($stationtime);
	if(function_exists('date_sun_info')) {
	  $info = date_sun_info($tstamp,$stationlatitude,$stationlongitude);
	  $t = $info['sunrise'] . ' ' . $info['sunset'];
	} else {
	  $t = 'n/a n/a';
	return(explode(' ',$t));
} // end MB_getSuntimes
#-------------------------------------------------------------------------------------
# MB support function - MB_isdata
#-------------------------------------------------------------------------------------
function MB_isdata( $variable ) {
  global $WX;
// see if $WX array has valid data contents
  if(isset($WX[$variable]) and $WX[$variable] !== '--') { return (true); } else { return (false); }	
#-------------------------------------------------------------------------------------
# MB support function - MB_calcHumidex
#-------------------------------------------------------------------------------------
function MB_calcHumidex ($temp,$humidity,$useunit) {
// Calculate Humidex from temperature and humidity
// Source of calculation: http://www.physlink.com/reference/weather.cfm	
  global $Debug,$WX;
  if(preg_match('|F|i',$WX['uomTemp'])) {
    $T= MB_convertTemp($temp,'C');
  } else {
	$T = $temp;
  $H = $humidity;
  $t=7.5*$T/(237.7+$T);
  $et=pow(10,$t);
  $e=6.112*$et*($H/100);
  $humidex=$T+(5/9)*($e-10);
  $Debug .= "<!-- calcHumidex T=$T C, H=$H calc=$humidex ";
  if ($humidex < $T) {
	 $humidex=$T;
     $Debug .= " set to T, ";
  if(preg_match('|F|i',$useunit)) {
     # convert to F
     $humidex = sprintf("%01.1f",round((1.8 * $humidex) + 32.0,1));	  
  $humidex = round($humidex,1);
  $Debug .= " humidex=$humidex $useunit -->\n"; 
  return($humidex);	
#-------------------------------------------------------------------------------------
# MB support function - MB_calcHeatIndex
#-------------------------------------------------------------------------------------
function MB_calcHeatIndex ($temp,$humidity,$useunit) {
// Calculate Heat Index from temperature and humidity
// Source of calculation: http://woody.cowpi.com/phpscripts/getwx.php.txt	
  global $Debug;
  if(preg_match('|C|i',$useunit)) {
    $tempF = round(1.8 * $temp + 32,1);
  } else {
	$tempF = round($temp,1);
  $rh = $humidity;
  // Calculate Heat Index based on temperature in F and relative humidity (65 = 65%)
  if ($tempF > 79 && $rh > 39) {
	  $hiF = -42.379 + 2.04901523 * $tempF + 10.14333127 * $rh - 0.22475541 * $tempF * $rh;
	  $hiF += -0.00683783 * pow($tempF, 2) - 0.05481717 * pow($rh, 2);
	  $hiF += 0.00122874 * pow($tempF, 2) * $rh + 0.00085282 * $tempF * pow($rh, 2);
	  $hiF += -0.00000199 * pow($tempF, 2) * pow($rh, 2);
	  $hiF = round($hiF,1);
	  $hiC = round(($hiF - 32) / 1.8,1);
  } else {
	  $hiF = $tempF;
	  $hiC = round(($hiF - 32) / 1.8,1);
  $Debug .= "<!-- MB_calcHeatIndex temp=$temp ($tempF F) C, rh=$rh calc=$hiF F, $hiC C ";
  if(preg_match('|F|i',$useunit)) {
     $heatIndex = $hiF;	  
  } else {
	 $heatIndex = $hiC;
  $Debug .= " heatIndex=$heatIndex $useunit -->\n"; 
  return($heatIndex);	
#-------------------------------------------------------------------------------------
# MB support function - MB_convertTemp
#-------------------------------------------------------------------------------------
function MB_convertTemp ($rawtemp,$useunit) {
	 $dpTemp = 1;
	 if(!is_numeric($rawtemp)) { return($rawtemp); } // no conversions for missing values
	 if (preg_match('|C|i',$useunit))  { // convert F to C
		return( sprintf("%01.${dpTemp}f",round(($rawtemp-32.0) / 1.8,$dpTemp)));
	 } else {  // leave as F
		return (sprintf("%01.${dpTemp}f", round($rawtemp*1.0,$dpTemp)));
#-------------------------------------------------------------------------------------
# MB support function - MB_timeOnly
#-------------------------------------------------------------------------------------
function MB_timeOnly ($indatetime) {
// Return HH:MM (24hr time format)
// expecting
// 0....+....1....+
// 20110622061003
// yyyymmddhhMMss
  return(substr($indatetime,8,2).':'.substr($indatetime,10,2));
#-------------------------------------------------------------------------------------
# MB support function - MB_dateOnly
#-------------------------------------------------------------------------------------
function MB_dateOnly ($indatetime,$MDY=true) {
// Return dd/mm/yyyy or mm/dd/yyyy
// expecting
// 0....+....1....+
// 20110622061003
// yyyymmddhhMMss
  if($MDY) {
    return(substr($indatetime,4,2).'/'.substr($indatetime,6,2).'/'.substr($indatetime,0,4));
  } else {
    return(substr($indatetime,6,2).'/'.substr($indatetime,4,2).'/'.substr($indatetime,0,4));
#-------------------------------------------------------------------------------------
# MB support function - MB_WDrecordDate
#-------------------------------------------------------------------------------------
function MB_WDrecordDate ($indatetime) {
// extract Y, M, D and return as array
// expecting
// 0....+....1....+
// 20110622061003
// yyyymmddhhMMss
  return(array(substr($indatetime,0,4),substr($indatetime,4,2),substr($indatetime,6,2)));
#-------------------------------------------------------------------------------------
# MB support function - MB_fixupTime
#-------------------------------------------------------------------------------------
function MB_fixupTime ($intime) {
  global $Debug;
  $tfixed = preg_replace('/^(\S+)\s+(\S+)$/is',"$2",$intime);
  $t = explode(':',$tfixed);
  if (preg_match('/p/i',$tfixed)) { $t[0] = $t[0] + 12; }
  if ($t[0] > 23) {$t[0] = 12; }
  if (preg_match('/^12.*a/i',$tfixed)) { $t[0] = 0; }
  if ($t[0] < '10') {$t[0] = sprintf("%02d",$t[0]); } // leading zero on hour.
  $t2 = join(':',$t); // put time back to gether;
  $t2 = preg_replace('/[^\d\:]/is','',$t2); // strip out the am/pm if any
  $Debug .= "<!-- MB_fixupTime in='$intime' tfixed='$tfixed' out='$t2' -->\n";
  return($t2);
} // end MB_fixupTime
#-------------------------------------------------------------------------------------
# MB support function - MB_setDateTimes
#-------------------------------------------------------------------------------------
function MB_setDateTimes ($indate,$intime,$MDYformat=true) {
// returns: $date_year,$date_month,$date_day,$time_hour,$time_minute,$date_month,$monthname,$dayname
  global $Debug;
  $Debug .= "<!-- MB_setDateTimes date='$indate' time=$intime' MDY=$MDYformat -->\n";
  $MBtime = strtotime("$indate $intime");
  $MBtime = date('Y m d H i F l',$MBtime);
  $Debug .= "<!-- MB_setDateTimes MBtime='$MBtime' values set -->\n";
  if(isset($_REQUEST['debug'])) {echo $Debug; } 
  return(explode(' ',$MBtime)); // results returned in array for list() assignment
} // end MB_setDateTimes
#-------------------------------------------------------------------------------------
# MB support function - MB_deg2dir - Convert wind direction degrees to cardinal name
#-------------------------------------------------------------------------------------
function MB_deg2dir ($degrees) {
   // figure out a text value for compass direction
// Given the wind direction, return the text label
// for that value.  16 point compass
   $winddir = $degrees;
   if ($winddir == "--") { return($winddir); }
  if (!isset($winddir)) {
    return "---";
  if (!is_numeric($winddir)) {
	return($winddir);
  $windlabel = array ("N","NNE", "NE", "ENE", "E", "ESE", "SE", "SSE", "S",
	 "SSW","SW", "WSW", "W", "WNW", "NW", "NNW");
  $dir = $windlabel[ fmod((($winddir + 11) / 22.5),16) ];
  return($dir);
} // end function MB_deg2dir
#-------------------------------------------------------------------------------------
# MB support function - MB_beaufortNumber
#-------------------------------------------------------------------------------------
function MB_beaufortNumber ($inWind,$usedunit) {
   global $Debug;
   $rawwind = $inWind;
// first convert all winds to knots
   if(strpos($inWind,',') !== false) {
	   $rawwind = preg_replace('|,|','.',$inWind);
   }
   $WINDkts = 0.0;
   if       (preg_match('/kts|knot/i',$usedunit)) {
	   $WINDkts = $rawwind * 1.0;
   } elseif (preg_match('/mph/i',$usedunit)) {
	   $WINDkts = $rawwind * 0.8689762;
   } elseif (preg_match('/mps|m\/s/i',$usedunit)) {
	   $WINDkts = $rawwind * 1.94384449;
   } elseif  (preg_match('/kmh|km\/h/i',$usedunit)) {
	   $WINDkts = $rawwind * 0.539956803;
   } else {
	   $Debug .= "<!-- MB_beaufortNumber .. unknown input unit '$usedunit' for wind=$rawwind -->\n";
	   $WINDkts = $rawwind * 1.0;
   }
// return a number for the beaufort scale based on wind in knots
  if ($WINDkts < 1 ) {return(0); }
  if ($WINDkts < 4 ) {return(1); }
  if ($WINDkts < 7 ) {return(2); }
  if ($WINDkts < 11 ) {return(3); }
  if ($WINDkts < 17 ) {return(4); }
  if ($WINDkts < 22 ) {return(5); }
  if ($WINDkts < 28 ) {return(6); }
  if ($WINDkts < 34 ) {return(7); }
  if ($WINDkts < 41 ) {return(8); }
  if ($WINDkts < 48 ) {return(9); }
  if ($WINDkts < 56 ) {return(10); }
  if ($WINDkts < 64 ) {return(11); }
  if ($WINDkts >= 64 ) {return(12); }
  return("0");
} // end MB_beaufortNumber
#-------------------------------------------------------------------------------------
# MB support function - MB_beaufortText
#-------------------------------------------------------------------------------------
function MB_beaufortText ($beaufortnumber) {
  $B = array( /* Beaufort 0 to 12 in English */
   "Calm", "Light air", "Light breeze", "Gentle breeze", "Moderate breeze", "Fresh breeze",
   "Strong breeze", "Near gale", "Gale", "Strong gale", "Storm",
   "Violent storm", "Hurricane"
  );
  if(isset($B[$beaufortnumber])) {
	return $B[$beaufortnumber];
  } else {
    return "Unknown $beaufortnumber Bft";
} // end MB_beaufortText
#-------------------------------------------------------------------------------------
# MB support function - MB_setFeelslike
#-------------------------------------------------------------------------------------
function MB_setFeelslike ($temp,$windchill,$heatindex,$tempUOM) {
global $Debug;
// establish the feelslike temperature and return a word describing how it feels
$HeatWords = array(
 'Unknown', 'Extreme Heat Danger', 'Heat Danger', 'Extreme Heat Caution', 'Extremely Hot', 'Uncomfortably Hot',
 'Hot', 'Warm', 'Comfortable', 'Cool', 'Cold', 'Uncomfortably Cold', 'Very Cold', 'Extreme Cold' );
// first convert all temperatures to Centigrade if need be
  $TC = $temp;
  $WC = $windchill;
  $HC = $heatindex;
  if(strpos($TC,',') !== false) {
	$TC = preg_replace('|,|','.',$temp);
	$WC = preg_replace('|,|','.',$windchill);
	$HC = preg_replace('|,|','.',$heatindex);
  if (preg_match('|F|i',$tempUOM))  { // convert F to C if need be
	 $TC = sprintf("%01.1f",round(($TC-32.0) / 1.8,1));
	 $WC = sprintf("%01.1f",round(($WC-32.0) / 1.8,1));
	 $HC = sprintf("%01.1f",round(($HC-32.0) / 1.8,1));
 // Feelslike
  if ($TC <= 16.0 ) {
	$feelslike = $WC; //use WindChill
  } elseif ($TC >=27.0) {
	$feelslike = $HC; //use HeatIndex
  } else {
	$feelslike = $TC;   // use temperature
  if (preg_match('|F|i',$tempUOM))  { // convert C back to F if need be
	$feelslike = (1.8 * $feelslike) + 32.0;
  $feelslike = round($feelslike,0);
// determine the 'heat color word' to use  
 $hcWord = $HeatWords[0];
 $hcFound = false;
 if ($TC > 32 and $HC > 29) {
	if ($HC > 54 and ! $hcFound) { $hcWord = $HeatWords[1]; $hcFound = true;}
	if ($HC > 45 and ! $hcFound) { $hcWord = $HeatWords[2]; $hcFound = true; }
	if ($HC > 39 and ! $hcFound) { $hcWord = $HeatWords[4]; $hcFound = true; }
	if ($HC > 29 and ! $hcFound) { $hcWord = $HeatWords[6]; $hcFound = true; }
 } elseif ($WC < 16 ) {
	if ($WC < -18 and ! $hcFound) { $hcWord = $HeatWords[13]; $hcFound = true; }
	if ($WC < -9 and ! $hcFound)  { $hcWord = $HeatWords[12]; $hcFound = true; }
	if ($WC < -1 and ! $hcFound)  { $hcWord = $HeatWords[11]; $hcFound = true; }
	if ($WC < 8 and ! $hcFound)   { $hcWord = $HeatWords[10]; $hcFound = true; }
	if ($WC < 16 and ! $hcFound)  { $hcWord = $HeatWords[9]; $hcFound = true; }
 } elseif ($WC >= 16 and $TC <= 32) {
	if ($TC <= 26 and ! $hcFound) { $hcWord = $HeatWords[8]; $hcFound = true; }
	if ($TC <= 32 and ! $hcFound) { $hcWord = $HeatWords[7]; $hcFound = true; }
 if(isset($_REQUEST['debug'])) {
  echo "<!-- MB_setFeelslike input T,WC,HI,U='$temp,$windchill,$heatindex,$tempUOM' cnvt T,WC,HI='$TC,$WC,$HC' feelslike=$feelslike hcWord=$hcWord -->\n";
 return(array($feelslike,$hcWord));
} // end of MB_setFeelslike
#-------------------------------------------------------------------------------------
# MB support function - MB_CBI - Chandler Burning Index
#-------------------------------------------------------------------------------------
function MB_CBI($inTemp,$inTempUOM,$inHumidity) {
	// thanks to Chris from sloweather.com for the CBI calculation script
	// modified by Ken True for template usage
	preg_match('/([\d\.\,\+\-]+)/',$inTemp,$t); // strip non-numeric from inTemp if any
	$ctemp = $t[1];
	if(strpos($ctemp,',') !== false) {
		$ctemp = preg_replace('|,|','.',$ctemp);
	if(!preg_match('|C|i',$inTempUOM)) {
	  $ctemp = ($ctemp-32.0) / 1.8; // convert from Fahrenheit	
	preg_match('/([\d\.\,\+\-]+)/',$inHumidity,$t); // strip non-numeric from inHumidity if any
	$rh = $t[1];
	if(strpos($rh,',') !== false) {
		$rh = preg_replace('|,|','.',$rh);
	// Start Index Calcs
	// Chandler Index
	$cbi = (((110 - 1.373 * $rh) - 0.54 * (10.20 - $ctemp)) * (124 * pow(10,-0.0142 * $rh) ))/60;
	// CBI = (((110 - 1.373*RH) - 0.54 * (10.20 - T)) * (124 * 10**(-0.0142*RH)))/60
	//Sort out the Chandler Index
	$cbi = round($cbi,1);
	if ($cbi > "97.5") {
		$cbitxt = "EXTREME";
		$cbiimg= "fdl_extreme.gif";
	} elseif ($cbi >="90") {
		$cbitxt = "VERY HIGH";
		$cbiimg= "fdl_vhigh.gif";
	} elseif ($cbi >= "75") {
		$cbitxt = "HIGH";
		$cbiimg= "fdl_high.gif";
	} elseif ($cbi >= "50") {
		$cbitxt = "MODERATE";
		$cbiimg= "fdl_moderate.gif";
	} else {
		$cbitxt="LOW";
		$cbiimg= "fdl_low.gif";
	 $data = array($cbi,$cbitxt,$cbiimg);
	 return $data;
} // end MB_CBI
#-------------------------------------------------------------------------------------
# MB support function - MB_get_barotrend_text
#-------------------------------------------------------------------------------------
function MB_get_barotrend_text($rawpress,$usedunit='hPa') {
  global $Debug;
// routine from Anole's wxsticker PHP (adapted)  
//   Barometric Trend(3 hour)
// Change Rates
// Rapidly: =.06" inHg; 1.5 mm Hg; 2 hPa; 2 mb
// Slowly: =.02" inHg; 0.5 mm Hg; 0.7 hPa; 0.7 mb
// 5 Arrow Positions:
// Rising Rapidly
// Rising Slowly
// Steady
// Falling Slowly
// Falling Rapidly
// Page 52 of the PDF Manual
// http://www.davisnet.com/product_documents/weather/manuals/07395.234-VP2_Manual.pdf
// first convert to hPa for comparisons
	 if (preg_match('/hPa|mb/i',$usedunit)) {
		$btrend = sprintf("%02.1f",round($rawpress * 1.0,1)); // leave in hPa
	 } elseif (preg_match('/mm/i',$usedunit)) {
	   $btrend = sprintf("%02.1f",round($rawpress * 1.333224,1)); 
	 } else { // convert from inHg
		$btrend = sprintf("%02.1f",round($rawpress  * 33.86388158,1));
   // figure out a text value for barometric pressure trend
   (float)$baromtrend = $btrend;
//   settype($baromtrend, "float");
   switch (TRUE) {
      case (($baromtrend >= -0.6) and ($baromtrend <= 0.6)):
        $baromtrendwords = "Steady";
      break;
      case (($baromtrend > 0.6) and ($baromtrend < 2.0)):
        $baromtrendwords = "Rising Slowly";
      break;
      case ($baromtrend >= 2.0):
        $baromtrendwords = "Rising Rapidly";
      break;
      case (($baromtrend < -0.6) and ($baromtrend > -2.0)):
        $baromtrendwords = "Falling Slowly";
      break;
      case ($baromtrend <= -2.0):
        $baromtrendwords = "Falling Rapidly";
      break;
   } // end switch
   $Debug .= "<!-- MB_get_barotrend_text in=$rawpress $usedunit change out=$btrend hPa change [$baromtrend] ($baromtrendwords) -->\n";
  return($baromtrendwords);
#-------------------------------------------------------------------------------------
# end of MB support functions
#-------------------------------------------------------------------------------------
?><?php
 File: MBtags.php
 Purpose: load Meteobridge variables into a $WX[] array for use with the Canada/World/USA template sets
 NOTE: this file must be processed by Meteobridge as a template file and uploaded to the website
   as MBtags.php using the Meteobridge extended Push Services configuration.
 Author: Ken True - webmaster@saratoga-weather.org
 (created by gen-MBtags.php - V1.03 - 18-Aug-2013)
 These tags generated on 2016-11-15 20:11:15 GMT
   From MBtags-template.txt updated 2016-10-25 17:10:26 GMT
// --------------------------------------------------------------------------
// allow viewing of generated source
if (isset($_REQUEST["sce"]) and strtolower($_REQUEST["sce"]) == "view" ) {
//--self downloader --
   $filenameReal = __FILE__;
   $download_size = filesize($filenameReal);
   header("Pragma: public");
   header("Cache-Control: private");
   header("Cache-Control: no-cache, must-revalidate");
   header("Content-type: text/plain");
   header("Accept-Ranges: bytes");
   header("Content-Length: $download_size");
   header("Connection: close");
   readfile($filenameReal);
   exit;
$WXsoftware = 'MB';  
$defsFile = 'MB-defs.php';  // filename with $varnames = $WX['MB-varnames']; equivalents
$rawdatalines = '
date|2016-11-15|// local date:|:
time|22:34:42|// local time:|:
dateUTC|2016-11-15|// UTC date:|:
timeUTC|20:34:42|// UTCtime:|:
uomTemp|&deg;C|// UOM temperature:|:
uomWind| km/h|// UOM wind:|:
uomBaro| hPa|// UOM barometer:|:
uomRain| mm|// UOM rain:|:
mbsystem-swversion|3.1|// Meteobridge version string (example: "1.1"):|:
mbsystem-buildnum|10731|// build number as integer (example: 1673):|:
mbsystem-platform|TL-MR3020|// string that specifies hw platform (example: "TL-MR3020"):|:
mbsystem-language|English|// language used on Meteobridge web interface (example: "English"):|:
mbsystem-timezone|Europe/Athens|// defined timezone (example: "Europe/Berlin"):|:
mbsystem-latitude|35.043122|// latitude as float (example: 53.875120):|:
mbsystem-longitude|26.227628|// longitude as float (example: 9.885357):|:
mbsystem-lunarage|16|// days passes since new moon as integer (example: 28):|:
mbsystem-lunarpercent|97.6|// lunarphase given as percentage from 0% (new moon) to 100% (full moon):|:
mbsystem-lunarsegment|4|// lunarphase segment as integer (0 = new moon, 1-3 = growing moon: quarter, half, three quarters, 4 = full moon, 5-7 = shrinking moon: three quarter, half, quarter):|:
mbsystem-daylength|10:20|// length of day (example: "11:28"):|:
mbsystem-civildaylength|11:13|// alternative method for daylength computation (example: "12:38"):|:
mbsystem-nauticaldaylength|12:14|// alternative method for daylength computation (example: "14:00"):|:
mbsystem-sunrise|06:50|// time of sunrise in local time. Can be converted to UTC by applying "=utc" to the variable (example: "06:47", resp. "05:47"):|:
mbsystem-sunset|17:10|// time of sunset in local time. Can be converted to UTC by applying "=utc" to the variable (example: "18:15", resp. "17:15"):|:
mbsystem-civilsunrise|06:23|// alternative computation for sunrise.:|:
mbsystem-civilsunset|17:36|// alternative computation for sunset.:|:
mbsystem-nauticalsunrise|05:53|// alternative computation for sunrise.:|:
mbsystem-nauticalsunset|18:07|// alternative alternative computation for sunset..:|:
mbsystem-daynightflag|N|// returns "D" when there is daylight, otherwise "N".:|:
mbsystem-moonrise|18:19|// time of moonrise in local time. Please notice that not every day has a moonrise time, therefore, variable can be non-existent on certain days (example: "05:46", resp. "04:46"):|:
mbsystem-moonset|07:26|// time of moonset in local time. Please notice that not every day has a moonset time, therefore, variable can be non-existent on certain days.:|:
forecast-rule|-1|// Davis forecast rule number:|:
forecast-text||// Davis forecast reports in English:|:
th0temp-act|15.8|// outdoor temperature most recent:|:
th0temp-val5|15.7|// outdoor temperature value 5 minutes ago:|:
th0temp-val10|15.6|// outdoor temperature value 10 minutes ago:|:
th0temp-val15|15.7|// outdoor temperature value 15 minutes ago:|:
th0temp-val30|--|// outdoor temperature value 30 minutes ago:|:
th0temp-val60|--|// outdoor temperature value 60 minutes ago:|:
th0temp-hmin|15.6|// outdoor temperature min of this hour:|:
th0temp-hmintime|20161115222150|// outdoor temperature timestamp min of this hour:|:
th0temp-hmax|15.8|// outdoor temperature max of this hour:|:
th0temp-hmaxtime|20161115220002|// outdoor temperature timestamp max of this hour:|:
th0temp-dmin|15.5|// outdoor temperature min of today:|:
th0temp-dmintime|20161115200959|// outdoor temperature timestamp min of today:|:
th0temp-dmax|18.4|// outdoor temperature max of today:|:
th0temp-dmaxtime|20161115005657|// outdoor temperature timestamp max of today:|:
th0temp-ydmin|17.8|// outdoor temperature min of yesterday:|:
th0temp-ydmintime|20161114061729|// outdoor temperature timestamp min of yesterday:|:
th0temp-ydmax|21.2|// outdoor temperature max of yesterday:|:
th0temp-ydmaxtime|20161114120929|// outdoor temperature timestamp max of yesterday:|:
th0temp-mmin|14.7|// outdoor temperature min of this month:|:
th0temp-mmintime|20161101062658|// outdoor temperature timestamp min of this month:|:
th0temp-mmax|24.6|// outdoor temperature max of this month:|:
th0temp-mmaxtime|20161108124909|// outdoor temperature timestamp max of this month:|:
th0temp-ymin|14.2|// outdoor temperature min of this year:|:
th0temp-ymintime|20161031181258|// outdoor temperature timestamp min of this year:|:
th0temp-ymax|24.8|// outdoor temperature max of this year:|:
th0temp-ymaxtime|20161024140918|// outdoor temperature timestamp max of this year:|:
th0temp-amin|14.2|// outdoor temperature min of all time:|:
th0temp-amintime|20161031181258|// outdoor temperature timestamp min of all time:|:
th0temp-amax|24.8|// outdoor temperature max of all time:|:
th0temp-amaxtime|20161024140918|// outdoor temperature timestamp max of all time:|:
th0temp-starttime|20161019001300|// outdoor temperature timestamp of first recorded data:|:
th0hum-act|58|// outdoor humidity most recent:|:
th0hum-val5|58|// outdoor humidity value 5 minutes ago:|:
th0hum-val10|59|// outdoor humidity value 10 minutes ago:|:
th0hum-val15|59|// outdoor humidity value 15 minutes ago:|:
th0hum-val30|--|// outdoor humidity value 30 minutes ago:|:
th0hum-val60|--|// outdoor humidity value 60 minutes ago:|:
th0hum-hmin|58|// outdoor humidity min of this hour:|:
th0hum-hmintime|20161115220002|// outdoor humidity timestamp min of this hour:|:
th0hum-hmax|60|// outdoor humidity max of this hour:|:
th0hum-hmaxtime|20161115222549|// outdoor humidity timestamp max of this hour:|:
th0hum-dmin|57|// outdoor humidity min of today:|:
th0hum-dmintime|20161115021829|// outdoor humidity timestamp min of today:|:
th0hum-dmax|66|// outdoor humidity max of today:|:
th0hum-dmaxtime|20161115055049|// outdoor humidity timestamp max of today:|:
th0hum-ydmin|50|// outdoor humidity min of yesterday:|:
th0hum-ydmintime|20161114160431|// outdoor humidity timestamp min of yesterday:|:
th0hum-ydmax|79|// outdoor humidity max of yesterday:|:
th0hum-ydmaxtime|20161114012659|// outdoor humidity timestamp max of yesterday:|:
th0hum-mmin|33|// outdoor humidity min of this month:|:
th0hum-mmintime|20161102121119|// outdoor humidity timestamp min of this month:|:
th0hum-mmax|87|// outdoor humidity max of this month:|:
th0hum-mmaxtime|20161106111539|// outdoor humidity timestamp max of this month:|:
th0hum-ymin|33|// outdoor humidity min of this year:|:
th0hum-ymintime|20161102121119|// outdoor humidity timestamp min of this year:|:
th0hum-ymax|96|// outdoor humidity max of this year:|:
th0hum-ymaxtime|20161031134538|// outdoor humidity timestamp max of this year:|:
th0hum-amin|33|// outdoor humidity min of all time:|:
th0hum-amintime|20161102121119|// outdoor humidity timestamp min of all time:|:
th0hum-amax|96|// outdoor humidity max of all time:|:
th0hum-amaxtime|20161031134538|// outdoor humidity timestamp max of all time:|:
th0hum-starttime|20161019001300|// outdoor humidity timestamp of first recorded data:|:
th0dew-act|7.6|// outdoor dewpoint most recent:|:
th0dew-val5|7.5|// outdoor dewpoint value 5 minutes ago:|:
th0dew-val10|7.6|// outdoor dewpoint value 10 minutes ago:|:
th0dew-val15|7.7|// outdoor dewpoint value 15 minutes ago:|:
th0dew-val30|--|// outdoor dewpoint value 30 minutes ago:|:
th0dew-val60|--|// outdoor dewpoint value 60 minutes ago:|:
th0dew-hmin|7.5|// outdoor dewpoint min of this hour:|:
th0dew-hmintime|20161115221532|// outdoor dewpoint timestamp min of this hour:|:
th0dew-hmax|7.9|// outdoor dewpoint max of this hour:|:
th0dew-hmaxtime|20161115222549|// outdoor dewpoint timestamp max of this hour:|:
th0dew-dmin|7.5|// outdoor dewpoint min of today:|:
th0dew-dmintime|20161115212249|// outdoor dewpoint timestamp min of today:|:
th0dew-dmax|11.6|// outdoor dewpoint max of today:|:
th0dew-dmaxtime|20161115000003|// outdoor dewpoint timestamp max of today:|:
th0dew-ydmin|9.6|// outdoor dewpoint min of yesterday:|:
th0dew-ydmintime|20161114160431|// outdoor dewpoint timestamp min of yesterday:|:
th0dew-ydmax|15.7|// outdoor dewpoint max of yesterday:|:
th0dew-ydmaxtime|20161114013609|// outdoor dewpoint timestamp max of yesterday:|:
th0dew-mmin|2.4|// outdoor dewpoint min of this month:|:
th0dew-mmintime|20161102100409|// outdoor dewpoint timestamp min of this month:|:
th0dew-mmax|19.9|// outdoor dewpoint max of this month:|:
th0dew-mmaxtime|20161109144529|// outdoor dewpoint timestamp max of this month:|:
th0dew-ymin|2.4|// outdoor dewpoint min of this year:|:
th0dew-ymintime|20161102100409|// outdoor dewpoint timestamp min of this year:|:
th0dew-ymax|19.9|// outdoor dewpoint max of this year:|:
th0dew-ymaxtime|20161109144529|// outdoor dewpoint timestamp max of this year:|:
th0dew-amin|2.4|// outdoor dewpoint min of all time:|:
th0dew-amintime|20161102100409|// outdoor dewpoint timestamp min of all time:|:
th0dew-amax|19.9|// outdoor dewpoint max of all time:|:
th0dew-amaxtime|20161109144529|// outdoor dewpoint timestamp max of all time:|:
th0dew-starttime|20161019001300|// outdoor dewpoint timestamp of first recorded data:|:
thb0temp-act|22.9|// indoor temperature most recent:|:
thb0temp-val5|22.9|// indoor temperature value 5 minutes ago:|:
thb0temp-val10|22.9|// indoor temperature value 10 minutes ago:|:
thb0temp-val15|22.9|// indoor temperature value 15 minutes ago:|:
thb0temp-val30|--|// indoor temperature value 30 minutes ago:|:
thb0temp-val60|--|// indoor temperature value 60 minutes ago:|:
thb0temp-hmin|22.9|// indoor temperature min of this hour:|:
thb0temp-hmintime|20161115220000|// indoor temperature timestamp min of this hour:|:
thb0temp-hmax|23.0|// indoor temperature max of this hour:|:
thb0temp-hmaxtime|20161115221239|// indoor temperature timestamp max of this hour:|:
thb0temp-dmin|22.4|// indoor temperature min of today:|:
thb0temp-dmintime|20161115203706|// indoor temperature timestamp min of today:|:
thb0temp-dmax|24.2|// indoor temperature max of today:|:
thb0temp-dmaxtime|20161115013927|// indoor temperature timestamp max of today:|:
thb0temp-ydmin|23.4|// indoor temperature min of yesterday:|:
thb0temp-ydmintime|20161114235949|// indoor temperature timestamp min of yesterday:|:
thb0temp-ydmax|25.9|// indoor temperature max of yesterday:|:
thb0temp-ydmaxtime|20161114110810|// indoor temperature timestamp max of yesterday:|:
thb0temp-mmin|21.1|// indoor temperature min of this month:|:
thb0temp-mmintime|20161102063423|// indoor temperature timestamp min of this month:|:
thb0temp-mmax|28.1|// indoor temperature max of this month:|:
thb0temp-mmaxtime|20161111115406|// indoor temperature timestamp max of this month:|:
thb0temp-ymin|21.1|// indoor temperature min of this year:|:
thb0temp-ymintime|20161102063423|// indoor temperature timestamp min of this year:|:
thb0temp-ymax|29.6|// indoor temperature max of this year:|:
thb0temp-ymaxtime|20161026123705|// indoor temperature timestamp max of this year:|:
thb0temp-amin|21.1|// indoor temperature min of all time:|:
thb0temp-amintime|20161102063423|// indoor temperature timestamp min of all time:|:
thb0temp-amax|29.6|// indoor temperature max of all time:|:
thb0temp-amaxtime|20161026123705|// indoor temperature timestamp max of all time:|:
thb0temp-starttime|20161019001302|// indoor temperature timestamp of first recorded data:|:
thb0hum-act|42|// indoor humidity most recent:|:
thb0hum-val5|42|// indoor humidity value 5 minutes ago:|:
thb0hum-val10|42|// indoor humidity value 10 minutes ago:|:
thb0hum-val15|42|// indoor humidity value 15 minutes ago:|:
thb0hum-val30|--|// indoor humidity value 30 minutes ago:|:
thb0hum-val60|--|// indoor humidity value 60 minutes ago:|:
thb0hum-hmin|41|// indoor humidity min of this hour:|:
thb0hum-hmintime|20161115222049|// indoor humidity timestamp min of this hour:|:
thb0hum-hmax|43|// indoor humidity max of this hour:|:
thb0hum-hmaxtime|20161115220000|// indoor humidity timestamp max of this hour:|:
thb0hum-dmin|41|// indoor humidity min of today:|:
thb0hum-dmintime|20161115214816|// indoor humidity timestamp min of today:|:
thb0hum-dmax|53|// indoor humidity max of today:|:
thb0hum-dmaxtime|20161115074729|// indoor humidity timestamp max of today:|:
thb0hum-ydmin|44|// indoor humidity min of yesterday:|:
thb0hum-ydmintime|20161114163128|// indoor humidity timestamp min of yesterday:|:
thb0hum-ydmax|59|// indoor humidity max of yesterday:|:
thb0hum-ydmaxtime|20161114000002|// indoor humidity timestamp max of yesterday:|:
thb0hum-mmin|35|// indoor humidity min of this month:|:
thb0hum-mmintime|20161102123518|// indoor humidity timestamp min of this month:|:
thb0hum-mmax|70|// indoor humidity max of this month:|:
thb0hum-mmaxtime|20161108172744|// indoor humidity timestamp max of this month:|:
thb0hum-ymin|35|// indoor humidity min of this year:|:
thb0hum-ymintime|20161102123518|// indoor humidity timestamp min of this year:|:
thb0hum-ymax|70|// indoor humidity max of this year:|:
thb0hum-ymaxtime|20161108172744|// indoor humidity timestamp max of this year:|:
thb0hum-amin|35|// indoor humidity min of all time:|:
thb0hum-amintime|20161102123518|// indoor humidity timestamp min of all time:|:
thb0hum-amax|70|// indoor humidity max of all time:|:
thb0hum-amaxtime|20161108172744|// indoor humidity timestamp max of all time:|:
thb0hum-starttime|20161019001302|// indoor humidity timestamp of first recorded data:|:
thb0dew-act|9.0|// indoor dewpoint most recent:|:
thb0dew-val5|9.0|// indoor dewpoint value 5 minutes ago:|:
thb0dew-val10|9.0|// indoor dewpoint value 10 minutes ago:|:
thb0dew-val15|9.0|// indoor dewpoint value 15 minutes ago:|:
thb0dew-val30|--|// indoor dewpoint value 30 minutes ago:|:
thb0dew-val60|--|// indoor dewpoint value 60 minutes ago:|:
thb0dew-hmin|8.0|// indoor dewpoint min of this hour:|:
thb0dew-hmintime|20161115222049|// indoor dewpoint timestamp min of this hour:|:
thb0dew-hmax|9.0|// indoor dewpoint max of this hour:|:
thb0dew-hmaxtime|20161115220000|// indoor dewpoint timestamp max of this hour:|:
thb0dew-dmin|8.0|// indoor dewpoint min of today:|:
thb0dew-dmintime|20161115214816|// indoor dewpoint timestamp min of today:|:
thb0dew-dmax|13.0|// indoor dewpoint max of today:|:
thb0dew-dmaxtime|20161115012412|// indoor dewpoint timestamp max of today:|:
thb0dew-ydmin|11.0|// indoor dewpoint min of yesterday:|:
thb0dew-ydmintime|20161114100104|// indoor dewpoint timestamp min of yesterday:|:
thb0dew-ydmax|16.0|// indoor dewpoint max of yesterday:|:
thb0dew-ydmaxtime|20161114002134|// indoor dewpoint timestamp max of yesterday:|:
thb0dew-mmin|6.0|// indoor dewpoint min of this month:|:
thb0dew-mmintime|20161101092030|// indoor dewpoint timestamp min of this month:|:
thb0dew-mmax|19.0|// indoor dewpoint max of this month:|:
thb0dew-mmaxtime|20161108115820|// indoor dewpoint timestamp max of this month:|:
thb0dew-ymin|6.0|// indoor dewpoint min of this year:|:
thb0dew-ymintime|20161101092030|// indoor dewpoint timestamp min of this year:|:
thb0dew-ymax|19.0|// indoor dewpoint max of this year:|:
thb0dew-ymaxtime|20161108115820|// indoor dewpoint timestamp max of this year:|:
thb0dew-amin|6.0|// indoor dewpoint min of all time:|:
thb0dew-amintime|20161101092030|// indoor dewpoint timestamp min of all time:|:
thb0dew-amax|19.0|// indoor dewpoint max of all time:|:
thb0dew-amaxtime|20161108115820|// indoor dewpoint timestamp max of all time:|:
thb0dew-starttime|20161019001302|// indoor dewpoint timestamp of first recorded data:|:
thb0press-act|1017.9|// station pressure most recent:|:
thb0press-val5|1017.9|// station pressure value 5 minutes ago:|:
thb0press-val10|1018.3|// station pressure value 10 minutes ago:|:
thb0press-val15|1018.3|// station pressure value 15 minutes ago:|:
thb0press-val30|--|// station pressure value 30 minutes ago:|:
thb0press-val60|--|// station pressure value 60 minutes ago:|:
thb0press-hmin|1017.9|// station pressure min of this hour:|:
thb0press-hmintime|20161115222820|// station pressure timestamp min of this hour:|:
thb0press-hmax|1018.3|// station pressure max of this hour:|:
thb0press-hmaxtime|20161115221318|// station pressure timestamp max of this hour:|:
thb0press-dmin|1017.1|// station pressure min of today:|:
thb0press-dmintime|20161115035820|// station pressure timestamp min of today:|:
thb0press-dmax|1018.5|// station pressure max of today:|:
thb0press-dmaxtime|20161115150440|// station pressure timestamp max of today:|:
thb0press-ydmin|1016.5|// station pressure min of yesterday:|:
thb0press-ydmintime|20161114041318|// station pressure timestamp min of yesterday:|:
thb0press-ydmax|1018.4|// station pressure max of yesterday:|:
thb0press-ydmaxtime|20161114092818|// station pressure timestamp max of yesterday:|:
thb0press-mmin|1006.9|// station pressure min of this month:|:
thb0press-mmintime|20161109175819|// station pressure timestamp min of this month:|:
thb0press-mmax|1018.9|// station pressure max of this month:|:
thb0press-mmaxtime|20161104095818|// station pressure timestamp max of this month:|:
thb0press-ymin|1006.9|// station pressure min of this year:|:
thb0press-ymintime|20161109175819|// station pressure timestamp min of this year:|:
thb0press-ymax|1018.9|// station pressure max of this year:|:
thb0press-ymaxtime|20161104095818|// station pressure timestamp max of this year:|:
thb0press-amin|1006.9|// station pressure min of all time:|:
thb0press-amintime|20161109175819|// station pressure timestamp min of all time:|:
thb0press-amax|1018.9|// station pressure max of all time:|:
thb0press-amaxtime|20161104095818|// station pressure timestamp max of all time:|:
thb0press-starttime|20161019001302|// station pressure timestamp of first recorded data:|:
thb0seapress-act|1020.1|// sealevel pressure most recent:|:
thb0seapress-val5|1020.1|// sealevel pressure value 5 minutes ago:|:
thb0seapress-val10|1020.5|// sealevel pressure value 10 minutes ago:|:
thb0seapress-val15|1020.5|// sealevel pressure value 15 minutes ago:|:
thb0seapress-val30|--|// sealevel pressure value 30 minutes ago:|:
thb0seapress-val60|--|// sealevel pressure value 60 minutes ago:|:
thb0seapress-hmin|1020.1|// sealevel pressure min of this hour:|:
thb0seapress-hmintime|20161115222820|// sealevel pressure timestamp min of this hour:|:
thb0seapress-hmax|1020.5|// sealevel pressure max of this hour:|:
thb0seapress-hmaxtime|20161115221318|// sealevel pressure timestamp max of this hour:|:
thb0seapress-dmin|1019.3|// sealevel pressure min of today:|:
thb0seapress-dmintime|20161115035820|// sealevel pressure timestamp min of today:|:
thb0seapress-dmax|1020.7|// sealevel pressure max of today:|:
thb0seapress-dmaxtime|20161115150440|// sealevel pressure timestamp max of today:|:
thb0seapress-ydmin|1018.7|// sealevel pressure min of yesterday:|:
thb0seapress-ydmintime|20161114041318|// sealevel pressure timestamp min of yesterday:|:
thb0seapress-ydmax|1020.6|// sealevel pressure max of yesterday:|:
thb0seapress-ydmaxtime|20161114092818|// sealevel pressure timestamp max of yesterday:|:
thb0seapress-mmin|1009.1|// sealevel pressure min of this month:|:
thb0seapress-mmintime|20161109175819|// sealevel pressure timestamp min of this month:|:
thb0seapress-mmax|1021.1|// sealevel pressure max of this month:|:
thb0seapress-mmaxtime|20161104095818|// sealevel pressure timestamp max of this month:|:
thb0seapress-ymin|1009.1|// sealevel pressure min of this year:|:
thb0seapress-ymintime|20161109175819|// sealevel pressure timestamp min of this year:|:
thb0seapress-ymax|1021.1|// sealevel pressure max of this year:|:
thb0seapress-ymaxtime|20161104095818|// sealevel pressure timestamp max of this year:|:
thb0seapress-amin|1009.1|// sealevel pressure min of all time:|:
thb0seapress-amintime|20161109175819|// sealevel pressure timestamp min of all time:|:
thb0seapress-amax|1021.1|// sealevel pressure max of all time:|:
thb0seapress-amaxtime|20161104095818|// sealevel pressure timestamp max of all time:|:
thb0seapress-starttime|20161019001302|// sealevel pressure timestamp of first recorded data:|:
wind0wind-act|31.0|// windspeed most recent:|:
wind0wind-val5|30.6|// windspeed value 5 minutes ago:|:
wind0wind-val10|10.4|// windspeed value 10 minutes ago:|:
wind0wind-val15|6.8|// windspeed value 15 minutes ago:|:
wind0wind-val30|--|// windspeed value 30 minutes ago:|:
wind0wind-val60|--|// windspeed value 60 minutes ago:|:
wind0wind-hmin|3.2|// windspeed min of this hour:|:
wind0wind-hmintime|20161115222341|// windspeed timestamp min of this hour:|:
wind0wind-hmax|48.6|// windspeed max of this hour:|:
wind0wind-hmaxtime|20161115223116|// windspeed timestamp max of this hour:|:
wind0wind-dmin|2.2|// windspeed min of today:|:
wind0wind-dmintime|20161115011524|// windspeed timestamp min of today:|:
wind0wind-dmax|49.7|// windspeed max of today:|:
wind0wind-dmaxtime|20161115193534|// windspeed timestamp max of today:|:
wind0wind-ydmin|0.0|// windspeed min of yesterday:|:
wind0wind-ydmintime|20161114002946|// windspeed timestamp min of yesterday:|:
wind0wind-ydmax|34.2|// windspeed max of yesterday:|:
wind0wind-ydmaxtime|20161114173004|// windspeed timestamp max of yesterday:|:
wind0wind-mmin|0.0|// windspeed min of this month:|:
wind0wind-mmintime|20161101075233|// windspeed timestamp min of this month:|:
wind0wind-mmax|99.7|// windspeed max of this month:|:
wind0wind-mmaxtime|20161101044651|// windspeed timestamp max of this month:|:
wind0wind-ymin|0.0|// windspeed min of this year:|:
wind0wind-ymintime|20161019191755|// windspeed timestamp min of this year:|:
wind0wind-ymax|102.2|// windspeed max of this year:|:
wind0wind-ymaxtime|20161026062013|// windspeed timestamp max of this year:|:
wind0wind-amin|0.0|// windspeed min of all time:|:
wind0wind-amintime|20161019191755|// windspeed timestamp min of all time:|:
wind0wind-amax|102.2|// windspeed max of all time:|:
wind0wind-amaxtime|20161026062013|// windspeed timestamp max of all time:|:
wind0wind-starttime|20161019001302|// windspeed timestamp of first recorded data:|:
wind0avgwind-act|17.3|// average windspeed most recent:|:
wind0avgwind-val5|10.4|// average windspeed value 5 minutes ago:|:
wind0avgwind-val10|10.4|// average windspeed value 10 minutes ago:|:
wind0avgwind-val15|14.8|// average windspeed value 15 minutes ago:|:
wind0avgwind-val30|--|// average windspeed value 30 minutes ago:|:
wind0avgwind-val60|--|// average windspeed value 60 minutes ago:|:
wind0avgwind-hmin|10.4|// average windspeed min of this hour:|:
wind0avgwind-hmintime|20161115222152|// average windspeed timestamp min of this hour:|:
wind0avgwind-hmax|17.3|// average windspeed max of this hour:|:
wind0avgwind-hmaxtime|20161115223152|// average windspeed timestamp max of this hour:|:
wind0avgwind-dmin|7.6|// average windspeed min of today:|:
wind0avgwind-dmintime|20161115012151|// average windspeed timestamp min of today:|:
wind0avgwind-dmax|25.6|// average windspeed max of today:|:
wind0avgwind-dmaxtime|20161115171151|// average windspeed timestamp max of today:|:
wind0avgwind-ydmin|0.0|// average windspeed min of yesterday:|:
wind0avgwind-ydmintime|20161114021151|// average windspeed timestamp min of yesterday:|:
wind0avgwind-ydmax|19.8|// average windspeed max of yesterday:|:
wind0avgwind-ydmaxtime|20161114173151|// average windspeed timestamp max of yesterday:|:
wind0avgwind-mmin|0.0|// average windspeed min of this month:|:
wind0avgwind-mmintime|20161105075151|// average windspeed timestamp min of this month:|:
wind0avgwind-mmax|43.2|// average windspeed max of this month:|:
wind0avgwind-mmaxtime|20161101023151|// average windspeed timestamp max of this month:|:
wind0avgwind-ymin|0.0|// average windspeed min of this year:|:
wind0avgwind-ymintime|20161030054150|// average windspeed timestamp min of this year:|:
wind0avgwind-ymax|68.8|// average windspeed max of this year:|:
wind0avgwind-ymaxtime|20161026062150|// average windspeed timestamp max of this year:|:
wind0avgwind-amin|0.0|// average windspeed min of all time:|:
wind0avgwind-amintime|20161030054150|// average windspeed timestamp min of all time:|:
wind0avgwind-amax|68.8|// average windspeed max of all time:|:
wind0avgwind-amaxtime|20161026062150|// average windspeed timestamp max of all time:|:
wind0avgwind-starttime|20161019001302|// average windspeed timestamp of first recorded data:|:
wind0dir-act|330|// wind direction most recent:|:
wind0dir-val5|90|// wind direction value 5 minutes ago:|:
wind0dir-val10|90|// wind direction value 10 minutes ago:|:
wind0dir-val15|90|// wind direction value 15 minutes ago:|:
wind0dir-val30|--|// wind direction value 30 minutes ago:|:
wind0dir-val60|--|// wind direction value 60 minutes ago:|:
wind0dir-hmin|0|// wind direction min of this hour:|:
wind0dir-hmintime|20161115222512|// wind direction timestamp min of this hour:|:
wind0dir-hmax|358|// wind direction max of this hour:|:
wind0dir-hmaxtime|20161115222644|// wind direction timestamp max of this hour:|:
wind0dir-dmin|0|// wind direction min of today:|:
wind0dir-dmintime|20161115000011|// wind direction timestamp min of today:|:
wind0dir-dmax|359|// wind direction max of today:|:
wind0dir-dmaxtime|20161115000047|// wind direction timestamp max of today:|:
wind0dir-ydmin|0|// wind direction min of yesterday:|:
wind0dir-ydmintime|20161114143724|// wind direction timestamp min of yesterday:|:
wind0dir-ydmax|359|// wind direction max of yesterday:|:
wind0dir-ydmaxtime|20161114143526|// wind direction timestamp max of yesterday:|:
wind0dir-mmin|0|// wind direction min of this month:|:
wind0dir-mmintime|20161101000051|// wind direction timestamp min of this month:|:
wind0dir-mmax|359|// wind direction max of this month:|:
wind0dir-mmaxtime|20161101000911|// wind direction timestamp max of this month:|:
wind0dir-ymin|0|// wind direction min of this year:|:
wind0dir-ymintime|20161019180952|// wind direction timestamp min of this year:|:
wind0dir-ymax|359|// wind direction max of this year:|:
wind0dir-ymaxtime|20161019004617|// wind direction timestamp max of this year:|:
wind0dir-amin|0|// wind direction min of all time:|:
wind0dir-amintime|20161019180952|// wind direction timestamp min of all time:|:
wind0dir-amax|359|// wind direction max of all time:|:
wind0dir-amaxtime|20161019004617|// wind direction timestamp max of all time:|:
wind0dir-starttime|20161019001302|// wind direction timestamp of first recorded data:|:
wind0chill-act|14.1|// outdoor wind chill temperature most recent:|:
wind0chill-val5|14.0|// outdoor wind chill temperature value 5 minutes ago:|:
wind0chill-val10|15.3|// outdoor wind chill temperature value 10 minutes ago:|:
wind0chill-val15|15.7|// outdoor wind chill temperature value 15 minutes ago:|:
wind0chill-val30|--|// outdoor wind chill temperature value 30 minutes ago:|:
wind0chill-val60|--|// outdoor wind chill temperature value 60 minutes ago:|:
wind0chill-hmin|13.3|// outdoor wind chill temperature min of this hour:|:
wind0chill-hmintime|20161115223114|// outdoor wind chill temperature timestamp min of this hour:|:
wind0chill-hmax|15.8|// outdoor wind chill temperature max of this hour:|:
wind0chill-hmaxtime|20161115220001|// outdoor wind chill temperature timestamp max of this hour:|:
wind0chill-dmin|13.1|// outdoor wind chill temperature min of today:|:
wind0chill-dmintime|20161115192854|// outdoor wind chill temperature timestamp min of today:|:
wind0chill-dmax|18.4|// outdoor wind chill temperature max of today:|:
wind0chill-dmaxtime|20161115005658|// outdoor wind chill temperature timestamp max of today:|:
wind0chill-ydmin|17.1|// outdoor wind chill temperature min of yesterday:|:
wind0chill-ydmintime|20161114064744|// outdoor wind chill temperature timestamp min of yesterday:|:
wind0chill-ydmax|21.2|// outdoor wind chill temperature max of yesterday:|:
wind0chill-ydmaxtime|20161114120931|// outdoor wind chill temperature timestamp max of yesterday:|:
wind0chill-mmin|11.3|// outdoor wind chill temperature min of this month:|:
wind0chill-mmintime|20161101055141|// outdoor wind chill temperature timestamp min of this month:|:
wind0chill-mmax|24.6|// outdoor wind chill temperature max of this month:|:
wind0chill-mmaxtime|20161108124911|// outdoor wind chill temperature timestamp max of this month:|:
wind0chill-ymin|10.7|// outdoor wind chill temperature min of this year:|:
wind0chill-ymintime|20161031180818|// outdoor wind chill temperature timestamp min of this year:|:
wind0chill-ymax|24.8|// outdoor wind chill temperature max of this year:|:
wind0chill-ymaxtime|20161024140920|// outdoor wind chill temperature timestamp max of this year:|:
wind0chill-amin|10.7|// outdoor wind chill temperature min of all time:|:
wind0chill-amintime|20161031180818|// outdoor wind chill temperature timestamp min of all time:|:
wind0chill-amax|24.8|// outdoor wind chill temperature max of all time:|:
wind0chill-amaxtime|20161024140920|// outdoor wind chill temperature timestamp max of all time:|:
wind0chill-starttime|20161019001302|// outdoor wind chill temperature timestamp of first recorded data:|:
rain0rate-act|0.0|// rain rate most recent:|:
rain0rate-val5|0.0|// rain rate value 5 minutes ago:|:
rain0rate-val10|0.0|// rain rate value 10 minutes ago:|:
rain0rate-val15|0.0|// rain rate value 15 minutes ago:|:
rain0rate-val30|--|// rain rate value 30 minutes ago:|:
rain0rate-val60|--|// rain rate value 60 minutes ago:|:
rain0rate-hmin|0.0|// rain rate min of this hour:|:
rain0rate-hmintime|20161115220001|// rain rate timestamp min of this hour:|:
rain0rate-hmax|0.0|// rain rate max of this hour:|:
rain0rate-hmaxtime|20161115220001|// rain rate timestamp max of this hour:|:
rain0rate-dmin|0.0|// rain rate min of today:|:
rain0rate-dmintime|20161115000000|// rain rate timestamp min of today:|:
rain0rate-dmax|0.0|// rain rate max of today:|:
rain0rate-dmaxtime|20161115000000|// rain rate timestamp max of today:|:
rain0rate-ydmin|0.0|// rain rate min of yesterday:|:
rain0rate-ydmintime|20161114000001|// rain rate timestamp min of yesterday:|:
rain0rate-ydmax|0.0|// rain rate max of yesterday:|:
rain0rate-ydmaxtime|20161114000001|// rain rate timestamp max of yesterday:|:
rain0rate-mmin|0.0|// rain rate min of this month:|:
rain0rate-mmintime|20161101000000|// rain rate timestamp min of this month:|:
rain0rate-mmax|1.0|// rain rate max of this month:|:
rain0rate-mmaxtime|20161106111539|// rain rate timestamp max of this month:|:
rain0rate-ymin|0.0|// rain rate min of this year:|:
rain0rate-ymintime|20161019001300|// rain rate timestamp min of this year:|:
rain0rate-ymax|13.7|// rain rate max of this year:|:
rain0rate-ymaxtime|20161031115218|// rain rate timestamp max of this year:|:
rain0rate-amin|0.0|// rain rate min of all time:|:
rain0rate-amintime|20161019001300|// rain rate timestamp min of all time:|:
rain0rate-amax|13.7|// rain rate max of all time:|:
rain0rate-amaxtime|20161031115218|// rain rate timestamp max of all time:|:
rain0rate-starttime|20161019001300|// rain rate timestamp of first recorded data:|:
rain0total-act|92.5|// rain most recent:|:
rain0total-val5|92.5|// rain value 5 minutes ago:|:
rain0total-val10|92.5|// rain value 10 minutes ago:|:
rain0total-val15|92.5|// rain value 15 minutes ago:|:
rain0total-val30|--|// rain value 30 minutes ago:|:
rain0total-val60|--|// rain value 60 minutes ago:|:
rain0total-hmin|92.5|// rain min of this hour:|:
rain0total-hmintime|20161019001300|// rain timestamp min of this hour:|:
rain0total-hmax|0.0|// rain max of this hour:|:
rain0total-hmaxtime|20161019001300|// rain timestamp max of this hour:|:
rain0total-dmin|92.5|// rain min of today:|:
rain0total-dmintime|20161019001300|// rain timestamp min of today:|:
rain0total-dmax|0.0|// rain max of today:|:
rain0total-dmaxtime|20161019001300|// rain timestamp max of today:|:
rain0total-ydmin|92.5|// rain min of yesterday:|:
rain0total-ydmintime|--|// rain timestamp min of yesterday:|:
rain0total-ydmax|0.0|// rain max of yesterday:|:
rain0total-ydmaxtime|--|// rain timestamp max of yesterday:|:
rain0total-mmin|92.5|// rain min of this month:|:
rain0total-mmintime|20161019001300|// rain timestamp min of this month:|:
rain0total-mmax|2.3|// rain max of this month:|:
rain0total-mmaxtime|20161019001300|// rain timestamp max of this month:|:
rain0total-ymin|92.5|// rain min of this year:|:
rain0total-ymintime|20161019001300|// rain timestamp min of this year:|:
rain0total-ymax|55.7|// rain max of this year:|:
rain0total-ymaxtime|20161019001300|// rain timestamp max of this year:|:
rain0total-amin|92.5|// rain min of all time:|:
rain0total-amintime|20161019001300|// rain timestamp min of all time:|:
rain0total-amax|55.7|// rain max of all time:|:
rain0total-amaxtime|20161019001300|// rain timestamp max of all time:|:
rain0total-starttime|20161019001300|// rain timestamp of first recorded data:|:
uv0index-act|--|// uv index most recent:|:
uv0index-val5|--|// uv index value 5 minutes ago:|:
uv0index-val10|--|// uv index value 10 minutes ago:|:
uv0index-val15|--|// uv index value 15 minutes ago:|:
uv0index-val30|--|// uv index value 30 minutes ago:|:
uv0index-val60|--|// uv index value 60 minutes ago:|:
uv0index-hmin|--|// uv index min of this hour:|:
uv0index-hmintime|19691220121321|// uv index timestamp min of this hour:|:
uv0index-hmax|--|// uv index max of this hour:|:
uv0index-hmaxtime|19691220121321|// uv index timestamp max of this hour:|:
uv0index-dmin|--|// uv index min of today:|:
uv0index-dmintime|19691220121321|// uv index timestamp min of today:|:
uv0index-dmax|--|// uv index max of today:|:
uv0index-dmaxtime|19691220121321|// uv index timestamp max of today:|:
uv0index-ydmin|--|// uv index min of yesterday:|:
uv0index-ydmintime|19691220121321|// uv index timestamp min of yesterday:|:
uv0index-ydmax|--|// uv index max of yesterday:|:
uv0index-ydmaxtime|19691220121321|// uv index timestamp max of yesterday:|:
uv0index-mmin|--|// uv index min of this month:|:
uv0index-mmintime|19691220121321|// uv index timestamp min of this month:|:
uv0index-mmax|--|// uv index max of this month:|:
uv0index-mmaxtime|19691220121321|// uv index timestamp max of this month:|:
uv0index-ymin|--|// uv index min of this year:|:
uv0index-ymintime|19691220121321|// uv index timestamp min of this year:|:
uv0index-ymax|--|// uv index max of this year:|:
uv0index-ymaxtime|19691220121321|// uv index timestamp max of this year:|:
uv0index-amin|--|// uv index min of all time:|:
uv0index-amintime|19691220121321|// uv index timestamp min of all time:|:
uv0index-amax|--|// uv index max of all time:|:
uv0index-amaxtime|19691220121321|// uv index timestamp max of all time:|:
uv0index-starttime|19691220121321|// uv index timestamp of first recorded data:|:
sol0rad-act|--|// solar rad most recent:|:
sol0rad-val5|--|// solar rad value 5 minutes ago:|:
sol0rad-val10|--|// solar rad value 10 minutes ago:|:
sol0rad-val15|--|// solar rad value 15 minutes ago:|:
sol0rad-val30|--|// solar rad value 30 minutes ago:|:
sol0rad-val60|--|// solar rad value 60 minutes ago:|:
sol0rad-hmin|--|// solar rad min of this hour:|:
sol0rad-hmintime|19691220121321|// solar rad timestamp min of this hour:|:
sol0rad-hmax|--|// solar rad max of this hour:|:
sol0rad-hmaxtime|19691220121321|// solar rad timestamp max of this hour:|:
sol0rad-dmin|--|// solar rad min of today:|:
sol0rad-dmintime|19691220121321|// solar rad timestamp min of today:|:
sol0rad-dmax|--|// solar rad max of today:|:
sol0rad-dmaxtime|19691220121321|// solar rad timestamp max of today:|:
sol0rad-ydmin|--|// solar rad min of yesterday:|:
sol0rad-ydmintime|19691220121321|// solar rad timestamp min of yesterday:|:
sol0rad-ydmax|--|// solar rad max of yesterday:|:
sol0rad-ydmaxtime|19691220121321|// solar rad timestamp max of yesterday:|:
sol0rad-mmin|--|// solar rad min of this month:|:
sol0rad-mmintime|19691220121321|// solar rad timestamp min of this month:|:
sol0rad-mmax|--|// solar rad max of this month:|:
sol0rad-mmaxtime|19691220121321|// solar rad timestamp max of this month:|:
sol0rad-ymin|--|// solar rad min of this year:|:
sol0rad-ymintime|19691220121321|// solar rad timestamp min of this year:|:
sol0rad-ymax|--|// solar rad max of this year:|:
sol0rad-ymaxtime|19691220121321|// solar rad timestamp max of this year:|:
sol0rad-amin|--|// solar rad min of all time:|:
sol0rad-amintime|19691220121321|// solar rad timestamp min of all time:|:
sol0rad-amax|--|// solar rad max of all time:|:
sol0rad-amaxtime|19691220121321|// solar rad timestamp max of all time:|:
sol0rad-starttime|19691220121321|// solar rad timestamp of first recorded data:|:
rain0total-daysum|0.0|// rain total today:|:
rain0total-monthsum|2.3|// rain total this month:|:
rain0total-yearsum|55.7|// rain total this year:|:
rain0total-ydaysum|0.0|// rain total yesterday:|:
rain0total-sum60|0.0|// rain total last 60 minutes:|:
'; // END_OF_RAW_DATA_LINES;
// end of generation script
// put data in  array
$WX = array();
global $WX;
$WXComment = array();
$data = explode(":|:",$rawdatalines);
$nscanned = 0;
foreach ($data as $v => $line) {
  list($vname,$vval,$vcomment) = explode("|",trim($line).'|||');
  if ($vname <> "" and strpos($vval,'$') === false) {
    $WX[$vname] = trim($vval);
    if($vcomment <> "") { $WXComment[$vname] = trim($vcomment); }
  $nscanned++;
if(isset($_REQUEST['debug'])) {
  print "<!-- loaded $nscanned $WXsoftware \$WX[] entries -->\n";
if (isset($_REQUEST["sce"]) and strtolower($_REQUEST["sce"]) == "dump" ) {
  print "<pre>\n";
  print "// \$WX[] array size = $nscanned entries.\n";
  foreach ($WX as $key => $val) {
	  $t =  "\$WX['$key'] = '$val';";
	  if(isset($WXComment[$key])) {$t .=  " $WXComment[$key]"; }
	  print "$t\n";
  print "</pre>\n";
if(file_exists("MB-defs.php")) { include_once("MB-defs.php"); }
?><?php
// this is the working section of the wxtrends.php page from the
// Carterlake/AJAX/PHP templates from http://saratoga-weather.org/template/
// Version 1.00 - Initial PHP version release
// Version 1.01 - minor fixes
// Version 1.02 - fixed formatRecord for records without &deg; in record string
// Version 1.03 - fixed adjustDate to handle 2 and 4 digit dates
// Version 1.04 - 25-Jun-2008 - now uses testtags.php for data + translation features added
// Version 1.05 - 03-Jun-2010 - replaced deprecated split() with explode()
// Version 1.06 - 08-Aug-2011 - adapted for Meteohub use - needs yesterday.php for yesterday values
// Version 1.07 - 18-Feb-2011 - fixed Notice: errata and one short php tag
// Version 1.08 - 08-Mar-2013 - adapted for Meteobridge use
print "<!-- begin MH-trends-inc.php V1.08 08-Mar-2013 -->\n";
/* --------------------------------------------------------
Note: this trends-inc.php REPLACES the need for WD to upload trends-inc.txt -> trends-inc.html
Make sure you have testtags.txt -> testtags.php at version 1.02 or higher.
Make sure you have these in Settings.php:
$SITE['uomDistance'] = ' miles';  // or ' km' -- used for Wind Run display
$SITE['WDdateMDY'] = true; // for WD date format of month/day/year.  =false for day/month/year
$SITE['dateOnlyFormat'] = 'd-M-Y'; // for 31-Mar-2008 or 'j/n/Y' for Euro format
otherwise the defaults below will be used.
------------------------------------------------------------ */
// --- default settings -----------(will be overriden by Settings.php)---------------
$uomTemp = '&deg;F';
$uomBaro = ' inHg';
$uomWind = ' mph';
$uomRain = ' in';
$uomPerHour = '/hr';
$uomDistance = ' miles';
$timeFormat = 'd-M-Y g:ia';  // 31-Mar-2006 6:35pm
//$timeFormat = 'd-M-Y H:i';   // 31-Mar-2006 18:35
$timeOnlyFormat = 'g:ia';    // h:mm[am|pm];
//$timeOnlyFormat = 'H:i';     // hh:mm
$dateOnlyFormat = 'd-M-Y';   // d-Mon-YYYY
$WDdateMDY = true;     // true=dates by WD are 'month/day/year'
//                     // false=dates by WD are 'day/month/year'
$ourTZ = "PST8PDT";  //NOTE: this *MUST* be set correctly to
// translate UTC times to your LOCAL time for the displays.
$haveUV   = true;        // set to false if no UV sensor
$haveSolar = true;       // set to false if no Solar sensor
$graphImageDir = './'; 
// allow viewing of generated source
if ( isset($_REQUEST['sce']) && strtolower($_REQUEST['sce']) == 'view' ) {
//--self downloader --
   $filenameReal = __FILE__;
   $download_size = filesize($filenameReal);
   header('Pragma: public');
   header('Cache-Control: private');
   header('Cache-Control: no-cache, must-revalidate');
   header("Content-type: text/plain");
   header("Accept-Ranges: bytes");
   header("Content-Length: $download_size");
   header('Connection: close');
   readfile($filenameReal);
   exit;
// overrides from Settings.php if available
include_once("Settings.php");
include_once("common.php");
if (isset($SITE['WXtags'])) {
  include_once($SITE['WXtags']);
global $SITE;
if (isset($SITE['uomTemp'])) 	{$uomTemp = $SITE['uomTemp'];}
if (isset($SITE['uomBaro'])) 	{$uomBaro = $SITE['uomBaro'];}
if (isset($SITE['uomWind'])) 	{$uomWind = $SITE['uomWind'];}
if (isset($SITE['uomRain'])) 	{$uomRain = $SITE['uomRain'];}
if (isset($SITE['uomPerHour'])) {$uomPerHour = $SITE['uomPerHour'];}
if (isset($SITE['uomDistance'])) {$uomDistance = $SITE['uomDistance'];}
if (isset($SITE['timeFormat'])) {$timeFormat = $SITE['timeFormat'];}
if (isset($SITE['timeOnlyFormat'])) {$timeOnlyFormat = $SITE['timeOnlyFormat'];}
if (isset($SITE['dateOnlyFormat'])) {$dateOnlyFormat = $SITE['dateOnlyFormat'];}
if (isset($SITE['WDdateMDY']))  {$WDdateMDY = $SITE['WDdateMDY'];}
if (isset($SITE['tz'])) 		{$ourTZ = $SITE['tz'];}
if (isset($SITE['UV'])) 		{$haveUV = $SITE['UV'];}
if (isset($SITE['SOLAR'])) 		{$haveSolar = $SITE['SOLAR'];}
if(isset($SITE['graphImageDir'])) {$graphImageDir = $SITE['graphImageDir']; }
// end of overrides from Settings.php
// testing parameters
$DebugMode = false;
if (isset($_REQUEST['debug'])) {$DebugMode = strtolower($_REQUEST['debug']) == 'y'; }
if (isset($_REQUEST['UV'])) {$haveUV = $_REQUEST['UV'] <> '0';}
if (isset($_REQUEST['solar'])) {$haveSolar = $_REQUEST['solar'] <> '0';}
<h2><?php echo langtrans('Trends as of'); ?> <span class="ajax" id="ajaxdate"><?php echo adjustWDdate($date); ?></span> 
<span class="ajax" id="ajaxindicator"><?php langtrans('at'); ?></span> 
<span class="ajax" id="ajaxtime"><?php echo adjustWDtime($time); ?></span> </h2>
<p>&nbsp;</p>
<table width="99%" cellpadding="0" cellspacing="0" border="0">
<tr class="table-top" style="text-align: center">
<td><?php echo langtrans('TIME'); ?></td>
<td><?php echo langtrans('TEMP'); ?><br/> <?php echo $uomTemp; ?></td>
<td><?php echo langtrans('WIND SPEED'); ?><br/> <?php echo $uomWind; ?></td>
<td><?php echo langtrans('WIND DIR'); ?><br/> &nbsp;</td>
<td><?php echo langtrans('HUMIDITY'); ?><br/> %</td>
<td><?php echo langtrans('PRESSURE'); ?><br/> <?php echo $uomBaro; ?></td>
<td><?php echo langtrans('RAIN'); ?><br/> <?php echo $uomRain; ?></td>
</tr>
<tr class="column-light" style="text-align: center">
<td><?php echo langtrans('Current'); ?></td>
<td><span class="ajax" id="ajaxtempNoU"><?php echo $temp0minuteago; ?></span></td>
<td><span class="ajax" id="ajaxwindNoU"><?php echo $wind0minuteago; ?></span></td>
<td><span class="ajax" id="ajaxwinddir"><?php langtrans(trim($dir0minuteago)); ?></span></td>
<td><span class="ajax" id="ajaxhumidity"><?php echo $hum0minuteago; ?></span></td>
<td><span class="ajax" id="ajaxbaroNoU"><?php echo $baro0minuteago; ?></span></td>
<td><span class="ajax" id="ajaxrainNoU"><?php echo $rain0minuteago; ?></span></td>
</tr>
<?php if(isset($temp5minuteago)) { ?>
<tr class="column-dark" style="text-align: center">
<td><?php echo langtrans('5 minutes ago'); ?></td>
<td><?php echo $temp5minuteago; ?></td>
<td><?php echo $wind5minuteago; ?></td>
<td><?php langtrans(trim($dir5minuteago)); ?></td>
<td><?php echo $hum5minuteago; ?></td>
<td><?php echo $baro5minuteago; ?></td>
<td><?php echo $rain5minuteago; ?></td>
</tr>
<?php } ?>
<?php if(isset($temp10minuteago)) { ?>
<tr class="column-light" style="text-align: center">
<td><?php echo langtrans('10 minutes ago'); ?></td>
<td><?php echo $temp10minuteago; ?></td>
<td><?php echo $wind10minuteago; ?></td>
<td><?php langtrans(trim($dir10minuteago)); ?></td>
<td><?php echo $hum10minuteago; ?></td>
<td><?php echo $baro10minuteago; ?></td>
<td><?php echo $rain10minuteago; ?></td>
</tr>
<?php } ?>
<?php if(isset($temp15minuteago)) { ?>
<tr class="column-dark" style="text-align: center">
<td><?php echo langtrans('15 minutes ago'); ?></td>
<td><?php echo $temp15minuteago; ?></td>
<td><?php echo $wind15minuteago; ?></td>
<td><?php langtrans(trim($dir15minuteago)); ?></td>
<td><?php echo $hum15minuteago; ?></td>
<td><?php echo $baro15minuteago; ?></td>
<td><?php echo $rain15minuteago; ?></td>
</tr>
<?php } ?>
<?php if(isset($temp30minuteago)) { ?>
<tr class="column-light" style="text-align: center">
<td><?php echo langtrans('30 minutes ago'); ?></td>
<td><?php echo $temp30minuteago; ?></td>
<td><?php echo $wind30minuteago; ?></td>
<td><?php langtrans(trim($dir30minuteago)); ?></td>
<td><?php echo $hum30minuteago; ?></td>
<td><?php echo $baro30minuteago; ?></td>
<td><?php echo $rain30minuteago; ?></td>
</tr>
<?php } ?>
<?php if(isset($temp60minuteago)) { ?>
<tr class="column-dark" style="text-align: center">
<td><?php echo langtrans('60 minutes ago'); ?></td>
<td><?php echo $temp60minuteago; ?></td>
<td><?php echo $wind60minuteago; ?></td>
<td><?php langtrans(trim($dir60minuteago)); ?></td>
<td><?php echo $hum60minuteago; ?></td>
<td><?php echo $baro60minuteago; ?></td>
<td><?php echo $rain60minuteago; ?></td>
</tr>
<?php } ?>
</table>
	  <h1 style="margin: 10px 0;"><?php langtrans('Records and Stats'); ?></h1> 
<table width="99%" cellpadding="0" cellspacing="0" border="0">
<tr class="table-top">
<td colspan="2"><?php echo langtrans('RAIN'); ?></td>
<?php if((isset($dayswithnorain) and isset($dateoflastrainalways)) or
      isset($raincurrentweek) or isset($dayswithrain) or isset($dayswithrainyear)) { ?>
<td colspan="2"><?php echo langtrans('RAIN HISTORY'); ?></td>
<?php } else { ?>
<td colspan="2">&nbsp;</td>
<?php } ?>
</tr>
<tr class="column-light">
<td><?php echo langtrans('Today'); ?></td>
<td><?php echo unUnit($dayrn) . $uomRain; ?> 
(<?php echo unUnit($hourrn) . $uomRain; ?> <?php langtrans('last hour'); ?>) </td>
<?php if(isset($dayswithnorain) and isset($dateoflastrainalways)) { ?>
<td><?php echo langtrans('Today'); ?></td>
<td><?php echo $dayswithnorain . ' '; 
$dayswithnorain!=1?langtrans('days since last rain on'):langtrans('day since last rain on'); ?> 
<?php echo adjustWDdate($dateoflastrainalways) . ' ' . adjustWDtime($timeoflastrainalways); ?></td>
<?php } else { ?>
<td>&nbsp;</td>
<td>&nbsp;</td>
<?php } // end dayswithnorain, dateoflastrainalways ?>
</tr>
<tr class="column-dark">
<td><?php echo langtrans('Yest.'); ?></td>
<td><?php echo unUnit($yesterdayrain) . $uomRain; ?></td>
<?php if(isset($raincurrentweek)) { ?>
  <td><?php echo langtrans('Week'); ?></td>
  <td><?php echo unUnit($raincurrentweek) . $uomRain; ?> <?php langtrans('over last 7 days'); ?>.</td>
<?php } else { ?>
  <td>&nbsp;</td>
  <td>&nbsp;</td>
<?php } ?>
</tr>
<tr class="column-light">
<td><?php echo langtrans('Month'); ?>&nbsp;</td>
<td><?php echo unUnit($monthrn) . $uomRain; ?> 
<?php if(isset($dayswithrain)) { ?> 
  (<?php echo $dayswithrain . ' '; 
  $dayswithrain!=1?langtrans('rain days this month'):langtrans('rain day this month'); ?>)
<?php } ?></td>
<?php if(isset($raintodatemonthago)) { ?>
<td><?php echo langtrans('Month'); ?>&nbsp;</td>
<td><?php echo unUnit($raintodatemonthago) . $uomRain; ?> <?php langtrans('last month'); ?>. </td>
<?php } else { ?>
<td>&nbsp;</td>
<td>&nbsp;</td>
<?php } // end if isset($raintodatemonthago) ?>
</tr>
<tr class="column-dark">
<td><?php echo langtrans('Year'); ?></td>
<td><?php echo unUnit($yearrn) . $uomRain; ?>
<?php if (isset($dayswithrainyear)) { ?>
  <?php echo $dayswithrainyear . ' '; 
  $dayswithrainyear!=1?langtrans('rain days this year'):langtrans('rain day this year'); ?>)
<?php } ?></td>
<?php if(isset($raintodateyearago)) { ?>
<td><?php echo langtrans('Year'); ?></td>
<td><?php echo unUnit($raintodateyearago) . $uomRain; ?> <?php langtrans('total last year at this time'); ?>.</td>
<?php } else { ?>
<td>&nbsp;</td>
<td>&nbsp;</td>
<?php } // end if isset($raintodateyearago) ?>
</tr>
<tr class="table-top">
<td colspan="2"><?php echo langtrans('TEMPERATURE HIGHS'); ?></td>
<td colspan="2"><?php echo langtrans('TEMPERATURE LOWS'); ?></td>
</tr>
<tr class="column-light">
<td><?php echo langtrans('Today'); ?></td>
<td><?php echo unUnit($maxtemp).' '.$uomTemp; ?> <?php langtrans('at'); ?> <?php echo adjustWDtime($maxtempt); ?></td>
<td><?php echo langtrans('Today'); ?></td>
<td><?php echo unUnit($mintemp). " $uomTemp"; ?> <?php langtrans('at'); ?> <?php echo adjustWDtime($mintempt); ?></td>
</tr>
<?php if(isset($maxtempyest) and isset($mintempyest)) { ?>
<tr class="column-dark">
<td><?php echo langtrans('Yest.'); ?></td>
<td><?php echo unUnit($maxtempyest).' '.$uomTemp; ?> <?php langtrans('at'); ?> <?php echo adjustWDtime($maxtempyestt); ?></td>
<td><?php echo langtrans('Yest.'); ?></td>
<td><?php echo unUnit($mintempyest). " $uomTemp"; ?> <?php langtrans('at'); ?> <?php echo adjustWDtime($mintempyestt); ?></td>
</tr>
<?php } // end for yesterday min/max temp row ?>
<tr class="column-light">
<td><?php echo langtrans('Month'); ?>&nbsp;</td>
<td><?php echo unUnit($mrecordhightemp).' '.$uomTemp; ?> <?php langtrans('on'); ?> 
<?php echo formatDateYMD($mrecordhightempyear,$mrecordhightempmonth,$mrecordhightempday); ?></td>
<td><?php echo langtrans('Month'); ?>&nbsp;</td>
<td><?php echo unUnit($mrecordlowtemp). " $uomTemp"; ?> <?php langtrans('on'); ?> 
<?php echo formatDateYMD($mrecordlowtempyear,$mrecordlowtempmonth,$mrecordlowtempday); ?></td>
</tr>
<tr class="column-dark">
<td><?php echo langtrans('Year'); ?></td>
<td><?php echo unUnit($yrecordhightemp).' '.$uomTemp; ?> <?php langtrans('on'); ?> 
<?php echo formatDateYMD($yrecordhightempyear,$yrecordhightempmonth,$yrecordhightempday); ?>
</td>
<td><?php echo langtrans('Year'); ?></td>
<td><?php echo unUnit($yrecordlowtemp). " $uomTemp"; ?> <?php langtrans('on'); ?> 
<?php echo formatDateYMD($yrecordlowtempyear,$yrecordlowtempmonth,$yrecordlowtempday); ?>
</td>
</tr>
<tr class="table-top">
<td colspan="2"><?php echo langtrans('BAROMETER LOWS'); ?></td>
<td colspan="2"><?php echo langtrans('WIND CHILL LOWS'); ?></td>
</tr>
<tr class="column-light">
<td><?php echo langtrans('Today'); ?></td>
<td><?php echo unUnit($lowbaro). $uomBaro; ?> <?php langtrans('at'); ?> <?php echo adjustWDtime($lowbarot); ?></td>
<td><?php echo langtrans('Today'); ?></td>
<td><?php echo unUnit($minwindch). " $uomTemp"; ?> <?php langtrans('at'); ?> <?php echo adjustWDtime($minwindcht); ?></td>
</tr>
<?php if(isset($minbaroyest) and isset($minchillyest)) { ?>
<tr class="column-dark">
<td><?php echo langtrans('Yest.'); ?></td>
<td><?php echo unUnit($minbaroyest). $uomBaro; ?> <?php langtrans('at'); ?> <?php echo adjustWDtime($minbaroyestt); ?></td>
<td><?php echo langtrans('Yest.'); ?></td>
<td><?php echo unUnit($minchillyest). " $uomTemp"; ?> <?php langtrans('at'); ?> <?php echo adjustWDtime($minchillyestt); ?></td>
</tr>
<?php } // end both minbaro and minwindchill for yesterday exist ?>
<tr class="column-light">
<td><?php echo langtrans('Month'); ?>&nbsp;</td>
<td><?php echo unUnit($mrecordlowbaro). $uomBaro; ?> <?php langtrans('on'); ?> 
<?php echo formatDateYMD($mrecordlowbaroyear,$mrecordlowbaromonth,$mrecordlowbaroday); ?></td>
<td><?php echo langtrans('Month'); ?>&nbsp;</td>
<td><?php echo unUnit($mrecordlowchill). " $uomTemp"; ?> <?php langtrans('on'); ?> 
<?php echo formatDateYMD($mrecordlowchillyear,$mrecordlowchillmonth,$mrecordlowchillday); ?></td>
</tr>
<tr class="column-dark">
<td><?php echo langtrans('Year'); ?></td>
<td><?php echo unUnit($yrecordlowbaro). $uomBaro; ?> <?php langtrans('on'); ?> 
<?php echo formatDateYMD($yrecordlowbaroyear,$yrecordlowbaromonth,$yrecordlowbaroday); ?></td>
<td><?php echo langtrans('Year'); ?></td>
<td><?php echo unUnit($yrecordlowchill). " $uomTemp"; ?> <?php langtrans('on'); ?> 
<?php echo formatDateYMD($yrecordlowchillyear,$yrecordlowchillmonth,$yrecordlowchillday); ?>
</td>
</tr>
<?php if(false and $haveSolar) { 
####################################
# Following section only valid if station has Solar sensor
<tr class="table-top">
<td colspan="2"><?php echo langtrans('EVAPOTRANSPIRATION'); ?></td>
<td colspan="2"><?php echo langtrans('RAIN'); ?></td>
</tr>
<tr class="column-light">
<td><?php echo langtrans('Today'); ?></td>
<td><?php echo unUnit($VPet) . $uomRain; ?></td>
<td><?php echo langtrans('Today'); ?></td>
<td><?php echo unUnit($dayrn) . $uomRain; ?></td>
</tr>
<tr class="column-dark">
<td><?php echo langtrans('Yest.'); ?></td>
<td><?php echo unUnit($yesterdaydaviset) . $uomRain; ?></td>
<td><?php echo langtrans('Yest.'); ?></td>
<td><?php echo unUnit($yesterdayrain) . $uomRain; ?></td>
</tr>
<tr class="column-light">
<td><?php echo langtrans('Month'); ?>&nbsp;</td>
<td><?php echo unUnit($VPetmonth) . $uomRain; ?></td>
<td><?php echo langtrans('Month'); ?>&nbsp;</td>
<td><?php echo unUnit($monthrn) . $uomRain; ?></td>
</tr>
<?php } // end if haveSolar 
#############################
<?php
####################### solar and UV depending on $haveSolar and $haveUV settings
if ($haveSolar or $haveUV) {
<tr class="table-top">
<?php if ($haveSolar) { ?>
<td colspan="2"><?php echo langtrans('SOLAR HIGHS'); ?></td>
<?php }
    if ($haveUV) { ?>
<td colspan="2"><?php echo langtrans('UV HIGHS'); ?></td>
<?php } ?>
</tr>
<tr class="column-light">
<?php if ($haveSolar) { ?>
<td><?php echo langtrans('Today'); ?></td>
<td><?php echo $highsolar; ?> W/m<sup>2</sup> <?php langtrans('at'); ?> <?php echo adjustWDtime($highsolartime); ?></td>
<?php }
    if ($haveUV) { ?>
<td><?php echo langtrans('Today'); ?></td>
<td><?php echo $highuv; ?> index <?php langtrans('at'); ?> <?php echo adjustWDtime($highuvtime); ?></td>
<?php } ?>
</tr>
<tr class="column-dark">
<?php if ($haveSolar and isset($highsolaryest)) { ?>
<td><?php echo langtrans('Yest.'); ?></td>
<td><?php echo $highsolaryest; ?> W/m<sup>2</sup> <?php langtrans('at'); ?> <?php echo adjustWDtime($highsolaryesttime); ?></td>
<?php }
    if ($haveUV and isset($highuvyest)) { ?>
<td><?php echo langtrans('Yest.'); ?></td>
<td><?php echo $highuvyest; ?> index <?php langtrans('at'); ?> <?php echo adjustWDtime($highuvyesttime); ?></td>
<?php } ?>
</tr>
<?php
} // end $haveSolar or $haveUV
#################### end conditional Solar and/or UV display
</table>
	  <h1 style="margin: 10px 0;"><?php langtrans('Wind Data'); ?></h1> 
<table width="99%" cellpadding="0" cellspacing="0" border="0">
<tr class="table-top">
<td colspan="2"><?php echo langtrans('CURRENT'); ?></td>
<td rowspan="10" align="center">
  <?php if(file_exists($graphImageDir."windrose.png")) { ?>
  <img src="<?php echo $graphImageDir; ?>windrose.png" width="300" height="300" alt="Wind direction plot"/>
  <?php } else {
	//  print "Windrose plot file ${graphImageDir}windrose.png not found.\n";
	print "&nbsp;";
  } // end no windrose.png file 
  ?>
</td>
</tr>
<tr class="column-light">
<td><?php echo langtrans('Now'); ?></td>
<td><?php echo unUnit($avgspd).$uomWind; ?> <?php langtrans($dirlabel); ?></td>
</tr>
<tr class="column-dark">
<td><?php echo langtrans('Gust'); ?></td>
<td><?php echo unUnit($gstspd).$uomWind; ?> <?php langtrans($dirlabel); ?></td>
</tr>
<tr class="column-light">
<td><?php echo langtrans('Gust/hr'); ?></td>
<td><?php echo unUnit($maxgsthr).$uomWind; ?></td>
</tr>
<tr class="table-top">
<td colspan="2"><?php echo langtrans('WIND GUST HIGHS'); ?></td>
</tr>
<tr class="column-light">
<td><?php echo langtrans('Today'); ?></td>
<td><?php echo unUnit($maxgst) . $uomWind; ?> <?php langtrans($maxgstdirectionletter); ?> <?php langtrans('at'); ?> <?php echo adjustWDtime($maxgstt); ?></td>
</tr>
<?php if (isset($maxgustyest)) { ?>
<tr class="column-dark">
<td><?php echo langtrans('Yest.'); ?></td>
<td><?php echo unUnit($maxgustyest) . $uomWind; ?> <?php langtrans('at'); ?> <?php echo adjustWDtime($maxgustyestt); ?></td>
</tr>
<?php } // end $maxgustyest ?>
<tr class="column-light">
<td><?php echo langtrans('Month'); ?>&nbsp;</td>
<td><?php echo unUnit($mrecordwindgust) . $uomWind; ?> <?php langtrans('on'); ?> 
<?php echo formatDateYMD($mrecordhighgustyear,$mrecordhighgustmonth,$mrecordhighgustday); ?>
</td>
</tr>
<tr class="column-dark">
<td><?php echo langtrans('Year'); ?></td>
<td><?php echo unUnit($yrecordwindgust) . $uomWind; ?> <?php langtrans('on'); ?> 
<?php echo formatDateYMD($yrecordhighgustyear,$yrecordhighgustmonth,$yrecordhighgustday); ?>
</td>
</tr>
</table>
<!-- end of trends-inc.php -->
<?php 
//=========================================================================
// change the hh:mm AM/PM to h:mmam/pm format or format spec by $timeOnlyFormat
function adjustWDtime ( $WDtime ) {
  global $timeOnlyFormat,$DebugMode;
  if ($WDtime == "00:00: AM") { return ''; }
  $t = explode(':',$WDtime);
  if(!isset($t[1])) { return( $WDtime ); }
  if (preg_match('/pm/i',$WDtime)) { $t[0] = $t[0] + 12; }
  if ($t[0] > 23) {$t[0] = 12; }
  if (preg_match('/^12.*am/i',$WDtime)) { $t[0] = 0; }
  $t2 = join(':',$t); // put time back to gether;
  $t2 = preg_replace('/[^\d\:]/is','',$t2); // strip out the am/pm if any
  $r = date($timeOnlyFormat , strtotime($t2));
  if ($DebugMode) {
    $r = "<!-- adjustWDtime WDtime='$WDtime' t2='$t2' -->" . $r;
    $r = '<span style="color: green;">' . $r . '</span>'; 
  return ($r);
//=========================================================================
// strip trailing units from a measurement
// i.e. '30.01 in. Hg' becomes '30.01'
function unUnit ($data) {
  global $DebugMode;
  preg_match('/([\d\.\,\+\-]+)/',$data,$t);
   $r = $t[1];
  if ($DebugMode) {
    $r = "<!-- unUnit data='$data' -->" . $r;
    $r = '<span style="color: green;">' . $r . '</span>'; 
  return ($r);
//=========================================================================
// adjust WD date to desired format
function adjustWDdate ($WDdate) {
  global $timeFormat,$timeOnlyFormat,$dateOnlyFormat,$WDdateMDY,$DebugMode;
  $d = explode('/',$WDdate);
  if(!isset($d[2])) { return($WDdate); }
  if ($d[2] > 70 and $d[2] <= 99) {$d[2] += 1900;} // 2 digit dates 70-99 are 1970-1999
  if ($d[2] < 99) {$d[2] += 2000; } // 2 digit dates (left) are assumed 20xx dates.
  if ($WDdateMDY) {
    $new = sprintf('%04d-%02d-%02d',$d[2],$d[0],$d[1]); //  M/D/YYYY -> YYYY-MM-DD
  } else {
    $new = sprintf('%04d-%02d-%02d',$d[2],$d[1],$d[0]); // D/M/YYYY -> YYYY-MM-DD
  $r = date($dateOnlyFormat,strtotime($new));
  if ($DebugMode) {
    $r = "<!-- adjustDate WDdate='$WDdate', WDdateUSA='$WDdateMDY' new='$new' -->" . $r;
    $r = '<span style="color: green;">' . $r . '</span>'; 
  return ($r);
//=========================================================================
// formatDate from Y, M, D
function formatDateYMD ( $Y, $M, $D) {
  global $timeFormat,$timeOnlyFormat,$dateOnlyFormat,$WDdateMDY,$DebugMode;
  $t = mktime(0,0,0,$M,$D,$Y);
  $r = date($dateOnlyFormat,$t);
  if ($DebugMode) {
    $r = "<!-- formatDateYMD Y='$Y', M='$M', D='$D' -->" . $r;
    $r = '<span style="color: green;">' . $r . '</span>'; 
  return ($r);
//=========================================================================
// format weather record like:
//   '56.1&deg;F  on: Mar 01 2008'
//   '22.5&deg;C  on: 01 Mar 2008'
//   to using the uom values and date format
function reformatRecord ( $record ) {
  global $uomTemp,$timeFormat,$timeOnlyFormat,$dateOnlyFormat,$WDdateMDY,$DebugMode;
// old:  preg_match('|(.*?)\&deg;(.*)\s+on\:\s+(\S+) (\S+) (\S+)|is',$record,$vals);
  preg_match('|([\d\,\.\-]+)[\&deg;]*(.*)\s+on\:\s+(\S+) (\S+) (\S+)|is',$record,$vals);
    [0] => 62.3&deg;F  on: Mar 03 2008
    [1] => 62.3
    [2] => F 
    [3] => Mar
    [4] => 03
    [5] => 2008
  $t = '';
  if ($DebugMode) {
    $t = "<!-- reformatRecord in='$record' vals\n" . print_r($vals,true) . " -->\n";
  $d = $vals[3] . ' ' . $vals[4] . ' ' . $vals[5];
  $d = date($dateOnlyFormat,strtotime($d));
  $r = $t . $vals[1] . ' ' . $uomTemp . ' ' . langtransstr('on') . ' ' . $d;
  if ($DebugMode) {
    $r = '<span style="color: green;">' . $r . '</span>'; 
  return ($r);
?><?php
############################################################################
# A Project of TNET Services, Inc. and Saratoga-Weather.org (WD-World-ML template set)
############################################################################
#	Project:	Sample Included Website Design
#	Module:		menubar.php
#	Purpose:	Provides the menubar for the system
# 	Authors:	Kevin W. Reed <kreed@tnet.com>
#				TNET Services, Inc.
#               Ken True <webmaster@saratoga-weather.org>
#               Saratoga-Weather.org
# 	Copyright:	(c) 1992-2007 Copyright TNET Services, Inc.
############################################################################
# This program is free software; you can redistribute it and/or
# modify it under the terms of the GNU General Public License
# as published by the Free Software Foundation; either version 2
# of the License, or (at your option) any later version.
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
# You should have received a copy of the GNU General Public License
# along with this program; if not, write to the Free Software
# Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA
############################################################################
#	This document uses Tab 4 Settings
############################################################################
require_once("Settings.php");
require_once("common.php");
############################################################################
<!-- menubar -->
<div class="doNotPrint">
      <div class="leftSideBar">
        <p class="sideBarTitle"><?php langtrans('Weather Menu'); ?></p>
<?php 
// NOTE: when adding new links to the site, put them in as <li></li> entries in
//   the <ul></ul> shown below.  The order of the links is the order they appear
//   in the left navigation menu.  
// Be careful to only use html as shown below, otherwise the program that
//   automatically shows which page you're on won't work quite right.
// Don't use single-quotes in the following area unless you prefix it with a 
//   backslash.
//   Correct:  "Steve\'s page"
//   Wrong:    "Steve's page"    <=== this will cause a PHP error in menubar.php
// Be sure to include a title="..." tag so folks can see more info via a tooltip
//   as they mouse over the link in the menu.
//Don't change the next line in any way
$html = '
        <ul>
          <li><a href="wxindex.php" title="Home">Home</a></li>
          <li><a href="wxforecast.php" title="5-day Forecast">Forecast</a></li>
          <li><a href="wxsimforecast.php" title="WXSIM Forecast">WXSIM Forecast</a></li>
          <li><a href="wxradar.php" title="Radar">Radar</a></li>
          <li><a href="wxadvisory.php" title="Watches, Warnings, Advisories">Advisories</a></li>
          <li><a href="wxtrends.php" title="Daily weather statistics">Daily Stats</a></li>
          <li><a href="wxgraphs.php" title="24, 72, &amp; Monthly Graphs">Graphs</a></li>
          <li><a href="wxastronomy.php" title="Sun and Moon Data">Astronomy</a></li>
          <li><a href="wxlinks.php" title="Useful Links">Links</a></li>
          <li><a href="wxabout.php" title="About This Site">About Us</a></li>
        </ul>
'; // end of links set for site. Don't change this line in any way
 if (isset($SITE['flyoutmenu']) and $SITE['flyoutmenu']) {
   global $FlyoutMenuText;
   global $secondFlyoutMenuText;
   global $thirdFlyoutMenuText;
   print "<div class=\"flyoutmenu\">\n";
   print $secondFlyoutMenuText;
   print "</div>\n";
   print "<p class=\"sideBarTitle\">".langtransstr('Sitemap')."</p>\n";
   print "<div class=\"flyoutmenu\">\n";
   print $FlyoutMenuText;
   print "</div>\n";
   print "<p class=\"sideBarTitle\">".langtransstr('Crete')."</p>\n";
   print "<div class=\"flyoutmenu\">\n";
   print $thirdFlyoutMenuText;
   print "</div>\n";
 } else {
	gen_navlinks($html); // generate the links set with highlight for the current page
<?php 
 if(isset($showSidebar) and $showSidebar) {
    include_once("ajax-sidebar.php");
# Note: add other links and stuff to the left sidebar above the </div><!-- end leftSidebar -->
# as shown in the sample below.
# Keep in mind that the width allowed is about 110px
# if you don't want anything to appear extra here, just delete the lines
# <!-- external links -->
#   down to and including
# <!-- end external links -->
<!-- external links 
<p class="sideBarTitle"><?php langtrans('External Links'); ?></p>
<ul>
   <li><a href="http://meteokrites.gr/stations.php" title="Meteokrites" target="_blank">Meteokrites</a></li>
   <li><a href="http://www.poseidon.hcmr.gr/weather_forecast.php?area_id=gr" title="Poseidon" target="_blank">Poseidon</a></li>
   <li><a href="http://www.xerocamboscreta.com/Meteo.Xero.it.htm" title="Wind Finder" target="_blank">Wind Finder</a></li>
</ul> 
end external links -->
<?php if($SITE['allowThemeSwitch']) { // insert code for theme switcher ?>
  <!-- begin Color Theme Switcher Plugin http://www.642weather.com/weather/scripts.php -->
  <div class="thisPage" style="margin-left: 5px; font-weight: normal;">
  <?php print_css_style_menu(1); ?>
  </div>
  <!-- end Color Theme Switcher Plugin http://www.642weather.com/weather/scripts.php -->
<?php } // end code for theme switcher ?>
      </div><!-- end leftSidebar -->
</div><!-- end doNotPrint -->	
<!-- end of menubar -->
<?php 
if (isset($_REQUEST['show']) and strtolower($_REQUEST['show']) == 'settings') {
  print "<!-- current settings\n" . htmlentities(print_r($SITE,true)) . " -->\n";
// generate navigation links script - Ken True - webmaster@saratoga-weather.org
function gen_navlinks($html) {
 preg_match('|<ul>(.*)</ul>|is', $html, $betweenspan); // find the navigation div
 $rawlinks  = $betweenspan[1]; 
 // Chop up each link and place in array 
 preg_match_all("/<li.*>(.*)<\/li>/Uis", $rawlinks, $betweenspan);  
 $links = $betweenspan[1]; 
 $ourPage = $_SERVER['PHP_SELF'];
 $doDebug = false;
 echo "<!-- this page='$ourPage' -->\n";
 if (isset($_REQUEST['page']) ) { // support testing
   $ourPage = $_REQUEST['page'];
   echo "<!-- using page='$ourPage' as test -->\n";
   $doDebug = true;
 if (isset($_REQUEST['debug']) ) { // support testing
   $doDebug = true;
  $t = pathinfo($ourPage); // extract base filename from link
  if ($doDebug) {print "<!-- pathinfo\n" . print_r($t,true) . "-->\n"; }
  $ourPage = $t['basename'];
// Now generate the code 
 print "<!-- navigation links -->\n";
 print "<ul>\n";
 foreach ($links as $i => $link) {
   if (preg_match('|<a.*href="([^"]+)"[^>]*>(.*)</a>|i',$link,$matches) ) {
	   if($doDebug) {  print "<!-- Matches for i=$i '$link': \n" . print_r($matches,true) . "-->\n"; }
	 //Matches: Array
	 //(
	 //   [0] => <a href="index.php" title="Current Conditions/Home">Home</a>
	 //   [1] => index.php
	 //   [2] => Home
	 //)
	  if ($matches[1] == $ourPage) {
		// we're on our page
		print "<li><span class=\"thisPage\">" . langtransstr($matches[2]) . "</span></li>\n";
	  } else {
	    $t = langtransstr($matches[2]);
		print "<li>" . str_replace($matches[2],$t,$matches[0]) . "</li>\n";
	  }
    } else { // must be just text
      print "<li>" . $link . "</li>\n";
    } // end if has an <a href=
 print "</ul>\n<!-- end of navigation links -->\n";
 } // end of gen_navlinks function
<?php
// plaintext-parser.php script by Ken True - webmaster@saratoga-weather.org
// Version 0.90 - 24-Mar-2007 - Pre-release - testing and commments version
// Version 0.91 - 25-Mar-2007 - fixed day/night icon glitch for translated languages
// Version 0.92 - 27-Mar-2007 - added conditionals for selective printing, optional degrees, and
//                              capitalization for First letter of sentence in translation.
// Version 1.00 - 30-Mar-2007 - changed primary parsing to support IIS, and added minPoP to
//                              display sky condition (with pop) instead of rain icon.
// Version 1.01 - 02-Apr-2007 - support for UTF-8 display, translation of City names, Date format option
// Version 1.02 - 16-May-2007 - minor change to allow operation with plaintext-rss.php
// Version 1.03 - 03-Jun-2007 - Added Wind dir/speed/units forecast and changed table generation method
// Version 1.04 - 27-Jul-2007 - Added Beaufort options for wind speed display
// Version 1.05 - 04-Aug-2007 - Modified Beaufort to use 'mps' or 'm/s' for meters-per-second
// Version 1.06 - 06-Sep-2007 - Added support for charset in lang files + Greek translation
// Version 1.07 - 07-Nov-2007 - Added support for GMT/Zulu time from WXSIM plaintext.txt
// Version 1.08 - 28-Dec-2007 - Added Snow Accumulation stats to PoP line when available
// Version 1.09 - 02-Jan-2008 - Added settings for integration to Carterlake/AJAX/PHP site design and
//                              'not available' message capability
// Version 1.10 - 12-May-2008 - fixed &rArr; to &rarr; for right-arrow in wind display
// Version 1.11 - 29-Jul-2008 - added $maxIcons to control number of icons to display
// Version 1.12 - 09-Aug-2008 - added $showIconsMax parameter (optional) to override $maxIcons
// Version 1.13 - 10-Sep-2008 - added support for multi-char Wind direction (for -pl language)
// Version 1.14 - 11-Jan-2009 - fixed Beaufort and added Snow/Freezing level support 
// Version 1.15 - 14-Jan-2009 - added $tempDegrees symbols for wind chill and heat index text
// Version 1.16 - 05-Feb-2009 - fixed plaintext occasional parsing issue
// Version 1.17 - 18-Jun-2009 - added fix for missing leading space in plaintext.txt lines
// Version 1.18 - 09-Jul-2010 - added support for Humidex and frost forecast optional displays
// Version 1.19 - 12-Aug-2010 - added support for Heat-index and 'hot' icon for Heat-index/humidex above specified values
// Version 1.20 - 18-Oct-2010 - Corrected Frost display wording below icons
// Version 1.21 - 01-Jan-2011 - added support for Wind-chill and 'Cold!' for windchill below specified value
// Version 1.22 - 03-Jan-2011 - added formatting to windchill, heatidx, humidex and frost arrays
// Version 1.23 - 23-Jan-2011 - corrected display for frost when windchill also exists
// Version 1.24 - 15-Feb-2011 - corrected display for snow conditions not being selected
// Version 1.25 - 18-Feb-2011 - added lang=en for optional translation and fixed 'snow likely' not showing snow icon
// Version 1.26 - 22-Feb-2011 - added more Wind-Chill processing for WXSIM 12.8.5+
// Version 1.27 - 01-Oct-2011 - added support for alternative animated icon set from http://www.meteotreviglio.com/
// Version 1.28 - 27-Dec-2011 - added support for RTL languages (Hebrew)
// Version 1.29 - 08-Dec-2012 - added fixes for PHP 5.4
// Version 1.30 - 30-Dec-2013 - fixed deprecated preg_replace /e with preg_replace_callback function
$Version = "plaintext-parser.php Version 1.30 - 30-Dec-2013";
// error_reporting(E_ALL);  // uncomment to turn on full error reporting
// script available at http://saratoga-weather.org/scripts.php
//  
// you may copy/modify/use this script as you see fit,
// no warranty is expressed or implied.
// This script parses the plaintext.txt forecast output from WXSIM 
//  (http://www.wxsim.com/) to create a HTML page that resembles
//  the NOAA NWS point-printable forecast page in the carterlake advforecast.php style.
// output: creates XHTML 1.0-Strict HTML page (or inclusion)
// This script requires the NOAA icons and the icons need to be placed in the path 
// where the original NOAA icons are located: \forecast\images\
// (so make a folder in your web HTML root called "forecast", then make a folder in it 
// called "images", and place the icons in this folder)
// The icon set is available at http://saratoga-weather.org/carterlake-icons.zip 
// If you have the icon set from:
//   http://members.cox.net/carterlakeweather/forecasticons.zip (380K)
// then please download http://saratoga-weather.org/carterlake-icons-addon.zip and
// upload to your /forecast/images directory.  It contains images to support the
// "show sky conditions when chance rain and PoP < $minPoP" logic.
// Options on URL:
//   lang=en          (default) - use English language
//   lang=ZZ          - use 'ZZ' language translation file for conversion from English
//                    note: there must be a plaintext-parser-lang-LL.txt file with the
//                    conversion rules.   A sample Dutch file is included (lang=nl).
//   inc=Y            - omit <HTML><HEAD></HEAD><BODY> and </BODY></HTML> from output
//   heading=n        - (default)='y' suppress printing of heading (forecast city/by/date)
//   icons=n          - (default)='y' suppress printing of the icons+conditions+temp+wind+UV
//   text=n           - (default)='y' suppress printing of the periods/forecast text
//  You can also invoke these options directly in the PHP like this
//    $doInclude = true;
//    include("plaintext-parser.php");  for just the text
//  or ------------
//    $doPrint = false;
//    include("plaintext-parser.php");  for setting up the $WXSIM... variables without printing
//  or ------------
//    $doInclude = true;
//    $doPrintHeading = true;
//    $doPrintIcons = true;
//    $doPrintText = false
//    include("plaintext-parser.php");  include mode, print only heading and icon set
// Variables returned (useful for printing an icon or forecast or two...)
// $WXSIMcity 		- Name of city from WXSIM Forecast header
// $WXSIMstation    - (in settings below) Name of forecaster or weather station
// $WXSIMupdated 	- Time of forecast from WXSIM Forecast header
// The following variables exist for $i=0 to $i= number of forecast periods minus 1
//  a loop of for ($i=0;$i<count($WXSIMday);$i++) { ... } will loop over the available 
//  values.
// $WXSIMday[$i]	- period of forecast (translated)
// $WXSIMtext[$i]	- text of forecast (translated)
// $WXSIMuv[$i]		- UV index value (number)
//      note: you can use 'PPset_UV_string($WXSIMuv[$i])' to get a UV N and meaning text
// $WXSIMtemp[$i]	- Temperature with translated text and formatting
// $WXSIMpop[$i]	- Number - Probabability of Precipitation ('',10,20, ... ,100)
// $WXSIMprecip[$i] - amount of precipitation (native units from plaintext forecast)
// $WXSIMicon[$i]   - base name of icon graphic to use
// $WXSIMcond[$i]   - Short legend for forecast icon (translated)
// $WXSIMicons[$i]  - Full icon with translated Period, <img> and Short legend.
//  the following were added in V1.03:
// $WXSIMwinddir[$i]- Wind direction ( may be something like 'SSE' or 'NW->N' ) (translated)
// $WXSIMwind[$i]   - Wind speed (may be something like '10' or '7->4' or '10-16->6' )
// $WXSIMgust[$i]   - Wind gust
// $WXSIMwindunits[$i] - Wind speed units (mph, kph, mps, kts) (translated)
// $WXSIMBeaufort[$i]  - Beaufort scale for max wind speed 'n Bft' or 'Light air' (translated)
// $WXSIMhumidex[$i] - humidex number (or '' if not present in forecast)
// $WXSIMfrost[$i]  - frost forecast (or '' if not present in forecast)
// $WXSIMheatidx[$i]  - heat-index forecast (or '' if not present in forecast)
// $WXSIMwindchill[$i] - wind-chill forecast (or '' if not present in forecast)
// Note:
// Settings ---------------------------------------------------------------
$iconDir ='./forecast/images/';           // directory for carterlake icons
$iconType = '.jpg';        // default type='.jpg' -- use '.gif' for animated icons from http://www.meteotreviglio.com/
$WXSIMstation = "Saratoga-Weather.org";   // name of your weather station
$plaintextFile = './plaintext.txt';       // location of the WXSIM plaintext.txt
$lang = 'en';                             // default language is 'en' = English
$tempDegrees = '&deg;';                   // set to '' to omit degree sign
//                                        //   or set to '&deg;', '&deg;F' or '&deg;C'
$maxIcons = 10;                           // set to maximum number of icons to display
$maxWidth = '640px';                      // max width of tables (could be '100%')
$minPoP = '40';                           // PoP must be this or above to display
//                                        // rain icon, otherwise sky icon w/PoP displayed.
$showBeaufort = 'T';					  // set to false to not display Beaufort at all
//										  // ='V' for 'n Bft', ='T' for translated name
$showHumidex = true;                      // =true to display Humidex (Hdx), =false to suppress display
$showFrost = true;                        // =true to display frost, =false to suppress display
$showHeatIDX = true;                      // =true to display Heat-Index (HI), =false to suppress display
$showHotIconF = 100;                      // show Hot icon if Heat-Index >= value
$showHotIconC = 37.7;                     // show Hot icon if Humidex >= value
$showWindChill = true;                    // =true to display Wind-Chill, =false to suppress display
$showColdvalF = 26;                      // show Cold! if Wind-Chill <= value in F
$showColdvalC = -3;                      // show Cold! if Wind-Chill <= value in C
$uomTemp   = 'C';                        // ='C' if forecast temperature in Centigrade, ='F' if in Fahrenheit
$ourTZ     = 'America/Los_Angeles';      // your timezone
// ---- end of settings ---------------------------------------------------
// overrides from Settings.php if available
global $SITE;
if (isset($SITE['fcsticonsdir'])) 	{$iconDir = $SITE['fcsticonsdir'];}
if (isset($SITE['fcsticonstype'])) 	{$iconType = $SITE['fcsticonstype'];}
if (isset($SITE['defaultlang'])) 	{$lang = $SITE['defaultlang'];}
if (isset($SITE['uomTemp']))        {$uomTemp = $SITE['uomTemp'];}
if (isset($SITE['tz'])) 		{$ourTZ = $SITE['tz'];}
// end of overrides from Settings.php
// -------------------begin code ------------------------------------------
if (isset($_REQUEST['sce']) && strtolower($_REQUEST['sce']) == 'view' ) {
   //--self downloader --
   $filenameReal = __FILE__;
   $download_size = filesize($filenameReal);
   header('Pragma: public');
   header('Cache-Control: private');
   header('Cache-Control: no-cache, must-revalidate');
   header("Content-type: text/plain");
   header("Accept-Ranges: bytes");
   header("Content-Length: $download_size");
   header('Connection: close');
   readfile($filenameReal);
   exit;
# Set timezone in PHP5/PHP4 manner
if (!function_exists('date_default_timezone_set')) {
  putenv("TZ=" . $ourTZ);
  } else {
  date_default_timezone_set("$ourTZ");
$Status = "<!-- $Version -->\n";
$doTranslate = true;                      
if (isset($_REQUEST['lang']) ) {
  $lang=strtolower($_REQUEST['lang']);
//  if ($lang == 'en') { $doTranslate = false; };
global $doDebug;
$doDebug = false;
if (isset($_REQUEST['debug']) ) {
  $doDebug = substr(strtolower($_REQUEST['debug']),0,1) == 'y';
$printHeading = true;
$printIcons = true;
$printText = true;
if (isset($doPrintHeading)) {
  $printHeading = $doPrintHeading;
if (isset($_REQUEST['heading']) ) {
  $printHeading = substr(strtolower($_REQUEST['heading']),0,1) == 'y';
if (isset($doPrintIcons)) {
  $printIcons = $doPrintIcons;
if (isset($_REQUEST['icons']) ) {
  $printIcons = substr(strtolower($_REQUEST['icons']),0,1) == 'y';
if (isset($doPrintText)) {
  $printText = $doPrintText;
if (isset($_REQUEST['text']) ) {
  $printText = substr(strtolower($_REQUEST['text']),0,1) == 'y';
if (isset($showIconsMax)) {
  $maxIcons = $showIconsMax;
if (isset($_REQUEST['maxicons']) ) {
  $maxIcons = $_REQUEST['maxicons'];
  $maxIcons = preg_replace('|[^\d]+|is','',$maxIcons);
$useCharSet = 'iso-8859-1';
$UTFLang = ',gr,ru,cn,jp,he,';  // languages needing UTF-8 character set for display
$RTLlangs = ',he,cn,jp,';       // languages needing right-to-left display
$doRTL = (strpos($RTLlangs,$lang) !== false)?true:false;
$timeFormat = 'd-M-Y h:i a'; // default to USA format
// load the config file
$config = file("./plaintext-parser-data.txt");  // 
// load and merge the language file (if it exists)
if ($doTranslate and file_exists("./plaintext-parser-lang-$lang.txt") ) {
  $lfile = file("./plaintext-parser-lang-$lang.txt");
  foreach ($lfile as $val) {
    array_push($config,$val);
  $Status .= "<!-- translation file for '$lang' loaded -->\n";
  if (strpos($UTFLang,$lang) > 0) {$useCharSet = 'UTF-8'; $Status .= "<!-- using UTF-8 -->\n";}
} else {
  $doTranslate = false;
//  if($lang <> 'en') {
    $Status .= "<!-- translation file for '$lang' not found -->\n";
    $lang = 'en';
//  }
$showColdVal = preg_match('|C|i',$uomTemp)?$showColdvalC:$showColdvalF;
$Status .= "<!-- using $showColdVal for wind-chill test -->\n";
// Initialize -- read in control file and place in $Conditions and $Precip
//  for later use
$LanguageLookup = array();
$WindLookup = array( // initialized by wind-direction abbreviations for icons
// NOTE: don't change these .. use LANGLOOKUP entries in the plaintext-parser-LL.txt
// translation control file instead.
'north' => 'N',
'north-northeast' => 'NNE',
'northeast' => 'NE',
'east-northeast' => 'ENE',
'east' => 'E',
'east-southeast' => 'ESE',
'southeast' => 'SE',
'south-southeast' => 'SSE',
'south' => 'S',
'south-southwest' => 'SSW',
'southwest' => 'SW',
'west-southwest' => 'WSW',
'west' => 'W',
'west-northwest' => 'WNW',
'northwest' => 'NW',
'north-northwest' => 'NNW'
$BeaufortText = array(
// NOTE: don't change these .. use LANGLOOKUP entries in the plaintext-parser-LL.txt
// translation file instead.
'Calm', 'Light air', 'Light breeze','Gentle breeze', 'Moderate breeze', 'Fresh breeze', 
'Strong breeze', 'Near gale', 'Gale', 'Strong gale', 'Storm', 'Violent storm', 
'Hurricane' 
// wind speed < values below correspond to force 0 .. 11 . >= last value = force 12
$BeaufortKTS = array(
1,4,7,11,17,22,28,34,41,48,56,64,64
$BeaufortMPH = array(
1,4,8,13,19,25,32,39,47,55,64,73,73
$BeaufortKPH = array(
1,6,12,20,30,40,51,63,76,88,103,118,118
$BeaufortMS  = array(
0.2,1.6,3.4,5.5,8.0,10.8,13.9,17.2,20.8,24.5,28.5,32.7,32.7
reset($config);
// $Status .= "<!-- config: \n" . print_r($config,true) . " -->\n";
foreach ($config as $key => $rec) { // load the parser condition strings
  $recin = trim($rec);
  if ($recin and substr($recin,0,1) <> '#') { // got a non comment record
    list($type,$keyword,$dayicon,$nighticon,$condition) = explode('|',$recin . '|||||');
	if (isset($type) and strtolower($type) == 'cond' and isset($condition)) {
	  $Conditions["$keyword"] = "$dayicon\t$nighticon\t$condition";
	if (isset($type) and strtolower($type) == 'precip' and isset($nighticon)) {
	  $Precip["$keyword"] = "$dayicon\t$nighticon";
	if (isset($type) and strtolower($type) == 'snow' and isset($nighticon)) {
	  $Snow["$keyword"] = "$dayicon\t$nighticon";
	if (isset($type) and strtolower($type) == 'lang' and isset($dayicon)) {
	  $Language["$keyword"] = "$dayicon";
    } 
	if (isset($type) and strtolower($type) == 'langlookup' and isset($dayicon)) {
	  $LanguageLookup["$keyword"] = "$dayicon";
    } 
	if (isset($type) and strtolower($type) == 'dateformat' and isset($keyword)) {
	  $timeFormat = trim($keyword);
    } 
	if (isset($type) and strtolower($type) == 'charset' and isset($keyword)) {
	  $useCharSet = trim($keyword);
	  $Status .= "<!-- using charset '$useCharSet' -->\n";
    } 
	if (isset($type) and strtolower($type) == 'notavail' and isset($keyword)) {
	  $notAvail = trim($keyword);
    } 
  } // end if not comment or blank
} // end loading of $Conditions and $Precip
if (count($LanguageLookup) < 1) {$doTranslate = false; }
$testFiles = array(  // local testing for Ken .. these files aren't part of the distribution
 'a' => 'plaintext-bin.txt',
 'b' => 'plaintext-test1.txt',
 'fr' => 'plaintext-cy.txt',
 'nl' => 'plaintext-du.txt',
 'it' => 'plaintext-it.txt',
 'se' => 'plaintext-se.txt',
 'nz' => 'plaintext-nz.txt',
 'snow' => 'plaintext-snow.txt',
 'rest' => 'plaintext-rest.txt',
 'oregon' => 'plaintext-oregon.txt',
 'fograin' => 'plaintext-fograin.txt',
 'snow2' => 'plaintext-snow2.txt',
 'snow3' => 'plaintext-snow3.txt',
 'snow4' => 'plaintext-snow4.txt',
 'snow5' => 'plaintext-snow5.txt',
 'snow6' => 'plaintext-snow6.txt',
 'snow7' => 'plaintext-snow7.txt',
 'snow8' => 'plaintext-snow8.txt',
 'snow9' => 'plaintext-snow9.txt',
 'snow10' => 'plaintext-snow10.txt',
 'gr' => 'plaintext-gr.txt',
 'zulu' => 'plaintext-zulu.txt',
 'beaufort' => 'plaintext-beaufort.txt',
 'snowlevel' => 'plaintext-snowlevel.txt',
 'thunder' => 'plaintext-thunder.txt',
 'thunder2' => 'plaintext-thunder2.txt',
 'broadstairs' => 'plaintext-broadstairs.txt',
 'hdx' => 'plaintext-hdx.txt',
 'frost' => 'plaintext-frost.txt',
 'hot' => 'plaintext-hot.txt',
 'nl-frost' => 'plaintext-nl-frost.txt',
 'wc' => 'plaintext-wc.txt',
 'wc2' => 'plaintext-wc2.txt',
 'nl4' => 'plaintext-nl4.txt',
 'nl5' => 'plaintext-nl5.txt',
 'sn4' => 'plaintext-sn4.txt',
 'sn5' => 'plaintext-sn5.txt',
 'wc3' => 'plaintext-wc3.txt',
$linksList = '';
if (isset($_REQUEST['testlinks'])) {
	$thisTest = isset($_REQUEST['test'])?$_REQUEST['test']:'notspecified';
 	foreach ($testFiles as $name => $fname) {
		$linksList .= "<a href=\"?testlinks&amp;test=$name&amp;lang=$lang\">";
		if($thisTest == $name) {
			$linksList .= "<b><span style=\"font-size: 14pt;\">$name</span></b></a>&nbsp; ";
		} else {
			$linksList .= "$name</a>&nbsp; ";
if (isset($_REQUEST['test']) ) { // for testing only
  $t = strtolower($_REQUEST['test']);
  if (isset($testFiles[$t]) ) {
    $Status .= "<!-- using $testFiles[$t] for plaintext.txt -->\n";
	$plaintextFile = $testFiles[$t]; 
if (isset($_REQUEST['minpop'])) { // for testing only
  $minPoP = $_REQUEST['minpop'];
// Read in the plaintext.txt forecast file for processing
if (! file_exists($plaintextFile) ) {
   $msg = "The WXSIM forecast is not currently available.";
   if (isset($notAvail)) {
     $msg = $notAvail;
   }
   print "<p>$msg</p>\n";
   return;
$pt = file($plaintextFile);
// fix missing space at start of line if need be
foreach ($pt as $i => $line) {
	if(substr($line,0,1) != ' ') {$pt[$i] = ' ' . $line;}
$plaintext = implode('',$pt);   // get the plaintext file.
// preprocess.. mark divisions in the forecast days for later parsing
$plaintext = preg_replace('![\n][\r|\n]+!s',"\n \n",$plaintext);
$plaintext = preg_replace('![\r|\n]+ [\r|\n]+!s',"\t\t",$plaintext); 
$plaintext .= "\t\t";  // make sure a delimiter is at the end too.
$plaintext = preg_replace('|_|is','',$plaintext); // remove dashed line in front
// Find city and update date
if (preg_match('|WXSIM text forecast for (.*), initialized at\s+(.*)|i',$plaintext,$matches)) {
  $WXSIMcity = PPget_lang(trim($matches[1]));
  $wdate = trim($matches[2]);
  $Status .= "<!-- wdate '$wdate' -->\n";
  // there are LOTS of formats of the date stamp in plaintext.txt
  // 012345678901234567890
  // 20:00   Feb 21, 2007
  // 15:00   02 Apr, 2007
  // 8:00 PM Mar 24, 2007
  // 12:00 AM 24 Mar, 2007
  // 17:00Z  05 Nov, 2007
  $wdateParts =  preg_split("/[\s,]+/", $wdate);
//  $Status .= "<!-- wdate split\n" . print_r($wdateParts,true) . " -->\n";
  $i=0;
  if (preg_match('!AM|PM!i',$wdateParts[1]) ) { // got US style date.
    list($wHrs,$wMins) = explode(':',$wdateParts[0]);
	if (strtolower($wdateParts[1]) == 'pm' and $wHrs <> 12 ) {$wHrs += 12; }
	if (strtolower($wdateParts[1]) == 'am' and $wHrs == 12 ) {$wHrs = '00'; }
    $wTime = "$wHrs:$wMins";
	$i=1;
  } else {
    $wTime = $wdateParts[0];
  if (preg_match('!\d+!',$wdateParts[$i+1]) ) { // got day in 1, month in 2 (+offset)
    $wDay = $wdateParts[$i+1];
	$wMon = $wdateParts[$i+2];
  } else {
    $wDay = $wdateParts[$i+2];
	$wMon = $wdateParts[$i+1];
  $wYear = $wdateParts[$i+3];
//  $wdate = preg_replace('|(\S+)\s+(\S+)\s+(\S+),\s+(\S+)|s',"$2-$3-$4 $1:00 ".date('O',time()),$wdate);
  if(preg_match('|Z|i',$wTime) ) {
    // Zulu(GMT) time format
	$wTime = preg_replace('|Z|i','',$wTime);
    $wdate = "$wDay-$wMon-$wYear $wTime UTC";
    $Status .= "<!-- updated '$wdate'-->\n";
    $d = strtotime($wdate);
    $WXSIMupdated = PPget_lang(date('l',$d)) . ', ' . gmdate($timeFormat,$d) . ' UTC';
  } else {
    $wdate = "$wDay-$wMon-$wYear $wTime " . date('O',time());
    $Status .= "<!-- updated '$wdate'-->\n";
    $d = strtotime($wdate);
    $WXSIMupdated = PPget_lang(date('l',$d)) . ', ' . date($timeFormat,$d);
// split up the forecast days and texts
// good preg_match_all('![\r|\n]+\s+(.*):\s(.*)[\r|\n]+ [\r|\n]+!Us',$plaintext,$matches);
preg_match_all('!\t\s(.*):\s(.*)\t!Us',$plaintext,$matches); // split up the forecast
// Main loop over each forecast text paragraph.
for ($i=0;$i<count($matches[1]);$i++) { // loop over results by forecast period and peel out values
 $WXSIMday[$i] = trim($matches[1][$i]);
 $WXSIMtext[$i] =  preg_replace('![\r|\n]+!is','',trim($matches[2][$i])); // remove CR and LF chars.
 // initialize this day's variables
 $WXSIMuv[$i] = '';
 $WXSIMtemp[$i] = '';
 $WXSIMpop[$i] = '';
 $WXSIMprecip[$i] = '';
 $WXSIMicon[$i] = '';
 $WXSIMcond[$i] = '';
 $WXSIMtempdirect[$i] = '';
 $WXSIMwinddir[$i] = '';
 $WXSIMwinddiricon[$i] = '';
 $WXSIMwind[$i] = '';
 $WXSIMgust[$i] = '';
 $WXSIMwindunits[$i] = '';
 $WXSIMhumidex[$i] = '';
 $WXSIMfrost[$i] = '';
 $WXSIMheatidx[$i] = '';
 $WXSIMwindchill[$i] = '';
 // make the period 'pretty' with HTML breaks.
 $WXSIMtitles[$i] = preg_replace('! (\S+)$!',"<br />\\1",PPget_lang($WXSIMday[$i]));
 if (! preg_match('!<br />!',$WXSIMtitles[$i])) {
   $WXSIMtitles[$i] .= '<br />';  // add line break to 'short' day titles
 // extract UV index value
 if (preg_match('|UV index up to (\d+)\.|i',$WXSIMtext[$i],$mtemp) ) {
   $WXSIMuv[$i] = $mtemp[1];
 // extract Heat Index value
 if (preg_match('|Heat index up to (\d+)\.|i',$WXSIMtext[$i],$mtemp) ) {
   $WXSIMheatidx[$i] = $mtemp[1];
// extract Humidex value
 if (preg_match('|Humidex up to (\d+)\.|i',$WXSIMtext[$i],$mtemp) ) {
   $WXSIMhumidex[$i] = $mtemp[1];
// extract Wind-chill value
 if (preg_match('/Wind chill (down to|ranging from) (\S+)/i',$WXSIMtext[$i],$mtemp) ) {
   $WXSIMwindchill[$i] = $mtemp[2];
// extract Wind direction, values
 $testwind = str_replace('Wind chill','Wind-chill',$WXSIMtext[$i]);
 if (preg_match('|Wind (.*)\.|Ui',$testwind,$mtemp) ) {
//   $Status .= "<!-- mtemp[1]='" . $mtemp[1] . "' -->\n";
   $wtemp = preg_replace(
        '! around| near| in the| morning| evening| afternoon| midnight| tonight| to| after!Uis',
        '',$mtemp[1]);
//   $Status .= "<!-- stripped='" . $wtemp . "' -->\n";
   $wtemp = explode(', ',$wtemp);
//   $Status .= "<!-- wind\n" . print_r($wtemp, true) . " -->\n";
//    [0] => northwest around 5 mph
// or
//    [0] => northwest near calm
//    [1] => gusting to 12 mph
//    [2] => in the morning
//    [3] => becoming 12 mph in the afternoon
// or
//    [3] => becoming west-northwest around 12 mph in the afternoon
// or
//    [3] => becoming north-northwest in the afternoon
  $wparts = explode(' ',$wtemp[0]); // break it by spaces.
  $maxWind = 0;
  for ($k =0;$k<count($wtemp);$k++) {
    $wparts = explode(' ',$wtemp[$k]);
	if(isset($WindLookup[$wparts[0]]) ) { // got <dir> [speed] [units] format
	  $WXSIMwinddir[$i] = $WindLookup[$wparts[0]];  // get abbreviation for direction
      $WXSIMwinddiricon[$i] = $WXSIMwinddir[$i];    // base name for wind icon
      $WXSIMwind[$i] = $wparts[1];  // get speed
	  if ($wparts[1] > $maxWind and $wparts[1] <> 'calm') { $maxWind = $wparts[1]; }
      if ( isset($wparts[2])) {
       $WXSIMwindunits[$i] = $wparts[2]; // get wind units of measure
      }
    }
	if ($wparts[0] == 'gusting') {
	  $WXSIMwind[$i] .= '-' . $wparts[1];
	  if ($wparts[1] > $maxWind) { $maxWind = $wparts[1]; }
	  $WXSIMgust[$i] = $wparts[1];
	if ($wparts[0] == 'becoming') { // got 'becoming [dir] [speed] [units]
	  if (isset($WindLookup[$wparts[1]]) ) {
	    $WXSIMwinddir[$i] .= '&rarr;' . $WindLookup[$wparts[1]];
	  }
	  if (preg_match('!(\d+|calm)!',$wtemp[$k],$match)) {
	    $WXSIMwind[$i] .= '&rarr;' . $match[1];
  	    if ($match[1] > $maxWind and $match[1] <> 'calm') { $maxWind = $match[1]; }
	  }
	  if (! $WXSIMwindunits[$i] and isset($wparts[2]) ) {
        $WXSIMwindunits[$i] = $wparts[2]; // get wind units of measure
	  }
   $WXSIMBeaufort[$i] = PPdisplayBeaufort(PPgetBeaufort($maxWind,$WXSIMwindunits[$i])) ;
//   $Status .= "<!-- dir='" . $WXSIMwinddir[$i] . "' wind='" . $WXSIMwind[$i] . 
     "' gust='" . $WXSIMgust[$i] . "' units='" . $WXSIMwindunits[$i] . 
	 "' maxWind = '$maxWind' Beaufort='" . $WXSIMBeaufort[$i] . "'-->\n";
 // extract temperature High/Low values
 if (preg_match('!(high|low) ([-|\d]+)[\.|,]!i',$WXSIMtext[$i],$mtemp)) {
   $WXSIMtemp[$i] = PPget_lang($mtemp[1] .':') . ' ' . $mtemp[2] . $tempDegrees;
   if ($tempDegrees) {  // fix up degrees in the text
      $WXSIMtext[$i] = preg_replace(
	  '|' . $mtemp[1] . ' ' . $mtemp[2] .'|',
	  $mtemp[1] . ' ' . $mtemp[2] . $tempDegrees,
	  $WXSIMtext[$i]);
	  $WXSIMtext[$i] = preg_replace('/Wind chill down to ([-|\d]+)/i',"Wind chill down to $1$tempDegrees",$WXSIMtext[$i]);
	  $WXSIMtext[$i] = preg_replace('/Heat index up to ([-|\d]+)/i',"Heat index up to $1$tempDegrees",$WXSIMtext[$i]);
//     $Status .= "<!-- WXSIMtext[$i]='".$WXSIMtext[$i]."' -->\n";
   }
   if(substr($mtemp[1],0,1) == 'H') {
     $WXSIMtemp[$i] = '<span style="color: red">' . $WXSIMtemp[$i] . '</span>';
   } else {
     $WXSIMtemp[$i] = '<span style="color: blue">' . $WXSIMtemp[$i] . '</span>';
   }
 }  
 if (preg_match('!temperatures (rising|falling)!i',$WXSIMtext[$i],$mtemp)) {
   $WXSIMtempdirect[$i] = $mtemp[1];
 // extract PoP
 if (preg_match('!Chance of precipitation (.*) percent!i',$WXSIMtext[$i],$mtemp)) {
//   print "<pre>" . print_r($mtemp,true) . "</pre>\n";
   $WXSIMpop[$i] = $mtemp[1];
   $WXSIMpop[$i] = preg_replace('|less than |i','<',$WXSIMpop[$i]);
   if ($WXSIMpop[$i] == '<20') {$WXSIMpop[$i] = '10';}
   if ($WXSIMpop[$i] == 'near 100') { $WXSIMpop[$i] = '100'; }
 // extract frost
 if (preg_match('!with\s+(.*)\s+frost.!is',$WXSIMtext[$i],$mtemp)) {
//   print "<pre>" . print_r($mtemp,true) . "</pre>\n";
   $WXSIMfrost[$i] = ucfirst($mtemp[1]) . ' frost';
  if ($doTranslate) {
    // perform optional translation if $Language has entries
    reset ($Language); // process in order of the file
    $text = $WXSIMfrost[$i];
    foreach ($Language as $key => $replacement) {
      $text = str_replace($key,$replacement,$text);
    }
	$WXSIMfrost[$i] = $text;
 // now look for harshest conditions first.. (in order in -data file
 if ($doDebug) {
   $Status .= "<!-- WXSIMtext[$i]='" . $WXSIMtext[$i] . "' -->\n";
 reset($Conditions);  // Do search in load order
 foreach ($Conditions as $cond => $condrec) { // look for matching condition
 if ($doDebug) {
   $Status .= "<!-- check '$cond' -->\n";
   if(preg_match("!$cond!i",$WXSIMtext[$i],$mtemp)) {
     list($dayicon,$nighticon,$condition) = explode("\t",$condrec);
	 if (preg_match('!chance!i',$condition) and $WXSIMpop[$i] < $minPoP) {
	   if ($doDebug) {
		 $Status .= "<!-- skip-chance -->\n";
	   }
	   continue; // skip this one
	 if (preg_match("|$cond level|i",$WXSIMtext[$i]) and !preg_match("/(chance of $cond|$cond likely|$cond very likely)/i",$WXSIMtext[$i]) ) {
	   if ($doDebug) {
		 $Status .= "<!-- skip $cond level -->\n";
	   }
	   continue; // skip 'snow level' and 'freezing level' entries
	 if ($doDebug) {
	   $Status .= "<!-- $cond / $condition selected -->\n";
	 $WXSIMcond[$i] = PPget_lang($condition);
	 if (preg_match('|night|i',$WXSIMday[$i])) {
	   $WXSIMicon[$i] = $nighticon;
	 } else {
	   $WXSIMicon[$i] = $dayicon;
	 break;
   }
 } // end of conditions search
 // look for precipitation amounts
 reset($Precip);  // Do search in load order
 foreach ($Precip as $pamt => $prec) { // look for matching precipitation amounts
   if(preg_match("!$pamt!is",$WXSIMtext[$i],$mtemp)) {
     list($amount,$units) = explode("\t",$prec);
	 $WXSIMprecip[$i] = $amount . ' ' . $units;
	 break;
    }
 } // end of precipitation amount search
 // look for Snow Accumulation
 reset($Snow);  // Do search in load order
 foreach ($Snow as $pamt => $prec) { // look for matching precipitation amounts
   if(preg_match("!$pamt!is",$WXSIMtext[$i],$mtemp)) {
     list($amount,$units) = explode("\t",$prec);
	 $WXSIMprecip[$i] .= "<br/><span style=\"color: blue\"><b>" . $amount . ' ' . $units . "</b></span>\n";
	 break;
    }
 } // end of Snow Accumulation amount search
//  now fix up the full icon name and PoP if available
  $curicon = $WXSIMicon[$i]  . $iconType;
  if ($WXSIMpop[$i] > 0) {
	$testicon = preg_replace('|'.$iconType.'|',$WXSIMpop[$i].$iconType,$curicon);
//	print "<pre>testicon='$testicon'</pre>\n";
	if (file_exists($iconDir . $testicon)) {
      $WXSIMicon[$i] = $testicon;
	} else {
	  $WXSIMicon[$i] = $curicon;
  } else {
    $WXSIMicon[$i] = $curicon;
  if ($WXSIMtempdirect[$i] <> '') {
     $tempdirect = 'up.gif';
	 if (substr($WXSIMtempdirect[$i],0,1) == 'f') { $tempdirect='down.gif'; }
	 $WXSIMtemp[$i] .= "<img src=\"$iconDir$tempdirect\" height=\"10\" width=\"10\" alt=\" \" />";
  if ($doTranslate) {
    // perform optional translation if $Language has entries
    reset ($Language); // process in order of the file
    $text = $WXSIMtext[$i];
    foreach ($Language as $key => $replacement) {
      $text = str_replace($key,$replacement,$text);
    }
	// put back translated text, fixing capitalization for sentence starts (except the first one).
//  $WXSIMtext[$i] = preg_replace('!\.\s+([a-z])!es',"'.  ' . strtoupper('\\1')",$text); //Deprecated in 5.5
	if(!function_exists('wxsim_repl')) {
	  function wxsim_repl($m) {
        return ('.  ' . strtoupper($m[1])); // function does what deprecated /e did for us before
      }
    $WXSIMtext[$i] = preg_replace_callback('!\.\s+([a-z])!s','wxsim_repl',$text);
	$WXSIMday[$i] = PPget_lang($WXSIMday[$i]);
	if($doRTL and isset($LanguageLookup['NESW-N'])) { // handle RTL language type
	  $Status .= "<!-- RTLtrans input WXSIMwinddir[$i] = '".$WXSIMwinddir[$i]."' -->\n";
	  $tstr = preg_replace('|&rarr;|',"\t",$WXSIMwinddir[$i]);
	  $twdirs = explode("\t",$tstr);
	  foreach ($twdirs as $n => $twdir) {
		  $twdirs[$n] = isset($LanguageLookup['NESW-'.$twdir])?$LanguageLookup['NESW-'.$twdir]:$twdir;
	  }
	  $WXSIMwinddir[$i] = join('&larr;',array_reverse($twdirs));
	  $Status .= "<!-- RTLtrans output WXSIMwinddir[$i] = '".$WXSIMwinddir[$i]."' -->\n";
	  if(preg_match('|&rarr;|',$WXSIMwind[$i])) { 
	    $Status .= "<!-- RTLtrans input WXSIMwind[$i] = '".$WXSIMwind[$i]."' -->\n";
	    $tstr = preg_replace('|&rarr;|',"\t",$WXSIMwind[$i]);
		$twspds = explode("\t",$tstr);
		$WXSIMwind[$i] = join('&larr;',array_reverse($twspds));
	    $Status .= "<!-- RTLtrans output WXSIMwind[$i] = '".$WXSIMwind[$i]."' -->\n";
	  }
	} else { // handle non-RTL language type
	  $wdirs = PPget_lang('NESW');  // default directions
	  if(strlen($wdirs) == 4) {
		$WXSIMwinddir[$i] = strtr($WXSIMwinddir[$i],'NESW',$wdirs); // do translation
	  } elseif (preg_match('|,|',$wdirs)) { //multichar translation
		$wdirsmc = explode(',',$wdirs);
		$wdirs = array('N','E','S','W');
		$wdirlook = array();
		foreach ($wdirs as $n => $d) {
		  $wdirlook[$d] = $wdirsmc[$n];
		} 
		$tstr = ''; // get ready to pass once through the string
		for ($n=0;$n<strlen($WXSIMwinddir[$i]);$n++) {
		  $c = substr($WXSIMwinddir[$i],$n,1);
		  if(isset($wdirlook[$c])) {
			$tstr .= $wdirlook[$c]; // use translation
		  } else {
			$tstr .= $c; // use regular
		  }
		$WXSIMwinddir[$i] = $tstr; // do translation
	  }
	// translate speed and wind units based on lang entries in one pass
	$text = ' ' . $WXSIMwind[$i] . " \t " . $WXSIMwindunits[$i] . ' '; // make test string.
	reset ($Language); // process in order of the file
	foreach ($Language as $key => $replacement) {
	  $text = str_replace($key,$replacement,$text);
	$key = explode("\t",$text);
	$WXSIMwind[$i] = trim($key[0]);
	$WXSIMwindunits[$i] = trim($key[1]);	
   // override icon with hot.jpg if high heat-index or humidex 
   if($WXSIMheatidx[$i] >= $showHotIconF or $WXSIMhumidex[$i] >= $showHotIconC) {
	   $WXSIMicon[$i] = 'hot.jpg';
	   $WXSIMcond[$i] .= "<br/>\n<span style=\"color:red;\"><strong>" . PPget_lang('Hot!') . "</strong></span>";
   }
   if($WXSIMheatidx[$i] <> '') {
	   $WXSIMheatidx[$i] = "<span style=\"color: red;\">".PPget_lang('Heat').": $WXSIMheatidx[$i]$tempDegrees</span>\n";
	   
   }
   if($WXSIMhumidex[$i] <> '') {
	   $WXSIMhumidex[$i] = "<span style=\"color: red;\">".PPget_lang('Hmdx').": $WXSIMhumidex[$i]</span>\n";
   }
   // process Wind-chill
   if ($WXSIMwindchill[$i] <= $showColdVal and $WXSIMwindchill[$i] <> '') {
	   $WXSIMcond[$i] .= "<br/>\n<span style=\"color:blue;\"><strong>" . PPget_lang('Cold!') . "</strong></span>";
  //	 $WXSIMicon[$i] = 'cold.jpg';
   }
   if($WXSIMwindchill[$i] <> '') {
	   $WXSIMwindchill[$i] = "<span style=\"color: blue;\">".PPget_lang('WCh').": $WXSIMwindchill[$i]$tempDegrees</span>\n";
   }
   if ($WXSIMfrost[$i] <> '') {
	  $WXSIMfrost[$i] = "<span style=\"color: blue;\">$WXSIMfrost[$i]</span>\n";
   }
   // make HTML for full icon with condition description
   $WXSIMicons[$i] = "$WXSIMtitles[$i]<br />
   <img src=\"$iconDir$WXSIMicon[$i]\" alt=\"".strip_tags($WXSIMcond[$i])."\"  title=\"".
   strip_tags($WXSIMcond[$i]) ."\" /><br />
   $WXSIMcond[$i]";
} // end of main loop -------------------------
  $IncludeMode = false;
  $PrintMode = true;
  if (isset($doPrint) && ! $doPrint ) {
   //   print $Status;
      return;
  if (isset($_REQUEST['inc']) && 
      strtolower($_REQUEST['inc']) == 'noprint' ) {
	  print $Status;
	  return;
if (isset($_REQUEST['inc']) && strtolower($_REQUEST['inc']) == 'y') {
  $IncludeMode = true;
if (isset($doInclude)) {
  $IncludeMode = $doInclude;
// V1.03 -- set width of <td> for icons based on overall width/num icons
preg_match('|(\d+)(.*)|',$maxWidth,$widthparts);
//$Status .= "<!-- widthparts\n" . print_r($widthparts,true) . " -->\n";
$nTD = count($WXSIMicon);
if ($nTD < 1) { $nTD = 1; }
$wTD = round($widthparts[1]/$nTD,0) . $widthparts[2];
$nUseIcons = min(count($WXSIMicons),$maxIcons);
$Status .= "<!-- maxWidth='$maxWidth' nTD=$nTD wTD='$wTD' Icons to display=$nUseIcons -->\n";
//begin printing of advforecast style printout
 if(! $IncludeMode) { 
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/html; charset=<?php echo $useCharSet; ?>" />
<title><?php echo $Version; ?></title>
<?php if($doRTL) { ?>
<style type="text/css">
.WXSIMforecast {
	direction: rtl;
	unicode-bidi: embed;
</style>
<?php } // end doRTL ?>
</head>
<body style="background-color:#FFFFFF; font-family:Arial, Helvetica, sans-serif; font-size: 10pt; width: 640px;">
<?php if(strlen($linksList) > 1) {
	print "<p style=\"width: 620px; border: 1px solid red;background-color: #FF9;\">";
	print "Testing links for ";
	$thisLink = isset($_REQUEST['test'])?'&amp;test='.$_REQUEST['test']:'';
	print "<a href=\"?testlinks$thisLink&amp;lang=$lang\">lang=$lang</a> ";
	print "<a href=\"?testlinks$thisLink&amp;lang=en\">lang=en</a><br/>\n";
	print $linksList;
	print "\n</p>\n";
    }
 } // only print above if not include mode 
print $Status;
if ($printHeading or $printIcons) {
  <div class="WXSIMforecast">
  <table width="<?php echo $maxWidth; ?>" style="border: none;">
<?php 
if ($printHeading) {
	$RTL = $doRTL?'style="unicode-bidi: embed;"':'';
    <tr>
      <td align="center"<?php echo $RTL; ?>><b><?php echo PPget_lang("WXSIM Forecast for:");?> </b><span style="color: green;">
	   <?php echo $WXSIMcity; ?></span><br />
        <?php echo PPget_lang("Issued by:"); ?> <?php echo $WXSIMstation; ?>
      </td>
    </tr>
    <tr>
      <td align="center"<?php echo $RTL; ?>><?php echo PPget_lang("Updated:");?> <?php 
	    if($doRTL) { echo "<span style=\"unicode-bidi: bidi-override; direction: ltr;\">";}
		echo $WXSIMupdated;
		if($doRTL) { echo "</span>";}
      ?>
	  </td>
    </tr>
<?php
} // end printHeading
if ($printIcons) {
    <tr>
      <td align="center">&nbsp;
	    <table width="100%" border="0" cellpadding="0" cellspacing="0">  
	      <tr valign ="top" align="center">
	<?php
	  for ($i=0;$i<min(count($WXSIMicons),$maxIcons);$i++) {
	    print "<td style=\"width: $wTD;\"><span style=\"font-size: 8pt;\">$WXSIMicons[$i]</span></td>\n";
	  }
          </tr>	
          <tr valign ="top" align="center">
	  <?php
	  for ($i=0;$i<min(count($WXSIMprecip),$maxIcons);$i++) {
	    print "<td style=\"width: $wTD; color: green;\">$WXSIMprecip[$i]</td>\n";
	  }
	  ?>
          </tr>
          <tr valign ="top" align="center">
	  <?php
	  for ($i=0;$i<min(count($WXSIMtemp),$maxIcons);$i++) {
	    print "<td style=\"width: $wTD;\">$WXSIMtemp[$i]</td>\n";
	  }
	  ?>
          </tr>
          
      <?php if ($showHumidex or $showHeatIDX or $showWindChill) { ?>
          <tr valign ="top" align="center">
	  <?php
	  for ($i=0;$i<min(count($WXSIMhumidex),$maxIcons);$i++) {
		$flag = 0;
		if ($showHumidex and $WXSIMhumidex[$i] <> '') {$flag++;
	      print "<td style=\"width: $wTD;\">$WXSIMhumidex[$i]</td>\n";
		  
		if ($showHeatIDX and $WXSIMheatidx[$i] <> '') {$flag++;
	      print "<td style=\"width: $wTD;\">$WXSIMheatidx[$i]</td>\n";
		if ($showWindChill and $WXSIMwindchill[$i] <> '') {$flag++;
		  print "<td style=\"width: $wTD;\">$WXSIMwindchill[$i]</td>\n";
		if($flag < 1) { // print spacer row
		  print "<td style=\"width: $wTD;\">&nbsp;</td>\n";
		  
	  }
	  ?>
          </tr>
      <?php } // end of showHumidex/showHeatidx/showWindchill ?>
      <?php if ($showFrost and strlen(implode('',$WXSIMfrost)) > 1) { ?>
          <tr valign ="top" align="center">
 	  <?php
	  for ($i=0;$i<min(count($WXSIMfrost),$maxIcons);$i++) {
		if ($WXSIMfrost[$i] <> '') {$flag++;
		  print "<td style=\"width: $wTD;\">$WXSIMfrost[$i]</td>\n";
		} else {
		  print "<td style=\"width: $wTD;\">&nbsp;</td>\n";
	  }
	  ?>
         </tr>         
     <?php } // end of showFrost ?>
          <tr valign ="top" align="center">
	  <?php
	  for ($i=0;$i<min(count($WXSIMwinddir),$maxIcons);$i++) {
	    print "<td style=\"width: $wTD;\">" . $WXSIMwinddir[$i] . "<br/> " .
		$WXSIMwind[$i] . "<br/> " . $WXSIMwindunits[$i]; 
		if ($showBeaufort) {
		  print "<br/><i>" . $WXSIMBeaufort[$i] ."</i>";
		print "</td>\n";
	  }
	  ?>
          </tr>
          <tr valign ="top" align="center">
	  <?php
	  for ($i=0;$i<min(count($WXSIMuv),$maxIcons);$i++) {
	    print "<td style=\"width: $wTD;\">" . PPset_UV_string($WXSIMuv[$i]) . "</td>\n";
	  }
	  ?>
          </tr>
        </table>
     </td>
   </tr>
<?php 
}  // end printIcons
if ($printHeading or $printIcons) {
</table>
</div>
  <p>&nbsp;</p>
<?php
} // end heading and icons
if ($printText) {
<div class="WXSIMforecast">
<table style="border: 0" width="<?php echo $maxWidth; ?>">
	<?php
	  $rAlign = $doRTL?' text-align: right;':'';
	  for ($i=0;$i<count($WXSIMday);$i++) {
        print "<tr valign =\"top\" align=\"left\">\n";
	    print "<td style=\"width: 20%;$rAlign\"><b>$WXSIMday[$i]</b><br />&nbsp;<br /></td>\n";
	    print "<td style=\"width: 80%;$rAlign\">$WXSIMtext[$i]</td>\n";
		print "</tr>\n";
	  }
</table>
<p><small><a href="http://www.wxsim.com/">WXSIM</a> forecast formatting script by <a href="http://saratoga-weather.org/scripts.php">Saratoga-Weather.org</a>.
<?php if($iconType <> '.jpg') {
	print "<br/>Animated forecast icons courtesy of <a href=\"http://www.meteotreviglio.com/\">www.meteotreviglio.com</a>.";
</small></p></div><?php 
} // end printText
if (! $IncludeMode) { 
</body>
</html>
<?php
} // print above only if not include mode
// Functions -----------------------------------------------------------------------
//  replace text with language lookup text if available
function PPget_lang( $text ) {
  global $LanguageLookup, $doTranslate;
  if ($doTranslate && isset($LanguageLookup[$text])) {
    $newtext = $LanguageLookup[$text];
  } else {
    $newtext = $text;
 return($newtext);
//  decode UV to word+color for display
function PPset_UV_string ( $uv ) {
// figure out a text value and color for UV exposure text
//  0 to 2  Low
//  3 to 5 	Moderate
//  6 to 7 	High
//  8 to 10 Very High
//  11+ 	Extreme
   switch (TRUE) {
     case ($uv == 0):
       $uv = '';
     break;
     case (($uv > 0) and ($uv < 3)):
       $uv = "UV: $uv<br/>" . '<span style="border: solid 1px; background-color: #A4CE6a;">&nbsp;' . PPget_lang("Low") .'&nbsp;</span>';
     break;
     case (($uv >= 3) and ($uv < 6)):
       $uv = "UV: $uv<br/>" . '<span style="border: solid 1px;background-color: #FBEE09;">&nbsp;' . PPget_lang("Medium") .'&nbsp;</span>';
     break;
     case (($uv >=6 ) and ($uv < 8)):
       $uv = "UV: $uv<br/>" . '<span style="border: solid 1px; background-color: #FD9125;">&nbsp;' . PPget_lang("High") .'&nbsp;</span>';
     break;
     case (($uv >=8 ) and ($uv < 11)):
       $uv = "UV: $uv<br/>" . '<span style="border: solid 1px; color: #FFFFFF; background-color: #F63F37;">&nbsp;' . PPget_lang('Very&nbsp;High') . '&nbsp;</span>';
     break;
     case (($uv >= 11) ):
       $uv = "UV: $uv<br/>" . '<span style="border: solid 1px; color: #FFFF00; background-color: #807780;">&nbsp;' . PPget_lang("Extreme") .'&nbsp;</span>';
     break;
   } // end switch
   return $uv;
} // end get_UVrange
// determine Beaufort number based on wind speed and units
function PPgetBeaufort ( $wind, $units) {
global $showBeaufort,$BeaufortMPH,$BeaufortKPH,$BeaufortKTS,$BeaufortMS,$doDebug,$Status;
   switch ($units) {
     case 'mph': $winds = $BeaufortMPH; break;
	 case 'kph': $winds = $BeaufortKPH; break;
	 case 'km/h': $winds = $BeaufortKPH; break;
	 case 'm/s': $winds = $BeaufortMS;  break;
	 case 'mps': $winds = $BeaufortMS;  break;
	 case 'kts': $winds = $BeaufortKTS; break;
	 default: $winds = $BeaufortMPH;
   } // end switch
   $Bft = 0;
   for ($i=0;$i<12;$i++) {
      if ($wind < $winds[$i]) {
	    $Bft = $i;
		break;
	  }
   }
   if ($i > 11 and ! $Bft) { $Bft = 12; };
   if($doDebug) {
	   $Status .= "<!-- '$wind' '$units' bft=$Bft i=$i -->\n";
   }
   return($Bft);
}// end PPgetBeaufort
// perform Beaufort display if desired by showBeaufort setting
function PPdisplayBeaufort ($Bft) {
  global $showBeaufort, $BeaufortText;
  if ($Bft < 0 or $Bft > 12 ) { return(""); }
  if ($showBeaufort == 'T') { return( PPget_lang($BeaufortText[$Bft]) ); }
  if ($showBeaufort == 'V') { return("$Bft Bft"); }
  return("");
}// end PPdisplayBeaufort
?><?php
// PHP script by Ken True, webmaster@saratoga-weather.org
// quake-json.php  
// Version 1.00 - 08-Sep-2012 - initial release as quake-json.php
// Version 1.01 - 09-Sep-2012 - fixed XHTML 1.0-Strict and removed ' GMT' from local time display
// Version 1.02 - 12-Sep-2012 - added diagnostics, map control translations and optional target="_blank" for links
// Version 1.03 - 04-Jan-2013 - added fix for USGS unix timestamp with trailing zero added
// Version 1.04 - 23-May-2013 - added 'home' pin, settings for lat/long via calling page
// Version 1.05 - 24-May-2013 - fixed a CSS styling error for white-space: spec
// Version 1.06 - 09-Dec-2014 - added unchunk of JSON data due to USGS website change
  $Version = 'quake-json.php V1.06 - 09-Dec-2014';
//  error_reporting(E_ALL);  // uncomment to turn on full error reporting
// script available at http://saratoga-weather.org/scripts.php
//  
// you may copy/modify/use this script as you see fit,
// no warranty is expressed or implied.
// Customized for: all earthquakes from the new GeoJSON feeds
//   http://earthquake.usgs.gov/earthquakes/feed/geojson/1.0/week
//  which displays all earthquakes > 1.0 magnitude in the past 7 days
// output: creates XHTML 1.0-Strict HTML page (default)
// Options on URL:
//      tablesonly=Y    -- returns only the body code for inclusion
//                         in other webpages.  Omit to return full HTML.
//      magnitude=N.N   -- screens results looking for Richter magnitudes of
//                          N.N or greater.
//      distance=MMM    -- display quakes with epicenters only within 
//                         MMM km of your location
// example URL:
//  http://your.website/quake-json.php?tablesonly=Y&magnitude=2.1&distance=45
//  would return data without HTML header/footer for earthquakes of
//  magnitude 2.1 or larger within a 45 mile radius of your location.
// Usage:
//  you can use this webpage standalone (customize the HTML portion below)
//  or you can include it in an existing page:
<?php
  $doIncludeQuake = true;
# uncomment ONE of the $setDistanceDisplay lines to use as template for distance displays  
#  $setDistanceDisplay = 'mi (km)';
  $setDistanceDisplay = 'mi';
#  $setDistanceDisplay = 'km (mi)';
#  $setDistanceDisplay = 'km';
  $setDistanceRadius  = 200;  // same units as first unit in $setDistanceDisplay
# NOTE: quakes of magnitude 1.0+ are available for USA locations only.
#  non-USA location earthquakes of magnitude 4.0+ are the only ones available from the USGS
  $setMinMagnitude = '2.0';  // minimum Richter Magnitude to display
  $setHighMagnitude = '4.0';  // highlight this Magnitude and greater
  $setMapZoomDefault = 7;    // default zoom for Google Map 1=world to 13=street
# script will use your $SITE[] values for latitude, longitude, timezone and time display format
  $setDoLinkTarget = true;   // =true to have links open in new page, =false for XHTML 1.0-Strict
  include("quake-json.php");
//  no parms:    include("quake-json.php"); 
// settings: --------------------------------------------------------------------  
//  change myLat, myLong to your station latitude/longitude, 
//  set $ourTZ to your time zone
//    other settings are optional
// minRichter= smallest quake to display (world is 4.0+, USA is 1.0+ on USGS
// cacheName is name of file used to store cached USGS webpage
//  set to station latitude/longitude (decimal degrees)
  $myLat = 37.27153397;    //North=positive, South=negative decimal degrees
  $myLong = -122.02274323;   //East=positive, West=negative decimal degrees
// The above settings are for saratoga-weather.org location
  $ourLocationName = 'Saratoga, CA';  // city/town name for lat/long above
  $ourTZ = "America/Los_Angeles";  //NOTE: this *MUST* be set correctly to
// translate UTC times to your LOCAL time for the displays.
// Use http://www.php.net/manual/en/timezones.php to find the timezone suitable for
//  your location.
//  pick a format for the time to display ..uncomment one (or make your own)
//$timeFormat = 'D, Y-m-d H:i:s T';  // Fri, 2006-03-31 14:03:22 TZone
  $timeFormat = 'D, d-M-Y H:i:s T';  // Fri, 31-Mar-2006 14:03:22 TZone
// setting for how to display distances .. uncomment one below
// note: will be overridden by $SITE['distanceDisplay']  or $setDistanceDisplay if it exists
  $distanceDisplay = 'mi (km)';   // display for distances in 'N mi (K km)'
//  $distanceDisplay = 'mi';   // display for distances in 'N mi'
//  $distanceDisplay = 'km (mi)';   // display for distances in 'K km (N mi)'
//  $distanceDisplay = 'km';   // display for distances in 'K km'
  $minRichter = '2.0';   // minimum Richter scale earthquake to display
  $maxDistance = 200;    // quake must be within this number of miles/kilometers to location
                         // specified in $myLat, $myLong latitude/longitude
						 // and miles/kilometers chosen by first entry in $distanceDisplay above
  $highRichter = "5.0"; //change color for quakes >= this magnitude
  $mapZoomDefault = 7;  // default Google Map zoom entry for display (1=world, 13=street)
  $cacheFileDir = './';   // default cache file directory
  $cacheName = "quakesjson.txt";  // used to store the file so we don't have to
  //                          fetch it each time
  $refetchSeconds = 1800;     // refetch every nnnn seconds
  $imagesDir = './ajax-images/';
  $doLinkTarget = true; // =true to add target="_blank" to links in popups
// end of settings -------------------------------------------------------------
if (isset($_REQUEST['sce']) && strtolower($_REQUEST['sce']) == 'view' ) {
   //--self downloader --
   $filenameReal = __FILE__;
   $download_size = filesize($filenameReal);
   header('Pragma: public');
   header('Cache-Control: private');
   header('Cache-Control: no-cache, must-revalidate');
   header("Content-type: text/plain");
   header("Accept-Ranges: bytes");
   header("Content-Length: $download_size");
   header('Connection: close');
   readfile($filenameReal);
   exit;
// Constants
// don't change $baseURL or $fileName or script may break ;-)
  $mapMainURL = "http://earthquake.usgs.gov/earthquakes/map/";  //USGS website main link
  $fileName = "http://earthquake.usgs.gov/earthquakes/feed/geojson/1.0/week";
// end of constants
// overrides from Settings.php if available
if(file_exists("Settings.php")) {include_once("Settings.php");}
//if(file_exists("common.php"))   {include_once("common.php");}
global $SITE,$missingTrans;
if (isset($SITE['latitude'])) 	     {$myLat = $SITE['latitude'];}
if (isset($SITE['longitude'])) 	     {$myLong = $SITE['longitude'];}
if (isset($SITE['cityname'])) 	     {$ourLocationName = $SITE['cityname'];}
if (isset($SITE['tz']))              {$ourTZ = $SITE['tz']; }
if (isset($SITE['timeFormat']))      {$timeFormat = $SITE['timeFormat'];}
if (isset($SITE['cacheFileDir']))    {$cacheFileDir = $SITE['cacheFileDir']; }
if (isset($SITE['distanceDisplay'])) {$distanceDisplay = $SITE['distanceDisplay']; }
// end of overrides from Settings.php
# Shim function if run outside of AJAX/PHP template set
# these must be before the missing function is called in the source
if(!function_exists('langtransstr')) {
	function langtransstr($item) {
		return($item);
if(!function_exists('langtrans')) {
	function langtrans($item) {
		print $item;
		return;
// overrides from including page if any
if (isset($setDistanceDisplay)) { $distanceDisplay = $setDistanceDisplay; }
if (isset($setDistanceRadius))  { $maxDistance = $setDistanceRadius; }
if (isset($setMinMagnitude))    { $minRichter = $setMinMagnitude; }
if (isset($setHighMagnitude))   { $highRichter = $setHighMagnitude; }
if (isset($setMapZoomDefault))  { $mapZoomDefault = $setMapZoomDefault; }
if (isset($setDoLinkTarget))    { $doLinkTarget = $setDoLinkTarget; }
if (isset($setLatitude))     { $myLat = $setLatitude; }
if (isset($setLongitude))    { $myLong = $setLongitude; }
if (isset($setLocationName))     { $ourLocationName = $setLocationName; }
if (isset($setTimeZone))     { $ourTZ = $setTimeZone; }
if (isset($setTimeFormat))   { $timeFormat = $setTimeFormat; }
// ------ start of code -------
// Check parameters and force defaults/ranges
if ( ! isset($_REQUEST['tablesonly']) ) {
        $_REQUEST['tablesonly']="";
if (isset($doIncludeQuake) and $doIncludeQuake ) {
  $tablesOnly = "Y";
} else {
  $tablesOnly = $_REQUEST['tablesonly']; // any nonblank is ok
if ($tablesOnly) {$tablesOnly = "Y";}
if ( isset($_REQUEST['magnitude']) ) {
   $minRichter = preg_replace("/^[^\d\.]+$/",'',$_REQUEST['magnitude']);
if ($minRichter <= "1.0") {$minRichter = "1.0";}
if ($minRichter >= "9.0") {$minRichter = "9.0";}
if ( isset($_REQUEST['highmagnitude']) ) {
   $highRichter = preg_replace("/^[^\d\.]+$/",'',$_REQUEST['highmagnitude']);
if ($highRichter <= "1.0") {$highRichter = "1.0";}
if ($highRichter >= "9.0") {$highRichter = "9.0";}
if (isset($_REQUEST['distance']) ) {
    $maxDistance = preg_replace("/^[^\d]+$/",'',$_REQUEST['distance']);
if ($maxDistance <= "10") {$maxDistance = "10";}
if ($maxDistance >= "15000") {$maxDistance = "15000";}		
// for testing only 
if ( isset($_REQUEST['lat']) )     { $myLat = $_REQUEST['lat']; }
if ( isset($_REQUEST['lon']) )     { $myLong = $_REQUEST['lon']; }
if ( isset($_REQUEST['testloc']) ) { setTestLoc($_REQUEST['testloc']); } // allows for test override
if ( isset($_REQUEST['cache'])) {$refetchSeconds = 1; }
$Lang = 'en'; // default language
if ( isset($_REQUEST['lang']))  {$Lang = strtolower($_REQUEST['lang']); }
$Lang = QJ_ISO_Lang($Lang);  // use official abbreviation or 'en' as default
// omit HTML <HEAD>...</HEAD><BODY> if only tables wanted	
// --------------- customize HTML if you like -----------------------
if (! $tablesOnly) {
<?php if($doLinkTarget) { // generate XHTML 1.0-Transitional ?>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<?php } else { // generate XHTML 1.0-Strict header ?>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<?php } // end DOCTYPE selector ?>
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Refresh" content="300" />
<meta http-equiv="Pragma" content="no-cache" />
<meta http-equiv="Cache-Control" content="no-cache" />
<meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1" />
<title><?php langtrans('Earthquakes of magnitude'); ?> <?php print $minRichter; ?> <?php langtrans('within'); ?> <?php print $maxDistance; ?> <?php langtrans('km'); ?></title>
    <style type="text/css">
      body {
        margin: 0 auto;
        padding: 10px 20px 20px;
		width: 640px;
        font-family: Arial;
        font-size: 12pt;
		background-color: white;
		color: black;
      }
      #map-container {
        padding: 5px;
        border-width: 1px;
        border-style: solid;
        border-color: #ccc #ccc #999 #ccc;
        -webkit-box-shadow: rgba(64, 64, 64, 0.5) 0 2px 5px;
        -moz-box-shadow: rgba(64, 64, 64, 0.5) 0 2px 5px;
        box-shadow: rgba(64, 64, 64, 0.1) 0 2px 5px;
        width: 620px;
		display: none;
      }
      #map {
        width: 620px;
        height: 480px;
      }
      #actions {
        list-style: none;
        padding: 0;
      }
      #inline-actions {
        padding-top: 10px;
      }
      .item {
        margin-left: 20px;
      }
    </style>
    <script src="http://maps.google.com/maps/api/js?sensor=false&amp;language=<?php print $Lang; ?>" type="text/javascript"></script>
    <script src="quake-json.js" type="text/javascript"></script>
</head>
<body style="background-color:#FFFFFF;font-family:Arial, Helvetica, sans-serif;font-size:12px">
<?php
# Set timezone in PHP5/PHP4 manner
if (!function_exists('date_default_timezone_set')) {
  putenv("TZ=" . $ourTZ);
  } else {
  date_default_timezone_set("$ourTZ");
 print "<!-- $Version -->\n";
 print "<!-- lat=$myLat long=$myLong dist=$maxDistance mag=$minRichter distanceDisplay ='$distanceDisplay' -->\n";
// refresh cached copy of page if needed
// fetch/cache code by Tom at carterlake.org
$cacheName = $cacheFileDir.$cacheName;
global $Debug;
$Debug = '';
if (file_exists($cacheName) and filemtime($cacheName) + $refetchSeconds > time()) {
      print "<!-- using Cached version of $cacheName -->\n";
      $rawhtml = implode('', file($cacheName));
    } else {
	  if($refetchSeconds == 1) { print "<!-- force cache reload -->\n"; }
      print "<!-- loading $cacheName from $fileName -->\n";
      $rawhtml = QJ_fetchUrlWithoutHanging($fileName);
	  print $Debug;
	  $i = strpos($rawhtml,"\r\n\r\n");
	  $headers = substr($rawhtml,0,$i-1);
	  $content = substr($rawhtml,$i+2);
      $RC = '';
	  if (preg_match("|^HTTP\/\S+ (.*)\r\n|",$rawhtml,$matches)) {
	    $RC = trim($matches[1]);
	  }
	  if(!preg_match('|200 |',$RC)) {
         print "<!-- fetch returns RC='".$RC."' for $fileName -->\n";
	  } else {
		$fp = fopen($cacheName, "w");
		if ($fp) {
		  $write = fputs($fp, $rawhtml);
		  fclose($fp);
		} else {
		  print "<!-- unable to write cache file $cacheName -->\n";
	  }
      print "<!-- loading finished. -->\n";
//get the earthquake data JSON entries
//  if(strpos($rawhtml,"\r\n\r\n") !== false) {
//    list($headers,$content) = explode("\r\n\r\n",$rawhtml); // extract the 'meat' from the response 
//  } else {
//	$headers = '';
//	$content = '';
//  }
  $i = strpos($rawhtml,"\r\n\r\n");
  $headers = substr($rawhtml,0,$i-1);
  $content = substr($rawhtml,$i+2);
  if(preg_match('|Transfer-Encoding:\s+chunke|Ui',$headers)) {
	  print  "<!-- unchunking response -->\n"; 
	  print  "<!-- in=".strlen($rawhtml);
      $content = preg_replace("|\r\n[0-9a-fA-F]+\r\n|Uis",'',$content); // kludge, but should get them all :)
	  print  " out=".strlen($content). " bytes -->\n";
	  $rawhtml = $headers . "\r\n\r\n" . $content; // put it back unchunked
  $utctimestamp = '';
  if(preg_match('|\nLast-Modified: (.*)\n|Ui',$headers,$match)) {
	$udate = trim($match[1]);
	$utimestamp = strtotime($udate);
	print "<!-- data last modified $udate -->\n";
  } elseif (file_exists($cacheName)) {
	$utimestamp = filemtime($cacheName);
	print "<!-- cache data saved ".gmdate($timeFormat,$utimestamp)." UTC -->\n";
  } else {
	$utimestamp = time();  // get unix time for date
	print "<!-- using now as last modified date ".gmdate($timeFormat,$utimestamp)." UTC -->\n";
  $updatedUTC = langtransstr('Update time') . " = " . gmdate($timeFormat,$utimestamp);
  $updated = langtransstr('Update time') . " = " . date($timeFormat,$utimestamp);
  print "<!-- $updatedUTC UTC-->\n"; 
  print "<!-- $updated  Local-->\n";
  print "<!-- content length=".strlen($content)." -->\n";
  $quakeJSON = array();
  if(strlen($content) > 10) {
	$quakeJSON = json_decode($content,true);
  } else {
	print "<!-- no content to parse -->\n";
	print "<!-- USGS feed for earthquakes was not available at this time. See error messages above -->\n";
  if(strlen($content > 10) and function_exists('json_last_error')) { // report status, php >= 5.3.0 only
	switch (json_last_error()) {
	  case JSON_ERROR_NONE:           $error = '- No errors';                                                break;
	  case JSON_ERROR_DEPTH:          $error = '- Maximum stack depth exceeded';                             break;
	  case JSON_ERROR_STATE_MISMATCH: $error = '- Underflow or the modes mismatch';                          break;
	  case JSON_ERROR_CTRL_CHAR:      $error = '- Unexpected control character found';                       break;
	  case JSON_ERROR_SYNTAX:         $error = '- Syntax error, malformed JSON';                             break;
	  case JSON_ERROR_UTF8:           $error = '- Malformed UTF-8 characters, possibly incorrectly encoded'; break;
	  default:                        $error = '- Unknown error';                                            break;
  print  "<!-- JSON decode $error -->\n";
 $JQUAKES = array(); 
 if(isset($quakeJSON['features'])) {$JQUAKES = $quakeJSON['features']; }
 print "<!-- found ".count($JQUAKES)." earthquake records -->\n";
 /*  JSON returned format as associative array:
 Array
    [type] => FeatureCollection
    [features] => Array
        (
            [0] => Array
                (
                    [type] => Feature
                    [properties] => Array
                        (
                            [mag] => 2.2
                            [place] => 4km NNW of Brawley, California
                            [time] => 1346625108  (UTC timestamp)
                            [tz] => -420   (minutes offset from UTC for local time)
                            [url] => http://earthquake.usgs.gov/earthquakes/eventpage/ci15209889
                            [felt] => 1
                            [cdi] => 2
                            [mmi] => 
                            [alert] => 
                            [status] => AUTOMATIC
                            [tsunami] => 
                            [sig] => 75
                            [net] => ci
                            [code] => 15209889
                            [ids] => ,ci15209889,
                            [sources] => ,ci,
                            [types] => ,dyfi,general-link,geoserve,nearby-cities,origin,scitech-link,
                        )
                    [geometry] => Array
                        (
                            [type] => Point
                            [coordinates] => Array
                                (
                                    [0] => -115.5453 (longitude)
                                    [1] => 33.013   (latitude)
                                    [2] => 12.6  (depth in km)
                                )
                        )
                    [id] => ci15209889
                )
            [1] => Array
                (
                    [type] => Feature
                    [properties] => Array
                        (
                            [mag] => 4.8
                            [place] => 80km SSW of Adak, Alaska
                            [time] => 1346621542
                            [tz] => -720
                            [url] => http://earthquake.usgs.gov/earthquakes/eventpage/usc000cdrv
                            [felt] => 
                            [cdi] => 
                            [mmi] => 
                            [alert] => 
                            [status] => REVIEWED
                            [tsunami] => 
                            [sig] => 354
                            [net] => us
                            [code] => c000cdrv
                            [ids] => ,usc000cdrv,
                            [sources] => ,us,
                            [types] => ,eq-location-map,general-link,geoserve,historical-moment-tensor-map,historical-seismicity-map,nearby-cities,origin,p-wave-travel-times,phase-data,scitech-link,tectonic-summary,
                        )
                    [geometry] => Array
                        (
                            [type] => Point
                            [coordinates] => Array
                                (
                                    [0] => -176.947
                                    [1] => 51.1786
                                    [2] => 46.34
                                )
                        )
                    [id] => usc000cdrv
                )
 // examine, process and format each line -- omit quakes not
 //   meeting the $minRichter and $maxDistance criteria
  $quakesFound = 0;
  $doneHeader = false;
  $comma = '';
  $dmaxDist = $distanceDisplay; // load template
  if(preg_match('|^km|',$dmaxDist)) {
    $maxDistanceMi = round($maxDistance/1.609344,0);
	$maxDistanceKm = $maxDistance;
  } else {
    $maxDistanceMi = $maxDistance;
	$maxDistanceKm = round($maxDistance*1.609344,0);
  $dmaxDist = preg_replace('|mi|',"$maxDistanceMi mi",$dmaxDist);
  $dmaxDist = preg_replace('|km|',"$maxDistanceKm km",$dmaxDist);
  $JSONout = "var data = {\"markers\": [\n"; 
  $tgt = '';
  if($doLinkTarget) {$tgt = ' target="_blank"';}
  foreach ($JQUAKES as $key => $onequake) {
      $magnitude = $onequake['properties']['mag'];
      $magnitude = sprintf("%1.1F",$magnitude);  // ensure one decimal point displayed
      if ($magnitude >= "$minRichter")  {  // lets process it
      // load local variables
 	  $mapURL = $onequake['properties']['url'];
      // format quake date/time as local time at epicenter
	  $Qtimestamp = $onequake['properties']['time'];
	  if(strlen($Qtimestamp) > 10) {$Qtimestamp = substr($Qtimestamp,0,10); }
	  $QDateTime = gmdate($timeFormat,$Qtimestamp+$onequake['properties']['tz']*60);
	  $QDateTime = preg_replace('| GMT$|i','',$QDateTime); // Remove GMT string from local time text
	  // extract lat/long/depth
	  list($longitude,$latitude,$depth) = $onequake['geometry']['coordinates'];
	  $kmDepth = round($depth,1);
      $miDepth = round($kmDepth/1.609344,1);
	  $depth = $distanceDisplay;
	  $depth = preg_replace('|mi|',"$miDepth mi",$depth);
	  $depth = preg_replace('|km|',"$kmDepth km",$depth);
	  preg_match('!^(\d+)km (\S+) of (.*)$!',$onequake['properties']['place'],$matches);
	  if(isset($matches[2])) {
		  $kmLoc = $matches[1];
		  $locDir = langtransstr($matches[2]);
		  $locText = $matches[3];
		  $miLoc = round($kmLoc/1.609344,0);
		  $location = $distanceDisplay; // load template
		  $location = preg_replace('|mi|',"$miLoc mi",$location);
		  $location = preg_replace('|km|',"$kmLoc km",$location);
		  $location .= " $locDir ".langtransstr('of')." ".$locText;
	  } else {
		  $location = $onequake['properties']['place'];
	  }
	  // provide highlighting for quakes >= $highRichter
	  if ($magnitude >= $highRichter) {
	     $magnitude = "<span style=\"color: red\">$magnitude</span>";
	     $location = "<span style=\"color: red;\">$location</span>";
	  }
	  $distanceM = round(distance($myLat,$myLong,$latitude,$longitude,"M"));
	  $distanceK = round(distance($myLat,$myLong,$latitude,$longitude,"K"));
	  $distKsort = sprintf("%06d",$distanceK); // make an alpha sort key
	  $dText = $distanceDisplay; // load template
	  $dText = preg_replace('|mi|',"$distanceM mi",$dText);
	  $dText = preg_replace('|km|',"$distanceK km",$dText);
	  $compareDistance = preg_match('|^km|',$distanceDisplay)?$distanceK:$distanceM;
      if ($compareDistance <= $maxDistance) { // only print 'close' ones
	  $quakesFound++;    // keep a tally of quakes for summary
	  if (! $doneHeader) {  // print the header if needed
// --------------- customize HTML if you like -----------------------
    <div id="map-container">
      <div id="map"></div>
    </div>
<?php if(count($JQUAKES) > 0) { // only do the legend if there is a map to produce ?>
    <script type="text/javascript">
// <![CDATA[
     document.getElementById("map-container").style.display="block"; // got JavaScript enabled.. display map
	// only write the map legend if JavaScript is enabled
    var legend = '<p style="text-align: center"><img src="<?php print $imagesDir; ?>mma_20_green.png" height="20" width="12" alt="Home" style="vertical-align:middle"/> <?php echo $ourLocationName;?> | '+"\n"+ 
'<img src="<?php print $imagesDir; ?>mma_20_yellow.png" height="20" width="12" alt="Quake" style="vertical-align:middle"/> M<?php print $minRichter;?> - &lt; M<?php print $highRichter; ?> | '+"\n"+ 
'<img src="<?php print $imagesDir; ?>mma_20_red.png" height="20" width="12" alt="Quake" style="vertical-align:middle"/> M<?php print $highRichter; ?>+ | '+
'<img src="<?php print $imagesDir; ?>m1.png" height="25" width="25" alt="Quake Cluster" style="vertical-align:middle"/> <?php langtrans("Cluster - click to expand details"); ?>'+"</p>\n";
    document.write(legend);
// ]]>
	</script>
<?php } // end of produce legend if a map is produced  ?>
    <noscript><p>
<b><?php langtrans('Enable JavaScript to view the Google Map.'); ?></b>
</p>
    </noscript>
<?php
	    print "
<p class=\"quake\" style=\"text-align: center;\"><strong>
".langtransstr('Earthquakes in the past 7 days of magnitude')." $minRichter ".langtransstr('or greater within')." $dmaxDist <br/>$updated</strong></p>
<table class=\"sortable quake\" cellpadding=\"1\" cellspacing=\"1\" border=\"0\">
<thead>
  <tr>
	<th class=\"sorttable_nosort\">".langtransstr('Epicenter Near')."</th>
	<th style=\"cursor: n-resize;\"><script type=\"text/javascript\">document.write('&#8593;&#8595;');</script>".langtransstr('Magnitude')."</th>
	<th style=\"cursor: n-resize; text-align: center;\"><script type=\"text/javascript\">document.write('&#8593;&#8595;');</script>".langtransstr('Distance to Epicenter')."</th>
	<th style=\"cursor: n-resize;\"><script type=\"text/javascript\">document.write('&#8593;&#8595;');</script>".langtransstr('Local Time')."</th>
	<th class=\"sorttable_nosort\">".langtransstr('Link')."</th>
  </tr>
</thead>
<tbody>
	    $doneHeader = 1;
	  } // end doneHeader
// --------------- customize HTML if you like -----------------------
	    print "
<tr>
  <td align=\"left\" style=\"white-space:normal\"><a href=\"$mapURL\"$tgt>$location</a></td>
  <td align=\"center\"><b>$magnitude</b></td>
  <td align=\"center\" style=\"white-space:nowrap\"><span style=\"display:none\">$distKsort</span><b>$dText</b></td>
  <td align=\"left\" style=\"white-space:nowrap\"><span style=\"display: none\">$Qtimestamp</span>$QDateTime</td>
  <td align=\"center\"><a href=\"$mapURL\"$tgt>".langtransstr('map')."</a></td>
</tr>\n";
      $JSONout .= "$comma";
	  $Jloc = strip_tags($location);
	  $Jmag = strip_tags($magnitude);
	   $JSONout .= " {\"loc\":\"$Jloc\",\"lat\":\"$latitude\",\"long\":\"$longitude\",\"mag\":\"$Jmag\",\"url\":\"$mapURL\",\"time\":\"$QDateTime\",\"dist\":\"$dText\",\"depth\":\"$depth\"}";
       $comma = ",\n";
	  } /* else {print "<!-- lat='$latitude' long='$longitude' reject distance $distanceK > $maxDistance for $location -->\n"; } */// end maxdistance
	 } // end minRichter
  } // end foreach loop
// finish up.  Write trailer info
	  if ($doneHeader) {
// --------------- customize HTML if you like -----------------------
	     print "</tbody>\n</table>\n";
		     <script type="text/javascript">
// <![CDATA[
	// only write the map legend if JavaScript is enabled
    var footnote = '<p style="text-align: center"><small>'+
	'<?php langtrans("Note: Click on column heading marked with"); ?> &#8593;&#8595; '+
	'<?php langtrans("to sort column contents."); ?>'+
	"</small></p>\n";
    document.write(footnote);
// ]]>
	</script>
<?php
		 print "<p>$quakesFound ".
		 langtransstr("earthquakes found. Click on location or map links for more details from the <a href=\"$mapMainURL\">USGS</a>")."</p>\n";
	  } else {
// --------------- customize HTML if you like -----------------------
        if(strlen($content) > 10) {
  	      print "<p>".langtransstr("No earthquakes of magnitude")." $minRichter ".langtransstr("or greater within")." $dmaxDist ".langtransstr("reported in last 7 days").".</p>\n";
		} else {
		  print "<h3>".langtransstr('The USGS feed for earthquakes was not available at this time.')."</h3>\n";
	  }	 
	$JSONout .= "\n]}\n";
    print "<script type=\"text/javascript\">\n// <![CDATA[\n";
	print $JSONout;
	print '// Generated Google Map code
var markers = [];
var imagesDir = \''.$imagesDir.'\';  // our marker/cluster images locations
var highMag = '.$highRichter.';      // highlight quakes >= this value
var doLinkTarget = '.$doLinkTarget.';    // generate target="_blank" option
MarkerClusterer.IMAGE_PATH = imagesDir+"m";  // set to use our images for clusters
function initialize() {  // Google map will load this function at page-load 
	var center = new google.maps.LatLng('.$myLat.','.$myLong.');
	var options = { // options for Google map
	  \'zoom\': '.$mapZoomDefault.',
	  \'center\': center,
	  \'scaleControl\': true,
	  \'mapTypeId\': google.maps.MapTypeId.TERRAIN
	var cOptions = { // options for markerCluster
	  \'gridSize\': 22,
	  \'minimumClusterSize\': 4,
	  \'averageCenter\': true
	var map = new google.maps.Map(document.getElementById("map"), options);
	// Make the info window close when clicking anywhere on the map.
	google.maps.event.addListener(map, \'click\', closeInfoWindow);
	// Create a single instance of the InfoWindow object which will be shared
	// by all Map objects to display information to the user.
	var ourInfoWindow = new google.maps.InfoWindow();
	var markerImageRed    = new google.maps.MarkerImage(imagesDir+"mma_20_red.png");
	var markerImageBlue   = new google.maps.MarkerImage(imagesDir+"mma_20_blue.png");
	var markerImageGreen  = new google.maps.MarkerImage(imagesDir+"mma_20_green.png");
	var markerImageYellow = new google.maps.MarkerImage(imagesDir+"mma_20_yellow.png");
    var markerImageShadow = new google.maps.MarkerImage(imagesDir+"mma_20_shadow.png", 
														new google.maps.Size(22, 20),
														new google.maps.Point(0,0),
														new google.maps.Point(0,20)
														);
	for (var i = 0; i < data.markers.length; i++) {
	  var latLng = new google.maps.LatLng(data.markers[i].lat,
		  data.markers[i].long);
      var loc = data.markers[i].loc;
	  var mag = data.markers[i].mag;
	  var url = data.markers[i].url;
	  var qtime = data.markers[i].time;
	  var dist = data.markers[i].dist;
	  var depth = data.markers[i].depth;
	  var useMarkerIcon = markerImageYellow;  // default to WX marker
	  if (mag >= highMag) { useMarkerIcon = markerImageRed;     }
	  var title = "M"+mag+" - "+qtime;
	  var tgt = \'\';
	  if(doLinkTarget > 0) {tgt = \' target="_blank"\'; }
	  var popupHtml = "<small><a href=\""+url+"\""+tgt+"><strong>M"+mag+"</strong></a> - "+
	  qtime+" - '.langtransstr("Depth").': "+depth+"<br/>"+
	  loc+" <br/>"+
	  "'.langtransstr("Distance to epicenter").': "+dist+
      "<br clear=\"left\"/></small>";
	  createMarker(map,latLng,useMarkerIcon,markerImageShadow,title,popupHtml);  
	} // end of loop to create markers
	if (data.markers.length > 0 ) {
	  var marker = new google.maps.Marker({
		map: map,
		position: center,
		clickable: true,
		draggable: false,
		icon: markerImageGreen,
		shadow: markerImageShadow,
		title: "'.$ourLocationName.'",
	  });
	var markerCluster = new MarkerClusterer(map, markers, cOptions);
	function  createMarker (map,latLng, useMarkerIcon, markerImageShadow, title, popupHtml) {
	  var marker = new google.maps.Marker({
		map: map,
		position: latLng,
		clickable: true,
		draggable: false,
		icon: useMarkerIcon,
		shadow: markerImageShadow,
		title: title
	  });
	  marker.popupHtml = popupHtml;
	  google.maps.event.addListener(marker, \'click\', function() {
		openInfoWindow(marker);
	  });
	  markers.push(marker);
	function clearClusters(e) {
	  e.preventDefault();
	  e.stopPropagation();
	  markerClusterer.clearMarkers();
	/**
	 * Called when clicking anywhere on the map and closes the info window.
	 */
	function closeInfoWindow () {
	  ourInfoWindow.close();
	/**
	 * Opens the shared info window, anchors it to the specified marker, and
	 * displays the marker\'s position as its content.
	 */
	function openInfoWindow (marker) {
	  ourInfoWindow.setContent(marker.popupHtml);
	  ourInfoWindow.open(map, marker);
} // end of initialize function
// now load it all up and display the map
google.maps.event.addDomListener(window, \'load\', initialize);
// ]]>
	print "</script>\n";
// print footer of page if needed    
// --------------- customize HTML if you like -----------------------
if (! $tablesOnly ) {   
</body>
</html>
<?php
// ----------------------------functions ----------------------------------- 
// get contents from one URL and return as string 
 function QJ_fetchUrlWithoutHanging($url,$useFopen=false) {
// thanks to Tom at Carterlake.org for this script fragment
  global $Debug, $needCookie,$timeStamp,$TOTALtime;
  $overall_start = time();
  if (! $useFopen) {
   // Set maximum number of seconds (can have floating-point) to wait for feed before displaying page without feed
   $numberOfSeconds=5;   
   // Suppress error reporting so Web site visitors are unaware if the feed fails
   error_reporting(0);
   // Extract resource path and domain from URL ready for fsockopen
   $FullUrl = $url;
   $urlParts = parse_url($url);
   $domain = $urlParts['host'];
   if(isset($urlParts['port'])) {
      $port   = $urlParts['port'];
   } else { 
      $port   = 80;
   }
   $resourcePath = $urlParts['path'];
   $resourcePath = preg_replace('|nocache|','?'.$timeStamp,$resourcePath);
   if(isset($urlParts['query']))    {$resourcePath .= "?" . $urlParts['query']; }
   if(isset($urlParts['fragment'])) {$resourcePath .= "#" . $urlParts['fragment']; }
   $T_start = QJ_microtime_float();
   $hostIP = gethostbyname($domain);
   $T_dns = QJ_microtime_float();
   $ms_dns  = sprintf("%01.3f",round($T_dns - $T_start,3));
   $Debug .= "<!-- GET $resourcePath HTTP/1.1 \n      Host: $domain  Port: $port IP=$hostIP-->\n";
//   print "GET $resourcePath HTTP/1.1 \n      Host: $domain  Port: $port IP=$hostIP\n";
   // Establish a connection
   $socketConnection = fsockopen($hostIP, $port, $errno, $errstr, $numberOfSeconds);
   $T_connect = QJ_microtime_float();
   $T_puts = 0;
   $T_gets = 0;
   $T_close = 0;
   if (!$socketConnection)
       {
       // You may wish to remove the following debugging line on a live Web site
       $Debug .= "<!-- Network error: $errstr ($errno) -->\n";
//       print "Network error: $errstr ($errno)\n";
       }    // end if
   else    {
       $xml = '';
	   $getString = "GET $resourcePath HTTP/1.1\r\nHost: $domain\r\nConnection: Close\r\n";
	   if (isset($needCookie[$domain])) {
	     $getString .= $needCookie[$domain] . "\r\n";
		 $Debug .=  "<!-- cookie used '" . $needCookie[$domain] . "' for GET to $domain -->\n";
	   }
	   $getString .= "Accept: text/plain,text/html\r\n";
	   $getString .= "\r\n";
//	   print "Sending:\n$getString\n\n";
       fputs($socketConnection, $getString);
       $T_puts = QJ_microtime_float();
	   
       // Loop until end of file
	   $TGETstats = array();
	   $TGETcount = 0;
       while (!feof($socketConnection))
           {
		   $T_getstart = QJ_microtime_float();
           $xml .= fgets($socketConnection, 16384);
		   $T_getend = QJ_microtime_float();
		   $TGETcount++;
		   $TGETstats[$TGETcount] = sprintf("%01.3f",round($T_getend - $T_getstart,3));
           }    // end while
       $T_gets = QJ_microtime_float();
       fclose ($socketConnection);
       $T_close = QJ_microtime_float();
       }    // end else
   $ms_connect = sprintf("%01.3f",round($T_connect - $T_dns,3));
   if($T_close > 0) {
      $ms_puts = sprintf("%01.3f",round($T_puts - $T_connect,3));
	  $ms_gets = sprintf("%01.3f",round($T_gets - $T_puts,3));
	  $ms_close = sprintf("%01.3f",round($T_close - $T_gets,3));
	  $ms_total = sprintf("%01.3f",round($T_close - $T_start,3)); 
    } else {
       $ms_puts = 'n/a';
	  $ms_gets = 'n/a';
	  $ms_close = 'n/a';
	  $ms_total = sprintf("%01.3f",round($T_connect - $T_start,3)); 
   }
   $Debug .= "<!-- HTTP stats:  dns=$ms_dns conn=$ms_connect put=$ms_puts get($TGETcount blocks)=$ms_gets close=$ms_close total=$ms_total secs -->\n";
//   print  "HTTP stats: dns=$ms_dns conn=$ms_connect put=$ms_puts get($TGETcount blocks)=$ms_gets close=$ms_close total=$ms_total secs \n";
//   foreach ($TGETstats as $block => $mstimes) {
//     print "HTTP Block $block took $mstimes\n";
//   }
   $TOTALtime+= ($T_close - $T_start);
   $overall_end = time();
   $overall_elapsed =   $overall_end - $overall_start;
   $Debug .= "<!-- fetch function elapsed= $overall_elapsed secs. -->\n"; 
//   print "fetch function elapsed= $overall_elapsed secs.\n"; 
   return($xml);
 } else {
//   print "<!-- using file function -->\n";
   $T_start = QJ_microtime_float();
   $xml = implode('',file($url));
   $T_close = QJ_microtime_float();
   $ms_total = sprintf("%01.3f",round($T_close - $T_start,3)); 
   $Debug .= "<!-- file() stats: total=$ms_total secs -->\n";
//   print " file() stats: total=$ms_total secs.\n";
   $TOTALtime+= ($T_close - $T_start);
   $overall_end = time();
   $overall_elapsed =   $overall_end - $overall_start;
   $Debug .= "<!-- fetch function elapsed= $overall_elapsed secs. -->\n"; 
//   print "fetch function elapsed= $overall_elapsed secs.\n"; 
   return($xml);
   }    // end QJ_fetchUrlWithoutHanging
// ------------------------------------------------------------------
function QJ_microtime_float()
   list($usec, $sec) = explode(" ", microtime());
   return ((float)$usec + (float)$sec);
// ------------ distance calculation function ---------------------
    //**************************************
    //     
    // Name: Calculate Distance and Radius u
    //     sing Latitude and Longitude in PHP
    // Description:This function calculates 
    //     the distance between two locations by us
    //     ing latitude and longitude from ZIP code
    //     , postal code or postcode. The result is
    //     available in miles, kilometers or nautic
    //     al miles based on great circle distance 
    //     calculation. 
    // By: ZipCodeWorld
    //
    //This code is copyrighted and has
	// limited warranties.Please see http://
    //     www.Planet-Source-Code.com/vb/scripts/Sh
    //     owCode.asp?txtCodeId=1848&lngWId=8    //for details.    //**************************************
    //     
/*::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::*/
    /*:: :*/
    /*:: This routine calculates the distance between two points (given the :*/
    /*:: latitude/longitude of those points). It is being used to calculate :*/
    /*:: the distance between two ZIP Codes or Postal Codes using our:*/
    /*:: ZIPCodeWorld(TM) and PostalCodeWorld(TM) products. :*/
    /*:: :*/
    /*:: Definitions::*/
    /*::South latitudes are negative, east longitudes are positive:*/
    /*:: :*/
    /*:: Passed to function::*/
    /*::lat1, lon1 = Latitude and Longitude of point 1 (in decimal degrees) :*/
    /*::lat2, lon2 = Latitude and Longitude of point 2 (in decimal degrees) :*/
    /*::unit = the unit you desire for results:*/
    /*::where: 'M' is statute miles:*/
    /*:: 'K' is kilometers (default):*/
    /*:: 'N' is nautical miles :*/
    /*:: United States ZIP Code/ Canadian Postal Code databases with latitude & :*/
    /*:: longitude are available at http://www.zipcodeworld.com :*/
    /*:: :*/
    /*:: For enquiries, please contact sales@zipcodeworld.com:*/
    /*:: :*/
    /*:: Official Web site: http://www.zipcodeworld.com :*/
    /*:: :*/
    /*:: Hexa Software Development Center 
 All Rights Reserved 2004:*/
    /*:: :*/
    /*::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::*/
    function distance($lat1, $lon1, $lat2, $lon2, $unit) { 
    $theta = $lon1 - $lon2; 
    $dist = sin(deg2rad($lat1)) * sin(deg2rad($lat2)) + cos(deg2rad($lat1)) * cos(deg2rad($lat2)) * cos(deg2rad($theta)); 
    $dist = acos($dist); 
    $dist = rad2deg($dist); 
    $miles = $dist * 60 * 1.1515;
    $unit = strtoupper($unit);
    if ($unit == "K") {
    return ($miles * 1.609344); 
    } else if ($unit == "N") {
    return ($miles * 0.8684);
    } else {
    return $miles;
    }
// ------------------------------------------------------------------
//  testing function to safely set location/distance/zone using testloc= parm 
function setTestLoc ( $LOC )
  global $myLat,$myLong,$ourTZ,$maxDistance;
  if ($LOC == 'NZ') {
    $myLat = -37.07;   
    $myLong = 174.35; 
    $ourTZ = "Pacific/Auckland";  
	$maxDistance = 1000;
// Yes, the above settings are for Brian Hamilton's Grahams Beach, NZ station
// in honor of his outstanding work as author of Weather-Display software
  } elseif ($LOC == 'JP') {
    $myLat = 35.8499;   
    $myLong = 139.97; 
    $ourTZ = "Asia/Tokyo";  
	$maxDistance = 1000;
  } elseif ($LOC == 'MX') {
     $myLat = 19.3999;   
    $myLong = -99.1999; 
    $ourTZ = "America/Mexico_City";  
	$maxDistance = 1000;
  } elseif ($LOC == 'PR') {
    $myLat = 18.467248;   
    $myLong = -66.108963; 
    $ourTZ = "America/Puerto_Rico";  
	$maxDistance = 2000;
  } elseif ($LOC == 'AK') {
     $myLat = 61.21574783;   
    $myLong = -149.86894226; 
    $ourTZ = "America/Anchorage";  
	$maxDistance = 2000;
  } elseif ($LOC == 'IR') {
     $myLat = 35.68;   
    $myLong = 51.3499; 
    $ourTZ = "Asia/Tehran";  
	$maxDistance = 1000;
  } elseif ($LOC == 'GR') {
     $myLat = 37.983056;   
    $myLong = 23.733056; 
    $ourTZ = "Europe/Athens";  
	$maxDistance = 1000;
  } elseif ($LOC == 'SU') {
     $myLat = 3.0;   
    $myLong = 100.0; 
    $ourTZ = "Asia/Jakarta";  
	$maxDistance = 1000;
// ------------------------------------------------------------------
function QJ_ISO_Lang ( $inLang) {
  global $SITE;
  if(isset($SITE['ISOLang'])) { 
    $ISOlang = $SITE['ISOLang']; 
  } else {
    $ISOlang =  array ( // ISO 639-1 2-character language abbreviations from country domain 
	'af' => 'af',
	'bg' => 'bg',
	'ct' => 'ca',
	'dk' => 'da',
	'nl' => 'nl',
	'en' => 'en',
	'fi' => 'fi',
	'fr' => 'fr',
	'de' => 'de',
	'el' => 'el',
	'ga' => 'ga',
	'it' => 'it',
	'he' => 'he',
	'hu' => 'hu',
	'no' => 'no',
	'pl' => 'pl',
	'pt' => 'pt',
	'ro' => 'ro',
	'es' => 'es',
	'se' => 'sv',
	'si' => 'sl',
  );
  if(isset($ISOlang[$inLang])) {
	  return($ISOlang[$inLang]);
  } else {
	  return('en');
// --------------end of functions ---------------------------------------
?><?php
// PHP script by Ken True, webmaster@saratoga-weather.org
// for Martin Collins at  http://www.hebrides-photos.com/
// Version 1.01 - 27-Feb-2008 -- Initial release
// Version 1.02 - 12-Mar-2008 -- added settings awareness for Carterlake/WD/PHP template Settings.php
// Version 1.03 - 26-Apr-2008 -- fixed UTC-to-local timezone difference issue for some webservers
// Version 1.04 - 03-Jul-2009 -- PHP5 timezone setting support added
// Version 1.05 - 26-Jan-2011 -- added support for $cacheFileDir global
// Version 1.06 - 30-May-2011 -- fix Notice: error for $doneHeader
// Version 1.07 - 23-Aug-2011 -- fixes for BGS website changes
  $Version = 'quake-UK.php V1.07 - 23-Aug-2011';
// you may copy/modify/use this script as you see fit,
// no warranty is expressed or implied.
// Customized for: Quakes reported by UK BGS (
//   http://www.earthquakes.bgs.ac.uk/recent_events/recent_events.html
/* NOTE: this script uses the data from the BGS with permission as long as the phrase
<p>Reproduced with the permission of the <a href=\"http://www.earthquakes.bgs.ac.uk/recent_events/recent_events.html\">
British Geological Survey</a> &copy; NERC. All rights Reserved.</p>
appears in the output.
See http://bgs.ac.uk/about/copyright/published.html for more details.
Martin has received permission from the BGS for use of their data by this
script for personal weather websites (non-commercial).
// output: creates XHTML 1.0-Strict HTML page (default)
// Options on URL:
//      tablesonly=Y    -- returns only the body code for inclusion
//                         in other webpages.  Omit to return full HTML.
//      magnitude=N.N   -- screens results looking for Richter magnitudes of
//                          N.N or greater.
//      distance=MMM    -- display quakes with epicenters only within 
//                         MMM km of your location
// example URL:
//  http://your.website/quake-UK.php?tablesonly=Y&magnitude=2.1&distance=45
//  would return data without HTML header/footer for earthquakes of
//  magnitude 2.1 or larger within a 45 mile radius of your location.
// Usage:
//  you can use this webpage standalone (customize the HTML portion below)
//  or you can include it in an existing page:
//            <?php $doIncludeQuake = true;
//                  include("quake-UK.php");
//            ?> 
//  no parms:    include("quake-UK.php"); 
//  parms:    include("http://your.website/quake-UK.php?tableonly=Y&magnitude=2.0&distance=50");
// settings:  
//  set $ourTZ to your time zone
//    other settings are optional
// cacheName is name of file used to store cached USGS webpage
  $ourTZ = "Europe/London";  //NOTE: this *MUST* be set correctly to
// translate UTC times to your LOCAL time for the displays.
//  http://saratoga-weather.org/timezone.txt  has the list of timezone names
//  pick the one that is closest to your location and put in $ourTZ
// also available is the list of country codes (helpful to pick your zone
//  from the timezone.txt table
//  http://saratoga-weather.org/country-codes.txt : list of country codes
 $myLat = '51.417';
 $myLong = '-0.434';
 $highRichter = "3.0"; //change color for quakes >= this magnitude
//  pick a format for the time to display ..uncomment one (or make your own)
//$timeFormat = 'D, Y-m-d H:i:s T';  // Fri, 2006-03-31 14:03:22 TZone
//$timeFormat = 'D, Y-M-d H:i:s T';  // Fri, 31-Mar-2006 14:03:22 TZone
  $timeFormat = 'H:i:s T D, d-M-y';  // 14:03:22 TZone Fri, 31-Mar-06
  $cacheFileDir = './';   // default cache file directory
  $cacheName = "quakesUK.txt";  // used to store the file so we don't have to
  //                          fetch it each time
  $refetchSeconds = 1800;     // refetch every nnnn seconds
// end of settings
// Constants
// don't change $baseURL or $fileName or script may break ;-)
  $baseURL = "http://www.quakes.bgs.ac.uk";  //BGS website (omit trailing slash)
  $fileName = "http://www.quakes.bgs.ac.uk/earthquakes/recent_uk_events.html";
// end of constants
// overrides from Settings.php if available
global $SITE;
if (isset($SITE['latitude'])) 	{$myLat = $SITE['latitude'];}
if (isset($SITE['longitude'])) 	{$myLong = $SITE['longitude'];}
if (isset($SITE['tz'])) {$ourTZ = $SITE['tz']; }
if (isset($SITE['timeFormat'])) {$timeFormat = $SITE['timeFormat'];}
if(isset($SITE['cacheFileDir']))     {$cacheFileDir = $SITE['cacheFileDir']; }
// end of overrides from Settings.php
// ------ start of code -------
// Check parameters and force defaults/ranges
if ( ! isset($_REQUEST['tablesonly']) ) {
        $_REQUEST['tablesonly']="";
if (isset($doIncludeQuake) and $doIncludeQuake ) {
  $tablesOnly = "Y";
} else {
  $tablesOnly = $_REQUEST['tablesonly']; // any nonblank is ok
if ($tablesOnly) {$tablesOnly = "Y";}
// for testing only 
if ( isset($_REQUEST['lat']) ) { $myLat = $_REQUEST['lat']; }
if ( isset($_REQUEST['lon']) ) { $myLong = $_REQUEST['lon']; }
if (isset($_REQUEST['sce']) && strtolower($_REQUEST['sce']) == 'view' ) {
//--self downloader --
   $filenameReal = __FILE__;
   $download_size = filesize($filenameReal);
   header('Pragma: public');
   header('Cache-Control: private');
   header('Cache-Control: no-cache, must-revalidate');
   header("Content-type: text/plain");
   header("Accept-Ranges: bytes");
   header("Content-Length: $download_size");
   header('Connection: close');
   readfile($filenameReal);
   exit;
// omit HTML <HEAD>...</HEAD><BODY> if only tables wanted	
// --------------- customize HTML if you like -----------------------
if (! $tablesOnly) {
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Pragma" content="no-cache" />
<meta http-equiv="Cache-Control" content="no-cache" />
<meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1" />
<title>Recent UK Earthquakes from BGS</title>
</head>
<body style="background-color:#FFFFFF;">
<?php
// ------------- code starts here -------------------
// Establish timezone offset for time display
# Set timezone in PHP5/PHP4 manner
  if (!function_exists('date_default_timezone_set')) {
	putenv("TZ=" . $ourTZ);
#	$Status .= "<!-- using putenv(\"TZ=$ourTZ\") -->\n";
    } else {
	date_default_timezone_set("$ourTZ");
#	$Status .= "<!-- using date_default_timezone_set(\"$ourTZ\") -->\n";
   }
 print("<!-- $Version -->\n");
 print("<!-- server lcl time is: " . date($timeFormat) . " -->\n");
 print("<!-- server GMT time is: " . gmdate($timeFormat) . " -->\n");
 print("<!-- server timezone for this script is: " . getenv('TZ')." -->\n");
 $timediff = date('Z');
 print "<!-- TZ Delta = $timediff seconds (" . $timediff/3600 . " hours) -->\n";
// refresh cached copy of page if needed
// fetch/cache code by Tom at carterlake.org
$cacheName = $cacheFileDir.$cacheName;
if (isset($_REQUEST['cache'])) {$refetchSeconds = 1; }
if (file_exists($cacheName) and filemtime($cacheName) + $refetchSeconds > time()) {
      echo "<!-- using Cached version of $cacheName -->\n";
      $html = implode('', file($cacheName));
    } else {
      echo "<!-- loading $cacheName from $fileName -->\n";
      $html = fetchUrlWithoutHangingUKQ($fileName);
      $fp = fopen($cacheName, "w");
      if ($fp) {
        $write = fputs($fp, $html);
        fclose($fp);
      } else {
            print "<!-- unable to write cache file $cacheName -->\n";
      }
      echo "<!-- loading finished. -->\n";
 // note: new website design does not include an 'updated' timestamp..
 // use cache file modification time or current time as 'updated'
 if(file_exists($cacheName)) {
	 $UTCdate = filemtime($cacheName);
 } else {
	 $UTCdate = time();
 $updatedUTC = gmdate($timeFormat,$UTCdate);
 $updated =  date($timeFormat,$UTCdate);
 //print "<!-- updatedUTC $updatedUTC -->\n"; 
 print "<!-- updated    $updated -->\n";
// Select the middle part of the page for processing
  preg_match('|<table class="bodyTable".*>(.*)</table>|Uis',$html,$betweenspan);
  //print "<!-- betweenspan \n" . print_r($betweenspan,true) . " -->\n";
<table class="bodyTable" cellspacing="1" cellpadding="5" border="0">
<tr> 
<th align="center"> Date </th> 
<th align="center"> Time </th> 
<th align="center">Lat </th> 
<th align="center">Lon </th> 
<th align="center">Depth </th> 
<th align="center">Mag   </th> 
<th align="center">Int   </th> 
<th>Region </th> 
<th>Comment  </th> 
</tr>
<tr><td valign="top" align="center" nowrap>
<A HREF="/earthquakes/recent_events/20110822031500.html">
2011/08/22</A></td>
<td valign="top" align="center" nowrap>   03:15:18.8 </td>
<td valign="top" align="center" nowrap>   56.852 </td>
<td valign="top" align="center" nowrap>    -5.766  </td>
<td valign="top" align="center" nowrap>    12.7 </td>
<td valign="top" align="center" nowrap> 0.7 </td>
<td valign="top" align="center" nowrap>  </td>
<td valign="top" align="left" nowrap> LOCHAILORT,HIGHLAND </td> 
<td valign="top" align="left" nowrap>                      </td></tr>
<tr><td valign="top" align="center" nowrap>
<A HREF="/earthquakes/recent_events/20110822023700.html">
2011/08/22</A></td>
<td valign="top" align="center" nowrap>   02:37:46.5 </td>
<td valign="top" align="center" nowrap>   56.862 </td>
<td valign="top" align="center" nowrap>    -5.707  </td>
<td valign="top" align="center" nowrap>    12.3 </td>
<td valign="top" align="center" nowrap> 0.5 </td>
<td valign="top" align="center" nowrap>  </td>
<td valign="top" align="left" nowrap> LOCHAILORT,HIGHLAND </td> 
<td valign="top" align="left" nowrap>                      </td></tr>
<tr><td valign="top" align="center" nowrap>
  preg_match_all('|<tr>(.*)</tr>|Uis',$betweenspan[1],$rawrows);
  // print "<!-- rawrows \n".print_r($rawrows,true)." -->\n";  
  $quakesFound = 0;
  $doneHeader = 0;
// scan the results and process by 1s 
  foreach ($rawrows[1] as $n => $row) {
	if(preg_match('|<th>|is',$row)) { continue; }
    $quakesFound++;
	preg_match_all('|<td.*>(.*)</td>|Uis',$row,$qdata);
	print "<!-- qdata[1] \n".print_r($qdata[1],true)." -->\n";
Date    [0] => 
<A HREF="/earthquakes/recent_events/20110807171120.html">
2011/08/07</A>
Time    [1] =>    17:11:57.9 
Lat     [2] =>    53.154 
Long    [3] =>     -4.770  
Deph    [4] =>     11.9 
Mag     [5] =>  0.8 
Int     [6] =>   3  
Regn    [7] =>  CAERNARFON BAY 
Cmnt    [8] =>  20KM SW OF HOLYHEAD  
   preg_match('|<a href="(.*)">(.*)</a>|Uis',$qdata[1][0],$matches);
   $link = trim($matches[1]);
   $url = $baseURL . $link;
   $utcdate = trim($matches[2]);
   $utctime = trim($qdata[1][1]);
   $quaketime = date($timeFormat, strtotime("$utcdate $utctime UTC"));
   $magnitude = trim($qdata[1][5]);
   $location =  trim($qdata[1][7]);
   $latitude = trim($qdata[1][2]);
   $longitude = trim($qdata[1][3]);
   // provide highlighting for quakes >= $highRichter
   if ($magnitude >= $highRichter) {
	 $magnitude = "<span style=\"color: red\">$magnitude</span>";
	 $location = "<span style=\"color: red;\">$location</span>";
   }
   $distanceM = round(distance($myLat,$myLong,$latitude,$longitude,"M"));
   $distanceK = round(distance($myLat,$myLong,$latitude,$longitude,"K"));
//   print "<!-- link='$link' -->\n";
//   print "<!-- utc='$utctime' quaketime='$quaketime' -->\n";
//   print "<!-- magnitude='$magnitude' loc='$location' -->\n";
//   print "<!-- latitude='$latitude' longitude='$longitude' distanceM='$distanceM' distanceK='$distanceK' -->\n";
	  if (! $doneHeader) {  // print the header if needed
// --------------- customize HTML if you like -----------------------
	    print "
<table>
<tr><th colspan=\"5\" align=\"center\">UK Earthquakes in the last 50 days</th></tr>
<tr><th colspan=\"5\" align=\"center\">Updated: $updated</th></tr>
<tr><th>Epicenter Near</th><th>Magnitude</th><th>Distance to <br />Epicenter</th><th>Local Time</th><th>Link to<br />Map</th></tr>
	    $doneHeader = 1;
	  } // end doneHeader
// --------------- customize HTML if you like -----------------------
	    print "
<tr>
  <td><a href=\"$url\">$location</a></td>
  <td align=\"center\"><b>$magnitude</b></td>
  <td><b>$distanceM</b> mi (<b>$distanceK</b> km)</td>
  <td>$quaketime</td>
  <td align=\"center\"><a href=\"$url\">Map</a></td>
</tr>\n";
  } // end foreach loop
// finish up.  Write trailer info
	  if ($doneHeader) {
// --------------- customize HTML if you like -----------------------
	     print "</table><p>$quakesFound UK Earthquakes in the last 50 days.</p><p>Reproduced with the permission of the <a href=\"http://www.quakes.bgs.ac.uk/earthquakes/recent_uk_events.html\">British Geological Survey</a> &copy; NERC. All rights Reserved.</p>\n";
	  } else {
// --------------- customize HTML if you like -----------------------
	    print "<p>No UK Earthquakes recorded for the last 50 days.</p><p>Reproduced with the permission of the <a href=\"http://www.quakes.bgs.ac.uk/earthquakes/recent_uk_events.html\">British Geological Survey</a> &copy; NERC. All rights Reserved.</p>\n";
	  }	 
// print footer of page if needed    
// --------------- customize HTML if you like -----------------------
if (! $tablesOnly ) {   
</body>
</html>
<?php
// ----------------------------functions ----------------------------------- 
 function fetchUrlWithoutHangingUKQ($url) // thanks to Tom at Carterlake.org for this script fragment
   {
   // Set maximum number of seconds (can have floating-point) to wait for feed before displaying page without feed
   $numberOfSeconds=4;   
   // Suppress error reporting so Web site visitors are unaware if the feed fails
   error_reporting(0);
   // Extract resource path and domain from URL ready for fsockopen
   $url = str_replace("http://","",$url);
   $urlComponents = explode("/",$url);
   $domain = $urlComponents[0];
   $resourcePath = str_replace($domain,"",$url);
   // Establish a connection
   $socketConnection = fsockopen($domain, 80, $errno, $errstr, $numberOfSeconds);
   if (!$socketConnection)
       {
       // You may wish to remove the following debugging line on a live Web site
         print("<!-- Network error: $errstr ($errno) -->");
       }    // end if
   else    {
       $xml = '';
       fputs($socketConnection, "GET $resourcePath HTTP/1.0\r\nHost: $domain\r\n\r\n");
       // Loop until end of file
       while (!feof($socketConnection))
           {
           $xml .= fgets($socketConnection, 4096);
           }    // end while
       fclose ($socketConnection);
       }    // end else
   return($xml);
   }    // end function
// ------------ distance calculation function ---------------------
    //**************************************
    //     
    // Name: Calculate Distance and Radius u
    //     sing Latitude and Longitude in PHP
    // Description:This function calculates 
    //     the distance between two locations by us
    //     ing latitude and longitude from ZIP code
    //     , postal code or postcode. The result is
    //     available in miles, kilometers or nautic
    //     al miles based on great circle distance 
    //     calculation. 
    // By: ZipCodeWorld
    //
    //This code is copyrighted and has
	// limited warranties.Please see http://
    //     www.Planet-Source-Code.com/vb/scripts/Sh
    //     owCode.asp?txtCodeId=1848&lngWId=8    //for details.    //**************************************
    //     
/*::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::*/
    /*:: :*/
    /*:: This routine calculates the distance between two points (given the :*/
    /*:: latitude/longitude of those points). It is being used to calculate :*/
    /*:: the distance between two ZIP Codes or Postal Codes using our:*/
    /*:: ZIPCodeWorld(TM) and PostalCodeWorld(TM) products. :*/
    /*:: :*/
    /*:: Definitions::*/
    /*::South latitudes are negative, east longitudes are positive:*/
    /*:: :*/
    /*:: Passed to function::*/
    /*::lat1, lon1 = Latitude and Longitude of point 1 (in decimal degrees) :*/
    /*::lat2, lon2 = Latitude and Longitude of point 2 (in decimal degrees) :*/
    /*::unit = the unit you desire for results:*/
    /*::where: 'M' is statute miles:*/
    /*:: 'K' is kilometers (default):*/
    /*:: 'N' is nautical miles :*/
    /*:: United States ZIP Code/ Canadian Postal Code databases with latitude & :*/
    /*:: longitude are available at http://www.zipcodeworld.com :*/
    /*:: :*/
    /*:: For enquiries, please contact sales@zipcodeworld.com:*/
    /*:: :*/
    /*:: Official Web site: http://www.zipcodeworld.com :*/
    /*:: :*/
    /*:: Hexa Software Development Center 
 All Rights Reserved 2004:*/
    /*:: :*/
    /*::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::*/
    function distance($lat1, $lon1, $lat2, $lon2, $unit) { 
    $theta = $lon1 - $lon2; 
    $dist = sin(deg2rad($lat1)) * sin(deg2rad($lat2)) + cos(deg2rad($lat1)) * cos(deg2rad($lat2)) * cos(deg2rad($theta)); 
    $dist = acos($dist); 
    $dist = rad2deg($dist); 
    $miles = $dist * 60 * 1.1515;
    $unit = strtoupper($unit);
    if ($unit == "K") {
    return ($miles * 1.609344); 
    } else if ($unit == "N") {
    return ($miles * 0.8684);
    } else {
    return $miles;
    }
//To calculate the delta between the local time and UTC:
function tzdelta ( $iTime = 0 )
   if ( 0 == $iTime ) { $iTime = time(); }
   $ar = localtime ( $iTime );
   $ar[5] += 1900; $ar[4]++;
   $iTztime = gmmktime ( $ar[2], $ar[1], $ar[0],
       $ar[4], $ar[3], $ar[5], $ar[8] );
   return ( $iTztime - $iTime );
// --------------end of functions ---------------------------------------
<?php
# Settings-language.php is an optional file to specify the languages available.
# it is included by Settings.php.  You should not need to modify this file .. just replace
# with a new copy from the distribution as updates are made available.
# Version 1.00 - 17-Nov-2011 - initial release w/ lang=he included
if (isset($_REQUEST['sce']) && strtolower($_REQUEST['sce']) == 'view' ) {
   //--self downloader --
   $filenameReal = __FILE__;
   $download_size = filesize($filenameReal);
   header('Pragma: public');
   header('Cache-Control: private');
   header('Cache-Control: no-cache, must-revalidate');
   header("Content-type: text/plain");
   header("Accept-Ranges: bytes");
   header("Content-Length: $download_size");
   header('Connection: close');
   readfile($filenameReal);
   exit;
$tpath = pathinfo(__FILE__);
$SITE['languagesSpecification'] = $tpath['basename'];
# Multilanguage support constants - please do NOT change the settings below
#DO NOT CHANGE THESE SETTINGS
$SITE['installedLanguages'] = array (
  'af' => 'Afrikaans',
  'bg' => '&#1073;&#1098;&#1083;&#1075;&#1072;&#1088;&#1089;&#1082;&#1080; &#1077;&#1079;&#1080;&#1082;',
  'ct' => 'Catal&agrave;',
  'dk' => 'Dansk',
  'nl' => 'Nederlands',
  'en' => 'English',
  'fi' => 'Suomi',
  'fr' => 'Fran&ccedil;ais',
  'de' => 'Deutsch',
  'el' => '&Epsilon;&lambda;&lambda;&eta;&nu;&iota;&kappa;&#940;',
  'ga' => 'Gaeilge',
  'hu' => 'Magyar',
  'it' => 'Italiano',
  'he' => '&#1506;&#1460;&#1489;&#1456;&#1512;&#1460;&#1497;&#1514;',
  'no' => 'Norsk',
  'pl' => 'Polski',
  'pt' => 'Portugu&ecirc;s',
  'ro' => 'limba rom&#00226;n&#00259;',
  'es' => 'Espa&ntilde;ol',
  'se' => 'Svenska',
  'si' => 'Sloven&#353;&#269;ina',
# DO NOT CHANGE THESE SETTINGS
$SITE['ISOLang'] = array ( // ISO 639-1 2-character language abbreviations from country domain 
  'af' => 'af',
  'bg' => 'bg',
  'ct' => 'ca',
  'dk' => 'da',
  'nl' => 'nl',
  'en' => 'en',
  'fi' => 'fi',
  'fr' => 'fr',
  'de' => 'de',
  'el' => 'el',
  'ga' => 'ga',
  'it' => 'it',
  'he' => 'he',
  'hu' => 'hu',
  'no' => 'no',
  'pl' => 'pl',
  'pt' => 'pt',
  'ro' => 'ro',
  'es' => 'es',
  'se' => 'sv',
  'si' => 'sl',
$SITE['RTL-LANG'] = ',he,jp,cn,';  // languages that use right-to-left order
$SITE['CSS-RTL'] = 'RTL.css';      // default right-to-left override CSS
# DO NOT CHANGE THESE SETTINGS
$SITE['langCharset'] = array( // for languages that DON'T use ISO-8859-1 (latin) set
 'bg' => 'ISO-8859-5',
 'el' => 'ISO-8859-7',
 'he' => 'UTF-8', 
 'hu' => 'ISO-8859-2',
 'ro' => 'ISO-8859-2',
 'pl' => 'ISO-8859-2',
 'si' => 'ISO-8859-2',
 'ru' => 'UTF-8',
 'gr' => 'UTF-8'
# DO NOT CHANGE THESE SETTINGS
$SITE['WULanguages'] = array ( // for WeatherUnderground forecast supported languages
  'af' => 'afrikaans',
  'bg' => 'bulgarian',
  'ct' => 'catalan',
  'dk' => 'danish',
  'nl' => 'dutch',
  'en' => 'english',
  'fi' => 'finnish',
  'fr' => 'french',
  'de' => 'deutsch',
  'el' => 'greek',
  'ga' => 'gaelic',
  'he' => 'hebrew',
  'hu' => 'hungarian',
  'it' => 'italian',
  'no' => 'norwegian',
  'pl' => 'polish',
  'pt' => 'portuguese',
  'ro' => 'romanian',
  'es' => 'espanol',
  'se' => 'swedish',
  'si' => 'slovenian',
# End - multilanguage support constants
# Now prune the installedLanguages based on langavail selection
$tarray = array(); 
foreach ($SITE['langavail'] as $n => $k) {
  if(isset($SITE['installedLanguages'][$k])) {
    $tarray[$k] = $SITE['installedLanguages'][$k];
$SITE['installedLanguages'] = $tarray;
# end prune the installedLanguages based on langavail selection
?><?php
############################################################################
# A Project of TNET Services, Inc. and Saratoga-Weather.org (World-ML template set)
############################################################################
#	Project:	Sample Included Website Design
#	Module:		Settings.php
#	Purpose:	Provides the Site Settings Used Throughout the Site
# 	Authors:	Kevin W. Reed <kreed@tnet.com>
#				TNET Services, Inc.
#               Ken True <webmaster@saratoga-weather.org>
#               Saratoga-Weather.org
# 	Copyright:	(c) 1992-2007 Copyright TNET Services, Inc.
############################################################################
# This program is free software; you can redistribute it and/or
# modify it under the terms of the GNU General Public License
# as published by the Free Software Foundation; either version 2
# of the License, or (at your option) any later version.
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
# You should have received a copy of the GNU General Public License
# along with this program; if not, write to the Free Software
# Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA
############################################################################
#	This document uses Tab 4 Settings
############################################################################
// Version 1.01 - 01-Oct-2011 - added support for animated conditions/forecast icons
// Version 1.02 - 22-Jul-2012 - enabled Catalan language support in $SITE['langavail']
$SITE 			= array();
############################################################################
# Sitewide configuration - website style and features
############################################################################
$SITE['CSSscreen']		= 'weather-screen-blue-narrow.css'; // Default screen 800px design
//   Note: $SITE['CSSscreen'] will be overridden if the Theme Switch (below) is enabled.
//   To lock your site to use only one CSS as specified in $SITE['CSSscreen'], just
//   turn off the Theme Switcher.
$SITE['CSSprint']		= 'weather-print-php.css';
#$SITE['CSSscreen']		= 'weather-screen.css'; // Classic design
#$SITE['CSSprint']		= 'weather-print.css';
# Mike Challis' Theme Switch configuration
$SITE['allowThemeSwitch']   = false;  // set to false to disable the use of Theme Switcher 
$SITE['CSSscreenDefault'] = 'weather-screen-blue.css'; // leave -narrow or -wide off this .. just change color here
$SITE['CSSwideOrNarrowDefault'] = 'wide'; // 'narrow' or 'wide'
# CSSsettings_mode
# sets allowable user style select options:
# 1 user can select style and screen width (show style select and screen width select)
# 2 user can select styles only (hide screen width select)
# 3 user can select screen width only (hide style select)
$SITE['CSSsettings_mode'] = 3;  // set to 1, 2 or 3
$SITE['flyoutmenu'] = true; // set to false to use the menu list inside menubar.php instead
$SITE['charset']		= 'ISO-8859-1'; // default character set for webpages (iso-8859-1=latin)
# Multilanguage support 
$SITE['lang'] = 'it';                // default language for website to use
$SITE['allowLanguageSelect'] = true; // set to false to disable the use of language selector
$SITE['useLanguageFlags'] = true;    // true=show flags, false=show language 2-char abbreviations
$SITE['languageSelectDropdown'] = true; // true=show dropdown list for languages, false=show linear flags list
$SITE['languageSelectButton'] = true;  // true=show 'Set' button for language select, false=use onchange to submit
$SITE['langavail'] = array('it',     // select languages to offer here.  Use comments to remove languages
// array('en', should be first entry on line above
//  'af',  // afrikaans
//  'bg',  // bulgarian
//  'ct', // 'catalan',
//  'dk', // 'danish',
//  'nl', // 'dutch',
  'en', // 'english',
//  'fi', // 'finnish',
  'fr', // 'french',
//  'ga', // 'irish',
  'de', // 'german',
  'el', // 'greek',
//  'he', // 'hebrew',
//  'hu', // 'hungarian',
  'it', // 'italian',
//  'no', // 'norwegian',
//  'pl', // 'polish',
//  'pt', // 'portuguese',
//  'ro', // 'romanian',
//  'es', // 'spanish',
//  'se', // 'swedish',
// if your software uploads almanac dates using a language OTHER THAN English, please put the month
// names in your language to replace the English ones below.  This is used primarily by the
// wxastronomy.php page for the local dates of moon phases, solistices, and equinoxes
$SITE['monthNames'] = array(  // for wxastronomy page .. replace with month names in your language 
'January','February','March','April','May','June',
'July','August','September','October','November','December'
// example:
//$SITE['monthNames'] = array(  // Danish for wxastronomy page .. replace with month names in your language
//'januar','februar','marts','april','maj','juni',
//'juli','august','september','oktober','november','december'
//);
############################################################################
# Sitewide configuration - Station location, identity and date/time info
############################################################################
$SITE['organ']			= 'Meteo Xerocambos';
$SITE['copyr']			= '&copy; ' . gmdate("Y",time()) . ', www.xerocamboscreta.com by Andrea Maria Marini';
$SITE['location']       = 'Xerokampos | Lassithi | Creta Est | Grecia';
$SITE['email']			= 'mailto:andrea18@otenet.gr';
# Station location: latitude, longitude, cityname
//* modificato MASSI
//	lat e long gi
 inserite da Andrea
//	passa i dati anche a "wxuvforecast.php"
//	si vede dal collegamento che crea con il sito originale "http://www.temis.nl/uvradiation/nrt/uvindex.php"
//	nella pagina UV Index Forecast
$SITE['latitude']		= '35.043122';	//North=positive, South=negative decimal degrees
$SITE['longitude']		= '26.227628';	//East=positive, West=negative decimal degrees
$SITE['cityname']		= 'Xerokampos';
$SITE['tz'] 			= 'Europe/Athens'; //NOTE: this *MUST* be set correctly to
// translate UTC times to your LOCAL time for the displays.
//  http://us.php.net/manual/en/timezones.php  has the list of timezone names
//  pick the one that is closest to your location and put in $SITE['tz'] like:
//    $SITE['tz'] = 'America/Los_Angeles';  // or
//    $SITE['tz'] = 'Europe/Brussels';
// note: date format used for PHP parts only.  Weather software dates are not processed
// except on the astronomy page
// $SITE['timeFormat'] = 'D, d-M-Y g:ia T';  // Day, 31-Mar-2006 6:35pm Tz  (USA Style)
// $SITE['timeFormat'] = 'm/d/Y g:ia';      // USA  format 03/31/2006 14:03
$SITE['timeFormat'] = 'd/m/Y H:i';       // Euro format 31/03/2006 14:03
// $SITE['timeFormat'] = 'Y-m-d H:i';       // ISO  format 2006-03-31 14:03
// $SITE['timeOnlyFormat'] = 'g:ia';          // USA format h:mm[am|pm\
$SITE['timeOnlyFormat'] = 'H:i';          // Euro format hh:mm  (hh=00..23);
$SITE['dateOnlyFormat'] = 'd/m/Y';        // for 31-Mar-2008 or 'j/n/Y' for Euro format
############################################################################
# Sitewide configuration - support scripts configuration
############################################################################
###########################################################################
# These values should reflect the units-of-measure your weather station
# uses to report the weather data when processing weather tags.
# Note: if you change them here, make sure to make the corresponding
#   changes in the ajax[WXname]wx.js AJAX script also.
###########################################################################
// world Settings 
$SITE['WDdateMDY'] = false; // for weather software date format of month/day/year.  =false for day/month/year
$SITE['uomTemp'] = '&deg;C';  // ='&deg;C', ='&deg;F'
$SITE['uomBaro'] = ' hPa';    // =' hPa', =' mb', =' inHg'
$SITE['uomWind'] = ' km/h';   // =' km/h', =' kts', =' m/s', =' mph'
$SITE['uomRain'] = ' mm';     // =' mm', =' in'
$SITE['uomSnow'] = ' cm';     // =' cm', =' in'
$SITE['uomDistance'] = ' km';  // or ' miles' -- used for Wind Run display
$SITE['uomPerHour'] = '/hr';
$SITE['imagesDir'] = './ajax-images/';  // directory for ajax-images with trailing slash
$SITE['cacheFileDir']   =  './cache/';   // directory to use for scripts cache files .. use './' for doc.root.dir
//$SITE['UVscript']		= 'get-UV-forecast-inc.php'; // worldwide forecast script for UV Index
//	comment out above line to exclude UV forecast from dashboard, gizmo and wxuvforecast.php page
// if you have WXSIM installed set $SITE['WXSIM'] = true; otherwise set it to false
$SITE['WXSIM']			= false;  // Set to false if you have not installed WXSIM
$SITE['WXSIMscript'] 	= 'plaintext-parser.php'; // script for decoding plaintext.txt into icons
$SITE['defaultlang']	= 'it';   // 'en' for English (WXSIM plaintext-parser.php)
//  fcsturlWU  is used by WeatherUnderground script (WU-forecast.php)
// find the correct URL by going to www.wunderground.com, search for your location and copy the resulting
// URL from your browser location bar into the $SITE['fcsturlWU']  value.
$SITE['fcsturlWU'] 		= ''; // Link Wunderground, PR
$SITE['fcsticonsdir'] = './forecast/images/'; // NOAA-style icons for NWS, WU, WXSIM forecast scripts
$SITE['fcsticonstype']= '.jpg'; // default type='.jpg' -- use '.gif' for animated icons from http://www.meteotreviglio.com/
// optional multi-city forecasts for WeatherUnderground with WU-forecast V1.26+ ML
// Note: make sure the first entry is the same as your $SITE['fcsturlWU'] contents listed above.
$SITE['WUforecasts'] = array(
 // Location|forecast-URL  (separated by | characters
'Auckland|http://www.wunderground.com/global/stations/93119.html', // Awhitu, Waiuku New Zealand
'Amsterdam|http://www.wunderground.com/cgi-bin/findweather/getForecast?query=Amsterdam%2C+Netherlands',
'Paris|http://www.wunderground.com/cgi-bin/findweather/getForecast?query=Paris%2C+France',
'Stockholm|http://www.wunderground.com/cgi-bin/findweather/getForecast?query=Stockholm%2C+Sweden',
'Oslo|http://www.wunderground.com/cgi-bin/findweather/getForecast?query=Oslo%2C+Norway',
'Moscow|http://www.wunderground.com/cgi-bin/findweather/getForecast?query=Moscow%2C+Russia',
'Athens|http://www.wunderground.com/cgi-bin/findweather/getForecast?query=Athens%2C+Greece',
'Tel Aviv|http://www.wunderground.com/cgi-bin/findweather/getForecast?query=Tel+Aviv%2C+Israel',
'Madrid|http://www.wunderground.com/cgi-bin/findweather/getForecast?query=Madrid%2C+Spain',
'Helsinki|http://www.wunderground.com/cgi-bin/findweather/getForecast?query=Helsinki%2C+Finland',
//*/
// in the following section, enable settings for ONE primary forecast organization
// pick which script AND org are to be used for your forecast here: (last uncommented pair will
// be the ones used on the wxforecast.php page and in your dashboard and sidebar
//$SITE['fcstscript']	= 'WU-forecast.php';    // Non-USA, Non-Canada Wunderground Forecast Script
//$SITE['fcstorg']		= 'WU';    // set to 'WU' for WeatherUnderground
// Uncomment the two lines below to use WXSIM as the ONLY forecast script to use
// $SITE['fcstscript']	= 'plaintext-parser.php';    // WXSIM forecast (if only forecast script)
// $SITE['fcstorg']		= 'WXSIM';    // set to 'WXSIM' for WXSIM forecast
// For Europe only, use the meteoalarm.eu site for your area's watches/warnings on the wxadvisory page
$SITE['EUwarningURL']	= 'http://www.meteoalarm.eu/it_IT/0/0/IT009-Toscana.html';
// EUwarningURL is used by get-meteoalarm-warning-inc.php for EU countries
##########################################################################
# end of configurable settings
##########################################################################
if(file_exists("Settings-language.php")) { include_once("Settings-language.php"); }
  else { //  use defaults built-in 
# Multilanguage support constants - please do NOT change the settings below
# DO NOT CHANGE THESE SETTINGS
$SITE['installedLanguages'] = array (
  'af' => 'Afrikaans',
  'bg' => '&#1073;&#1098;&#1083;&#1075;&#1072;&#1088;&#1089;&#1082;&#1080; &#1077;&#1079;&#1080;&#1082;',
  'ct' => 'Catal&agrave;',
  'dk' => 'Dansk',
  'nl' => 'Nederlands',
  'en' => 'English',
  'fi' => 'Suomi',
  'fr' => 'Fran&ccedil;ais',
  'de' => 'Deutsch',
  'el' => '&Epsilon;&lambda;&lambda;&eta;&nu;&iota;&kappa;&#940;',
  'ga' => 'Gaeilge',
  'hu' => 'Magyar',
  'it' => 'Italiano',
  'no' => 'Norsk',
  'pl' => 'Polski',
  'pt' => 'Portugu&ecirc;s',
  'ro' => 'limba rom&#00226;n&#00259;',
  'es' => 'Espa&ntilde;ol',
  'se' => 'Svenska',
# DO NOT CHANGE THESE SETTINGS
$SITE['ISOLang'] = array ( // ISO 639-1 2-character language abbreviations from country domain 
  'af' => 'af',
  'bg' => 'bg',
  'ct' => 'ca',
  'dk' => 'da',
  'nl' => 'nl',
  'en' => 'en',
  'fi' => 'fi',
  'fr' => 'fr',
  'de' => 'de',
  'el' => 'el',
  'ga' => 'ga',
  'it' => 'it',
  'hu' => 'hu',
  'no' => 'no',
  'pl' => 'pl',
  'pt' => 'pt',
  'ro' => 'ro',
  'es' => 'es',
  'se' => 'sv',
# DO NOT CHANGE THESE SETTINGS
$SITE['langCharset'] = array( // for languages that DON'T use ISO-8859-1 (latin) set
 'bg' => 'ISO-8859-5',
 'el' => 'ISO-8859-7',
 'hu' => 'ISO-8859-2',
 'ro' => 'ISO-8859-2',
 'pl' => 'ISO-8859-2',
 'ru' => 'UTF-8',
 'gr' => 'UTF-8'
# DO NOT CHANGE THESE SETTINGS
$SITE['WULanguages'] = array ( // for WeatherUnderground forecast supported languages
  'af' => 'afrikaans',
  'bg' => 'bulgarian',
  'ct' => 'catalan',
  'dk' => 'danish',
  'nl' => 'dutch',
  'en' => 'english',
  'fi' => 'finnish',
  'fr' => 'french',
  'de' => 'deutsch',
  'el' => 'greek',
  'ga' => 'gaelic',
  'hu' => 'hungarian',
  'it' => 'italian',
  'no' => 'norwegian',
  'pl' => 'polish',
  'pt' => 'portuguese',
  'ro' => 'romanian',
  'es' => 'espanol',
  'se' => 'swedish',
# End - multilanguage support constants
# Now prune the installedLanguages based on langavail selection
$tarray = array(); 
foreach ($SITE['langavail'] as $n => $k) {
  if(isset($SITE['installedLanguages'][$k])) {
    $tarray[$k] = $SITE['installedLanguages'][$k];
$SITE['installedLanguages'] = $tarray;
# end prune the installedLanguages based on langavail selection
  } // end use default language specs
# set the Timezone abbreviation automatically based on $SITE['tzname'];
# Set timezone in PHP5/PHP4 manner
  if (!function_exists('date_default_timezone_set')) {
	 putenv("TZ=" . $SITE['tz']);
//	 print "<!-- using putenv(\"TZ=". $SITE['tz']. "\") -->\n";
    } else {
	 date_default_timezone_set($SITE['tz']);
//	 print "<!-- using date_default_timezone_set(\"". $SITE['tz']. "\") -->\n";
   }
$SITE['tzname']	= date("T",time());
if($SITE['allowThemeSwitch']) {
  # begin Color Theme Switcher Plugin by Mike Challis
  # http://www.642weather.com/weather/scripts.php
  include_once('include-style-switcher.php');
  $SITE['CSSscreen'] = validate_style_choice();
  # end Color Theme Switcher Plugin
} else {
  session_start(); // for preservation of language settings.
  if ($SITE['CSSwideOrNarrowDefault'] == 'wide') {
          $_SESSION['CSSwidescreen'] = 1;
          $CSSstyle = str_replace ('.css','-wide.css',$SITE['CSSscreenDefault']);
  } else {
          $_SESSION['CSSwidescreen'] = 0;
          $CSSstyle = str_replace ('.css','-narrow.css',$SITE['CSSscreenDefault']);
  $SITE['CSSscreen'] = $CSSstyle;
# Automatic Info we might need
############################################################################
if(isset($_SERVER['REMOTE_ADDR']))   {$SITE['REMOTE_ADDR']	= $_SERVER['REMOTE_ADDR'];}
if(isset($_SERVER['REMOTE_HOST']))   {$SITE['REMOTE_HOST']	= $_SERVER['REMOTE_HOST'];}
if(isset($_SERVER['DOCUMENT_ROOT'])) {$SITE['WEBROOT']		= $_SERVER['DOCUMENT_ROOT'];}
if(isset($_SERVER['REQUEST_URI']))   {$SITE['REQURI']		= $_SERVER['REQUEST_URI'];}
if(isset($_SERVER['SERVER_NAME']))   {$SITE['SERVERNAME']	= $_SERVER['SERVER_NAME'];}
$SITE['remote']			= "onclick=\"window.open(this.href,'_blank');return false;\"";
$SITE['PHPversion'] = phpversion();
// default settings needed for various pages when the weather software plugin is not installed.
// do not change these
$SITE['WXsoftwareURL'] = '#';
$SITE['WXsoftwareLongName'] = '(unspecified)';
$SITE['WXtags'] = '';
# now fetch the weather software settings if it exists
if(isset($_REQUEST['wx']) and file_exists('Settings-weather-'.strtoupper($_REQUEST['wx']).'.php')) {
	include_once('Settings-weather-'.strtoupper($_REQUEST['wx']).'.php');
} elseif(file_exists("Settings-weather.php")) { 
    include_once("Settings-weather.php"); 
<?php
############################################################################
# A Project of TNET Services, Inc. and Saratoga-Weather.org (World-ML template set)
############################################################################
#	Project:	Sample Included Website Design
#	Module:		Settings-weather.php
#	Purpose:	Provides the Site Settings Used Throughout the Site
# 	Authors:	Kevin W. Reed <kreed@tnet.com>
#				TNET Services, Inc.
#               Ken True <webmaster@saratoga-weather.org>
#               Saratoga-Weather.org
# 	Copyright:	(c) 1992-2007 Copyright TNET Services, Inc.
############################################################################
# This program is free software; you can redistribute it and/or
# modify it under the terms of the GNU General Public License
# as published by the Free Software Foundation; either version 2
# of the License, or (at your option) any later version.
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
# You should have received a copy of the GNU General Public License
# along with this program; if not, write to the Free Software
# Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA
############################################################################
#	This document uses Tab 4 Settings
############################################################################
// Version 1.01 - 28-Sep-2011 - added $SITE['yesterdayData'] to settings
// Version 1.02 - 31-Mar-2012 - added $SITE['overrideRain'] to settings
// Version 1.03 - 08-Mar-2013 - adapted for Meteobridge
global $SITE;
#---------------------------------------------------------------------------
#  required settings for Meteobridge software
#---------------------------------------------------------------------------
$SITE['WXtags']        = './MBtags.php';  // for weather variables
$SITE['ajaxScript']    = 'ajaxMBwx.js'; // for AJAX enabled display
// relative directory and name of Meteobridge MBrealtime.txt file uploaded via HTTP Push
// to conds.php script on your weather website
$SITE['realtimefile'] = './MBrealtime.txt';
$SITE['conditionsMETAR'] = 'LIPX';  // set to nearby METAR for current conditions icon/text
//  comment out conditionsMETAR if no nearby METAR.. conditions icon/text will not be displayed
$SITE['overrideRain']   = true; // =true then rain rate will set rain words instead of METAR rain words
#                               // =false - no change to METAR rain words (station rain rate not used)
$SITE['DavisVP']  = false;  // set to false if not a Davis VP weather station
$SITE['UV']       = false;  // set to false if no UV sensor
$SITE['SOLAR']    = false;  // set to false if no Solar sensor
##########################################################################
# end of configurable settings
// default settings needed for various pages when the weather software plugin is not installed.
// do not change these
$SITE['WXsoftware']     = 'MB';  // 'WD' for Weather-Display, 'CU' for Virtual Weather Station,
                                 // 'CU' for Cumulus, 'CU' for Cumulus, 'WXS' for WXSolution
                                 // 'MH' for Meteohub
$SITE['WXsoftwareURL'] = 'http://www.meteobridge.com/wiki/index.php/Main_Page';
$SITE['WXsoftwareLongName'] = 'Meteobridge';
$SITE['ajaxDashboard'] = './ajax-dashboard.php';
$SITE['trendsPage']     = 'MB-trends-inc.php'; // CU-specific trends page
?><?php
// converted tagslist.txt to .\tagslist.php for php tags
// by gen-PHP-tagslist.pl - Version 1.00 - 07-Apr-2006
// Author: Ken True - webmaster-weather.org
// Edited: 20-Apr-2006 to trim unused tags
// Version 1.01 - 25-Jan-2008 -- added Windy-rain to icon list
// Version 1.02 - 24-Jun-2008 -- added variables to replace old trends-inc.html with trends-inc.php
// --------------------------------------------------------------------------
// allow viewing of generated source
if ( isset($_REQUEST['sce']) && strtolower($_REQUEST['sce']) == 'view' ) {
//--self downloader --
   $filenameReal = __FILE__;
   $download_size = filesize($filenameReal);
   header('Pragma: public');
   header('Cache-Control: private');
   header('Cache-Control: no-cache, must-revalidate');
   header("Content-type: text/plain");
   header("Accept-Ranges: bytes");
   header("Content-Length: $download_size");
   header('Connection: close');
   readfile($filenameReal);
   exit;
// General OR Non Weather Specific/SUN/MOON
// ========================================
$time = "6:45 PM";	// current time
$date = "06/27/08";	// current date
$sunrise = "5:50am";	// sun rise time (make sure you have the correct lat/lon
// 		            in view/sun moon)
$time_minute = "45";	// Current minute
$time_hour = "18";	// Current hour
$date_day = "27";	// Current day
$date_month = "06";	// Current month
$date_year = "2008";	// Current year
$monthname = "June";	// Current month name
$dayname = "Friday";	// Current day name
$sunset = "8:32pm";	// sunset time
$moonrise = "1:38am";	// moon rise time
$moonset = "3:53pm";	// moon set time
$moonage = "Moon age: 23 days,19 hours,22 minutes,33%";	// current age of the moon (days since new moon)
$moonphase = "33%";	// Moon phase %
$moonphasename = 'Waning Crescent Moon'; // 10.36z addition
$marchequinox = "05:49 UTC 20 March 2008";	// March equinox date
$junesolstice = "00:00 UTC 21 June 2008";	// June solstice date
$sepequinox = "15:45 UTC 22 September 2008";	// September equinox date
$decsolstice = "12:04 UTC 21 December 2008";	// December solstice date
$moonperihel = "08:14 UTC 3 January 2009";	// Next Moon perihel date
$moonaphel = "17:08 UTC 4 July 2008";	// Next moon perihel date
$moonperigee = "21:21 UTC 1 July 2008";	// Next moon perigee date
$moonapogee = "04:14 UTC 14 July 2008";	// Next moon apogee date
$newmoon = "19:23 UTC 3 June 2008";	// Date/time of the next/last new moon
$nextnewmoon = "02:19 UTC 3 July 2008";	// Date/time of the next new moon for next month
$firstquarter = "15:04 UTC 10 June 2008";	// Date/time of the next/last first quarter moon
$lastquarter = "12:10 UTC 26 June 2008";	// Date/time of the next/last last quarter moon
$fullmoon = "17:31 UTC 18 June 2008";	// Date/time of the next/last full moon
$fullmoondate = " 18 June 2008";	// Date of the next/last full moon (date only)
$suneclipse = "10:22 UTC 1 August 2008 Eclipse Total";	// Next sun eclipse
$mooneclipse = "14:39 UTC 9 February 2009 Eclipse Half shadow";	// Next moon eclipse date
$easterdate = "23 March 2008";	// Next easter date
$chinesenewyear = "7 February 2008 ()";	// Chinese new year
$hoursofpossibledaylight = "14:42:00 ";	// Total hours/minutes of possible daylight for today
$weatherreport = "clear
 -  haze";	// current weather conditions from selected METAR
$stationaltitude = "375";	// Station altitude, feet, as set in the units setup
// this under setup)
$stationlatitude = "037:16:28";	// Latitude (from the sun moon rise/set setup)
$stationlongitude = "0122:01:23";	// Longtitude (from the sun moon rise/set setup)
$windowsuptime = '6 Days 6 Hours 59 Minutes 59 Seconds'; // uptime for windows on weather pc
$freememory = ' 221.220 MB'; // amount of free memory on the pc
$Startimedate = '11:46:42 AM 6/21/2008'; // Time/date WD was started
$NOAAEvent = 'NO CURRENT ADVISORIES'; // NOAA Watch/Warning/Advisory
$noaawarningraw = '
There are no active watches, warnings or advisories'; // NOAA RAW watch/warning/advisory
// ADVISORIES)
// ADVISORIES)
$wdversion = '10.37k' . '-(b' . '10' . ')';	// Weather Display version number you are running
$wdversiononly = '10.37k';
$wdbuild   = '10';       // Weather Display build number you are running
// ---....What it says - for the weather warning....
$monthname = "June";	// Current month name
// this under setup)
$noaacityname = "Saratoga";	// City name,from the noaa setup (in the av/ext setup)
// level...enter this under setup)
$timeofnextupdate = "6:50 PM";	// Time of next Update/Upload of the weather data to your web page (based on the web table update 
// time)
// must be first selected),,,,repeat up to day 8
$heatcolourword = "Comfortable";	// How hot/cold it feels at the moment, based on the humidex, used with the conditionscolour.jpg 
// image (which is updated with the gizmo.gif)
// i.e use this code:
// <img alt="WapSeer Control" src="graphtemp45.wbmp" vspace="0" hspace="0" align="middle"/>
// <img alt="WapSeer Control" src="graphwind45.wbmp" vspace="0" hspace="0" align="middle"/>
// Averages/Extreme
// ================
// month and then the year numbers 
// e.g    for the average temperature for 8am (use a 24 hour clock) (hour preceding that, for the 
// month of March 2003)
// month and then the year numbers 
// (total for the current month)
// current month as total)  (from your entered averages)
// Temperature/Humidity
// ====================
// Current:
// --------
$temperature = "74.9
F";	// temperature
$tempnodp = '75'; // temperature, no decimal place
$humidity = "57";	// humidity
$dewpt = "58.6
F";	// dew point
$maxtemp = "85.3
F";	// today's maximum temperature
$maxtempt = "1:17 PM";	// time this occurred
$mintemp = "56.2
F";	// today's minimum temperature
$mintempt = "5:46 AM";	// time this occurred
// VP soil temperature)
$feelslike = "77";	// Shows heat index or humidex or windchill (if less than 16oC)
$heati = "77.4
F";	// current heat index
$heatinodp = "77";	// current heat index,no decimal place
$windch = "74.9
F";	// current wind-chill
$windchnodp = "75
F";	// current wind-chill, no decimal place
$humidexfaren = "81.8
F";	// Humidex value in oF
$humidexcelsius = "27.7
C";	// Humidex value in oC
$apparenttemp = "76.8";	// Apparent temperature
$apparentsolartemp = "83.4";	// Apparent temperature in the sun (you need a solar sensor)
$apparenttempc = "24.9";	// Apparent temperature, 
$apparentsolartempc = "28.6";	// Apparent temperature in the sun, 
C (you need a solar sensor)
$apparenttempf = "76.8";	// Apparent temperature, 
$apparentsolartempf = "83.4";	// Apparent temperature in the sun, 
F (you need a solar sensor)
// Yesterday:
// ----------
$tempchangehour = "-1.0 
F/last hr";	// Temperature change in the last hour
$maxtempyest = "83.4 
F";	// Yesterday's max temperature
$maxtempyestt = "2:47 PM";	// Time of yesterday's max temperature
$mintempyest = "49.5 
F";	// Yesterday's min temperature
$mintempyestt = "5:59 AM";	// Time of yesterday's min temperature
// Trends:
// -------
$temp24hoursago = "78.2";	// The temperature 24 hours ago
$humchangelasthour = "+ 2";	// Humidity change last hour
$dewchangelasthour = "+0.1";	// Dew point change last hour
$barochangelasthour = "-0.001";	// Baro change last hour
// Wind
// ====
// Current:
// --------
$avgspd = "1.9 mph";	// average wind speed (current)
$gstspd = "0.0 mph";	// current/gust wind speed
$maxgst = "13.0 mph";	// today's maximum wind speed
$maxgstt = "4:18 PM";	// time this occurred
$maxgsthr = "6.0 mph  NE";	// maximum gust last hour
$dirdeg = "25 
";	// wind direction (degrees)
$dirlabel = "NNE";	// wind direction (NNE etc)
//$maxgustlastimediatehourtime = "5:46PM";	// 5:46PM  time that the max gust last prior 1 hour occured
$avwindlastimediate10 = "1.1 mph";	// Average wind for the last immediate 10 minute period
// $avdir10minute = "26
";	// average ten minute wind direction (degrees)
$beaufortnum ='0'; //Beaufort wind force number
$currbftspeed = '0 bft'; //Current Beaufort wind speed
$bftspeedtext = 'Light Air'; //Beaufort scale in text (i.e Fresh Breeze)
// Yesterday:
// ----------
// Baromometer
// ===========
// Current:
// --------
$baro = '29.866 .in';  // current barometer
$baroinusa2dp = "29.87 inches";	// Current barometer reading in inches, 2 decimal places only.
$trend = "-0.001 in./hr";	// amount of change in the last hour
$pressuretrendname = "Steady";	// pressure trend (i.e. "falling"), last hour
$pressuretrendname3hour = "Steady";	// pressure trend (i.e. "falling"), last 3 hours
$vpforecasttext = 'increasing clouds with little temp. change.';	// Forecast text from the Davis VP
// Yesterday:
// ----------
// Rain
// ====
// Current:
// --------
$dayrn = "0.00 in.";	// today's rain
$monthrn = "0.00 in.";	// rain so far this month
$yearrn = "21.49 in.";	// rain so far this year
$dayswithnorain = "65";	// Consecutative days with no rain
$dayswithrain = "0";	// Days with rain for the month
$dayswithrainyear = "37";	// Days with rain for the year
$currentrainratehr = "0.00";	// Current rain rate, mm/hr (or in./hr)
$maxrainrate = "0.000";	// Max rain rate,for the day, mm/min (or in./min)
$maxrainratehr = "0.000";	// Max rain rate,for the day, mm/hr (or in.mm)
$maxrainratetime = "00:00 AM";	// Time that occurred
// Yesterday:
// ----------
$yesterdayrain = "0.00 in.";	// Yesterday rain
$vpstormrainstart = '0/0/0';  //Davis VP Storm rain start date
$vpstormrain = '0.00 .in';           //Davis VP Storm rain value
// Over the last Week
// ------------------
// Sunshine/Solar/ET
// =================
$VPsolar = "195";	//  Solar energy number (W/M2)
$VPuv = "0.5";	// UV number 
$highsolar = "832";	// Daily high solar (for Davis VP and Grow stations)
$highuv = "6.8";	// Daily high UV (for Davis VP stations)
$currentsolarpercent = "66 %";	// Current solar percent for stations with a temperature solar sensor (like the dallas 1 wire)
$highsolartime = "12:56 PM";	// Time that the daily high solar occured
$lowsolartime = "12:00 AM";	// Time that the daily low solar occured
$highuvtime = "1:57 PM";	// Time that the daily high UV occured
$lowuvtime = "12:00 AM";	// Time that the daily low UV occured
$highuvyest = "6.2";	// Yesterday's high UV
$highuvyesttime = "12:06 PM";	// Time of yesterday's high UV
$burntime = "224";	// Time (minutes) to burn (normal skin) at the current UV rate, from the Davis VP with UV sensor
// the solar setup.
// Number of resynchronizations, The largest number of packets in a row that were received., and the number of CRC errors 
// detected. 
// Record Readings
// ===============
// for current month to date:
$mrecordwindgust = "18.1";	// All time record high wind gust
$mrecordhighgustday = "4";	// Day of record high wind gust
// Current weather warning/forecast from input daily weather
// ---------------------------------------------------------
// GPS
// ---
// Snow
// =====
$snowseasonin = '0';	// Snow for season you have entered under input daily weather, inches
$snowmonthin = '0';	// Snow for month you have entered under input daily weather, inches
$snowtodayin = '0';	// Snow for today you have entered under input daily weather, inches
$snowseasoncm = '0';	// Snow for season you have entered under input daily weather, cm
$snowmonthcm = '0';	// Snow for month you have entered under input daily weather, cm
$snowtodaycm = '0';	// Snow for today you have entered under input daily weather, cm
$snowyesterday = '0';	// Yesterdays' snow
$snowheight = '416';	// Estimated height snow will fall at
$snowheightnew = '10361';	// Estimated height snow will fall at, new formula
$snownowin = '0';	// Current snow depth, inches.
$snownowcm = '0';	// Current snow depth, cm.
$snowrain = '0.00';	// rain measure by a heated rain gauge when temp below freezing times 10 to give estimated snow fall
// tags needed for trends-inc.php
$temp0minuteago = '75.1';  // ****this one is needed for all the others to work
$wind0minuteago = '2.3';
$gust0minuteago = '3.5';
$dir0minuteago = ' N ';
$hum0minuteago = '57';
$dew0minuteago = '58.8';
$baro0minuteago = '29.866';
$rain0minuteago = '0.00';
$VPsolar0minuteago = '197.0';
$VPuv0minuteago = '0.5';
$temp5minuteago = '75.2';  
$wind5minuteago = '1.2';
$gust5minuteago = '2.3';
$dir5minuteago = ' NE';
$hum5minuteago = '57';
$dew5minuteago = '58.9';
$baro5minuteago = '29.863';
$rain5minuteago = '0.00';
$VPsolar5minuteago = '211.0';
$VPuv5minuteago = '0.6';
$temp10minuteago = '75.4';  
$wind10minuteago = '1.2';
$gust10minuteago = '1.2';
$dir10minuteago = 'NNW';
$hum10minuteago = '56';
$dew10minuteago = '58.6';
$baro10minuteago = '29.862';
$rain10minuteago = '0.00';
$VPsolar10minuteago = '222.0';
$VPuv10minuteago = '0.6';
$temp15minuteago = '75.4';  
$wind15minuteago = '1.2';
$gust15minuteago = '3.5';
$dir15minuteago = 'NNW';
$hum15minuteago = '57';
$dew15minuteago = '59.1';
$baro15minuteago = '29.862';
$rain15minuteago = '0.00';
$VPsolar15minuteago = '238.0';
$VPuv15minuteago = '0.7';
$temp20minuteago = '75.5';  
$wind20minuteago = '1.2';
$gust20minuteago = '3.5';
$dir20minuteago = 'NNW';
$hum20minuteago = '56';
$dew20minuteago = '58.7';
$baro20minuteago = '29.860';
$rain20minuteago = '0.00';
$VPsolar20minuteago = '252.0';
$VPuv20minuteago = '0.8';
$temp30minuteago = '75.6';  
$wind30minuteago = '1.2';
$gust30minuteago = '2.3';
$dir30minuteago = 'NNW';
$hum30minuteago = '56';
$dew30minuteago = '58.8';
$baro30minuteago = '29.863';
$rain30minuteago = '0.00';
$VPsolar30minuteago = '282.0';
$VPuv30minuteago = '0.9';
$temp45minuteago = '75.6';  
$wind45minuteago = '1.2';
$gust45minuteago = '3.5';
$dir45minuteago = ' NW';
$hum45minuteago = '56';
$dew45minuteago = '58.8';
$baro45minuteago = '29.865';
$rain45minuteago = '0.00';
$VPsolar45minuteago = '327.0';
$VPuv45minuteago = '1.2';
$temp60minuteago = '76.1';  
$wind60minuteago = '1.2';
$gust60minuteago = '5.8';
$dir60minuteago = 'NNW';
$hum60minuteago = '55';
$dew60minuteago = '58.8';
$baro60minuteago = '29.867';
$rain60minuteago = '0.00';
$VPsolar60minuteago = '370.0';
$VPuv60minuteago = '1.4';
$temp75minuteago = '77.2';  
$wind75minuteago = '3.5';
$gust75minuteago = '5.8';
$dir75minuteago = 'NNW';
$hum75minuteago = '53';
$dew75minuteago = '58.7';
$baro75minuteago = '29.863';
$rain75minuteago = '0.00';
$VPsolar75minuteago = '408.0';
$VPuv75minuteago = '1.7';
$temp90minuteago = '78.0';  
$wind90minuteago = '3.5';
$gust90minuteago = '8.1';
$dir90minuteago = ' N ';
$hum90minuteago = '52';
$dew90minuteago = '59.0';
$baro90minuteago = '29.862';
$rain90minuteago = '0.00';
$VPsolar90minuteago = '452.0';
$VPuv90minuteago = '2.0';
$temp105minuteago = '79.2';  
$wind105minuteago = '3.5';
$gust105minuteago = '6.9';
$dir105minuteago = ' N ';
$hum105minuteago = '50';
$dew105minuteago = '59.0';
$baro105minuteago = '29.857';
$rain105minuteago = '0.00';
$VPsolar105minuteago = '500.0';
$VPuv105minuteago = '2.4';
$temp120minuteago = '80.1';  
$wind120minuteago = '5.8';
$gust120minuteago = '8.1';
$dir120minuteago = 'NNW';
$hum120minuteago = '48';
$dew120minuteago = '58.6';
$baro120minuteago = '29.855';
$rain120minuteago = '0.00';
$VPsolar120minuteago = '540.0';
$VPuv120minuteago = '2.8';
$VPet = '0.18';
$VPetmonth = '5.59';
$dateoflastrainalways = '4/3/2008';
$dayrnusa = '0.00 in.';
$highbaro = '29.880 in.';
$highbarot = '9:22 AM';
$highsolaryest = '834.0';
$highsolaryesttime = '12:55 PM';
$hourrn = '0.00';
$maxaverageyest = '6.9 mph   N';
$maxaverageyestt = '2:56 PM';
$maxavgdirectionletter = 'N';
$maxavgspd = '9.3 mph';
$maxavgspdt = '4:18 PM';
$maxbaroyest = '29.974 in.';
$maxbaroyestt = '12:00 AM';
$maxgstdirectionletter = 'NW';
$maxgustyest = '12.0 mph  NW';
$maxgustyestt = '2:55 PM';
$mcoldestdayonrecord = '64.0&deg;F  on: Jun 02 2008';
$mcoldestnightonrecord = '51.4&deg;F  on: Jun 02 2008';
$minchillyest = '49.5 
$minchillyestt = '5:59 AM';
$minwindch = '56.2 
$minwindcht = '5:46 AM';
$mrecordhighavwindday = '4';
$mrecordhighavwindmonth = '6';
$mrecordhighavwindyear = '2008';
$mrecordhighbaro = '30.088';
$mrecordhighbaroday = '1';
$mrecordhighbaromonth = '6';
$mrecordhighbaroyear = '2008';
$mrecordhighgustmonth = '6';
$mrecordhighgustyear = '2008';
$mrecordhightemp = '104.9';
$mrecordhightempday = '20';
$mrecordhightempmonth = '6';
$mrecordhightempyear = '2008';
$mrecordlowchill = '44.2';
$mrecordlowchillday = '2';
$mrecordlowchillmonth = '6';
$mrecordlowchillyear = '2008';
$mrecordlowtemp = '44.2';
$mrecordlowtempday = '2';
$mrecordlowtempmonth = '6';
$mrecordlowtempyear = '2008';
$mrecordwindspeed = '11.8';
$mwarmestdayonrecord = '91.9&deg;F  on: Jun 20 2008';
$mwarmestnightonrecord = '77.9&deg;F  on: Jun 21 2008';
$raincurrentweek = '0.000';
$raintodatemonthago = '0.00';
$raintodateyearago = '4.99';
$timeoflastrainalways = ' 6:22 AM';
$windruntodatethismonth = '787.35 miles';
$windruntodatethisyear = '5084.90 miles';
$windruntoday = '21.6';
$yesterdaydaviset = '0.177';
$yrecordhighavwindday = '27';
$yrecordhighavwindmonth = '1';
$yrecordhighavwindyear = '2008';
$yrecordhighbaro = '30.407';
$yrecordhighbaroday = '6';
$yrecordhighbaromonth = '2';
$yrecordhighbaroyear = '2008';
$yrecordhighgustday = '4';
$yrecordhighgustmonth = '1';
$yrecordhighgustyear = '2008';
$yrecordhightemp = '104.9';
$yrecordhightempday = '20';
$yrecordhightempmonth = '6';
$yrecordhightempyear = '2008';
$yrecordlowchill = '31.6';
$yrecordlowchillday = '1';
$yrecordlowchillmonth = '1';
$yrecordlowchillyear = '2008';
$yrecordlowtemp = '31.6';
$yrecordlowtempday = '1';
$yrecordlowtempmonth = '1';
$yrecordlowtempyear = '2008';
$yrecordwindgust = '38.0';
$yrecordwindspeed = '20.9';
$daysTmaxGT30C = '11';
$daysTmaxGT25C = '20';
$daysTminLT0C = '0';
$daysTminLTm15C = '0';
// end of trends-inc.php variables
//  
   // CURRENT CONDITIONS ICONS FOR clientraw.txt
   // create array for icons. There are 35 possible values in clientraw.txt
   // It would be simpler to do this with array() but to make it easier to 
   // modify each element is defined individually. Each index [#] corresponds
   // to the value provided in clientraw.txt
   $icon_array[0] = "day_clear.gif";            // imagesunny.visible
   $icon_array[1] = "night_clear.gif";          // imageclearnight.visible
   $icon_array[2] = "day_partly_cloudy.gif";    // imagecloudy.visible
   $icon_array[3] = "day_partly_cloudy.gif";    // imagecloudy2.visible
   $icon_array[4] = "night_partly_cloudy.gif";  // imagecloudynight.visible
   $icon_array[5] = "day_partly_cloudy.gif";            // imagedry.visible
   $icon_array[6] = "fog.gif";                  // imagefog.visible
   $icon_array[7] = "haze.gif";                 // imagehaze.visible
   $icon_array[8] = "day_heavy_rain.gif";       // imageheavyrain.visible
   $icon_array[9] = "day_mostly_sunny.gif";     // imagemainlyfine.visible
   $icon_array[10] = "mist.gif";                // imagemist.visible
   $icon_array[11] = "fog.gif";                 // imagenightfog.visible
   $icon_array[12] = "night_heavy_rain.gif";    // imagenightheavyrain.visible
   $icon_array[13] = "night_cloudy.gif";        // imagenightovercast.visible
   $icon_array[14] = "night_rain.gif";          // imagenightrain.visible
   $icon_array[15] = "night_light_rain.gif";    // imagenightshowers.visible
   $icon_array[16] = "night_snow.gif";          // imagenightsnow.visible
   $icon_array[17] = "night_tstorm.gif";        // imagenightthunder.visible
   $icon_array[18] = "day_cloudy.gif";          // imageovercast.visible
   $icon_array[19] = "day_partly_cloudy.gif";   // imagepartlycloudy.visible
   $icon_array[20] = "day_rain.gif";            // imagerain.visible
   $icon_array[21] = "day_rain.gif";            // imagerain2.visible
   $icon_array[22] = "day_light_rain.gif";      // imageshowers2.visible
   $icon_array[23] = "sleet.gif";               // imagesleet.visible
   $icon_array[24] = "sleet.gif";               // imagesleetshowers.visible
   $icon_array[25] = "snow.gif";                // imagesnow.visible
   $icon_array[26] = "snow.gif";                // imagesnowmelt.visible
   $icon_array[27] = "snow.gif";                // imagesnowshowers2.visible
   $icon_array[28] = "day_clear.gif.gif";       // imagesunny.visible
   $icon_array[29] = "day_tstorm.gif";          // imagethundershowers.visible
   $icon_array[30] = "day_tstorm.gif";          // imagethundershowers2.visible
   $icon_array[31] = "day_tstorm.gif";          // imagethunderstorms.visible
   $icon_array[32] = "tornado.gif";             // imagetornado.visible
   $icon_array[33] = "windy.gif";               // imagewindy.visible
   $icon_array[34] = "day_partly_cloudy.gif";   // stopped raining
   $icon_array[35] = "windyrain.gif";           // Wind+rain
   $iconnumber = '5';                // icon number
   $current_icon = $icon_array[5]; // name of our condition icon
// ----------------------------------------------------------------------------------
//   $current_summary = 'Dry' . "<br />" . 'Mostly Sunny/Dry ';
   $weathercond = 'Dry';
   $Currentsolardescription = 'Mostly Sunny/Dry ';
   $current_summary = $Currentsolardescription;
   $current_summary = preg_replace('|^/[^/]+/|','',$current_summary);
   $current_summary = preg_replace('|\\\\|',", ",$current_summary);
   $current_summary = preg_replace('|/|',", ",$current_summary);
//  
//  
//  
$cloudheightfeet = "3722";	// Estimated cloud base height, feet, (based on dew point, and you height above sea  level...enter
$cloudheightmeters = "1135";	// Estimated cloud base height, metres, (based on dew point, and you height above sea
// end of generation script
// baroinmetric '1011.4'
// baro '29.866 .in'
<?php
if (isset($_REQUEST['sce']) && strtolower($_REQUEST['sce']) == 'view' ) {
   //--self downloader --
   $filenameReal = __FILE__;
   $download_size = filesize($filenameReal);
   header('Pragma: public');
   header('Cache-Control: private');
   header('Cache-Control: no-cache, must-revalidate');
   header("Content-type: text/plain");
   header("Accept-Ranges: bytes");
   header("Content-Length: $download_size");
   header('Connection: close');
   readfile($filenameReal);
   exit;
// Thermometer image script
// Ken True - webmaster@Saratoga-weather.org
// error_reporting(E_ALL); // uncomment to run testing
// Version 1.00 - 17-Sep-2007 - Initial release
// Version 1.01 - 18-Nov-2007 - added GD test, autoscale function, updated for sce=view on IIS systems
// Version 1.02 - 23-Nov-2007 - fixed Notice: errata on min/max calculations
// Version 1.03 - 28-Feb-2008 - added support for Carterlake/AJAX/PHP template integration
// Version 1.04 - 02-Feb-2009 - added support for 'dark' template (white text instead of black)
// Version 1.05 - 21-Oct-2009 - added support for Cumulus realtime.txt
// Version 1.06 - 12-Jan-2011 - added support for new universal templates.
// Version 1.07 - 02-Apr-2011 - fixed WLrealtime offsets for WeatherLink
// Version 1.08 - 29-Jul-2011 - added support for Meteohub clientraw.txt
// Version 1.09 - 14-Jan-2012 - added support for WeatherSnoop via WSNtags/WSN-defs
// Version 1.10 - 24-Mar-2012 - added support for WeatherCat via WCTtags/WCT-defs or WCT_realtime.txt
// Version 1.11 - 03-Jul-2012 - added support for WxSolution, wview and Cumulus via CUtags.php if no realtime file
// Version 1.12 - 08-Mar-2013 - added support for Meteobridge via MBtags.php
// Version 1.13 - 20-Jul-2014 - updated for WeatherSnoop V3 via WSNtags/WSN-defs
// Version 1.14 - 26-Jul-2014 - corrected Notice: error in script after WeatherSnoop addition
// script available at http://saratoga-weather.org/scripts.php
//  
// you may copy/modify/use this script as you see fit,
// no warranty is expressed or implied.
// This script reads WD clientraw.txt , VWS wflash.txt/wflash2.txt, or Cumulus realtime.txt 
// gets the current, high, low temperature and draws a
// thermometer image (filled area + scale) on a transparent-background thermometer graphic 
// PNG.
//  usage on your page:
//  <img src="thermometer.php" height="170" width="54" alt="current temperature, daily low/high" />
// New with version 1.01 - $autoScale = true; enables autoranging on output scale.  The program will
// add majortick values to maximum or substract majortick values from minimum to always show the
// scale, current, minimum, maximum on the graphic.
//------------ settings ------------------
$wxSoftware         = 'WD';                           // 'WD' for Weather-Display, 'VWS' for Virtual Weather Station,
                                                      // 'CU' for Cumulus, 'WL' for WeatherLink, 'WXS' for WXSolution
$UOM = 'F';                                           // set to 'C' for Celsius/Centigrade, 'F'=Fahrenheit
$autoScale = true;                                    // set to false to disable autoscale.
// you only have to set one of these correctly based on the $useWD selection
// $wxSoftware = 'WD' : set the $clientrawfile
// $wxSoftware = 'VWS': set the $wflashDir
// $wxSoftware = 'CU': set the $realtimefile
$clientrawfile = './clientraw.txt';                // relative file address for WD clientraw.txt
$wflashDir     = './wflash/Data/';                 // directory for the the VWS wflash.txt and wflash2.txt files
//                                                 // relative to directory location of this script (include
//                                                 // trailing '/' in the specification
$realtimefile  = './realtime.txt';                 // relative file location for Cumulus realtime.txt file
//$WLrealtime    = './WLrealtime.txt';               // relative file location of WeatherLink WLrealtime.txt file
// settings for ranges -- adjust for your climate :-)
// Fahrenheit settings
$TmaxF = 105;     // maximum 
F temperature on thermometer
$TminF = 25;      // minimum 
F temperature on thermometer
$TincrF = 5;      // increment number of degrees 
F for major/minor ticks on thermometer
$TMajTickF = 10;  // major tick with value when 
F scale number divisible by this
// Centigrade settings
$TmaxC = 40;      // maximum 
C temperature on thermometer
$TminC = -10;     // minimum 
C temperature on thermometer
$TincrC = 2;      // increment number of degrees 
C for major/minor ticks on thermometer
$TMajTickC = 10;  // major tick with value when 
C scale number divisible by this
//* modificato MASSI
// >>$invertColor = true;<<messo "true" invece che false
// per invertire il colore dei font del termometro
$invertColor = true; // set to true if thermometer display is over black background
$BlankGraphic  = './thermometer-blank.png'; // relative file address for thermometer blank image PNG
$BlankGraphicBlack = './thermometer-blank-black.png'; // for black background use
//------------ end settings --------------
// overrides from Settings.php if available
if(file_exists("Settings.php")) { include_once("Settings.php"); }
global $SITE;
if (isset($SITE['uomTemp'])) 	{
  $UOM = preg_replace('|\s*&deg;\s*|is','',$SITE['uomTemp']);
  if ($UOM <> 'F' and $UOM <> 'C') { $UOM = 'F'; }
if (isset($SITE['clientrawfile']) ) {$clientrawfile = $SITE['clientrawfile']; }
if (isset($SITE['wflashdir']) ) {$wflashDir = $SITE['wflashdir']; }
if (isset($SITE['realtimefile']) ) {$realtimefile = $SITE['realtimefile']; }
if (isset($SITE['WLrealtime']) ) {$WLrealtime = $SITE['WLrealtime']; }
if (isset($SITE['WCTrealtime']) ) {$WCTrealtime = $SITE['WCTrealtime']; }
if (isset($SITE['WXSrealtime']) ) {$WXSrealtime = $SITE['WXSrealtime']; }
if (isset($SITE['WVrealtime']) ) {$WVrealtime = $SITE['WVrealtime']; }
if (isset($SITE['WXsoftware']) ) {$wxSoftware = $SITE['WXsoftware']; }
$CSSstyle = '';
# was there a style selected from the form input
if (isset($_COOKIE['CSSstyle'])) {
       $_SESSION['CSSstyle'] = $_COOKIE['CSSstyle'];
       $CSSstyle = $_COOKIE['CSSstyle'];
  } else if (isset($_SESSION['CSSstyle']) and $_SESSION['CSSstyle'] <> '' ) {
       $CSSstyle = $_SESSION['CSSstyle'];
if (preg_match('|black|i',$CSSstyle) ) {
	$invertColor = true; 
// end of overrides from Settings.php
// -------------------begin code ------------------------------------------
if( ! function_exists("gd_info")){
  die("Sorry.. this script requires the GD library in PHP to function.");
if (isset($_REQUEST['wx']) and strtolower($_REQUEST['wx']) == 'wd') { $wxSoftware = 'WD'; } // testing
if (isset($_REQUEST['wx']) and strtolower($_REQUEST['wx']) == 'vws') { $wxSoftware = 'VWS'; } // testing
if (isset($_REQUEST['wx']) and strtolower($_REQUEST['wx']) == 'cu') { $wxSoftware = 'CU'; } // testing
if (isset($_REQUEST['wx']) and strtolower($_REQUEST['wx']) == 'wl') { $wxSoftware = 'WL'; } // testing
if (isset($_REQUEST['wx']) and strtolower($_REQUEST['wx']) == 'mh') { $wxSoftware = 'MH'; } // testing
if (isset($_REQUEST['wx']) and strtolower($_REQUEST['wx']) == 'wsn') { $wxSoftware = 'WSN'; } // testing
if (isset($_REQUEST['wx']) and strtolower($_REQUEST['wx']) == 'wct') { $wxSoftware = 'WCT'; } // testing
if (isset($_REQUEST['wx']) and strtolower($_REQUEST['wx']) == 'wxs') { $wxSoftware = 'WXS'; } // testing
if (isset($_REQUEST['wx']) and strtolower($_REQUEST['wx']) == 'wv')  { $wxSoftware = 'WV';  } // testing
if (isset($_REQUEST['wx']) and strtolower($_REQUEST['wx']) == 'mb')  { $wxSoftware = 'MB';  } // testing
if (isset($_REQUEST['uom']) and strtolower($_REQUEST['uom']) == 'c') { $UOM = 'C'; }
if (isset($_REQUEST['uom']) and strtolower($_REQUEST['uom']) == 'f') { $UOM = 'F'; }
if (isset($_REQUEST['dark'])) {$invertColor = strtolower($_REQUEST['dark'])=='y'; }
if ($wxSoftware == 'WD' or $wxSoftware == 'MH') { // Get the Weather-Display/Meteohub clientraw.txt data file
      $dataraw = file_get_contents($clientrawfile);
      // clean up any blank lines
      $dataraw = trim($dataraw);
      $dataraw = preg_replace("/[\r\n]+[\s\t]*[\r\n]+/","\n",$dataraw);
      $data = explode(" ", $dataraw);
	  $curtemp = CtoF($data[4],1);
	  $mintemp = CtoF($data[47],1);
	  $maxtemp = CtoF($data[46],1);
} // end Weather Display data
if ($wxSoftware == 'VWS') { // Get the VWS Weather Flash data files
      $filename = "${wflashDir}wflash.txt";
      $file = file($filename);
      $file = implode('',$file);
      $data = explode(",",$file);;
	  $curtemp = FtoC($data[9],1);
      $filename = "${wflashDir}wflash2.txt";
      $file = file($filename);
      $file = implode('',$file);
      $data = explode(",",$file);;
	  $mintemp = FtoC($data[92],1);
	  $maxtemp = FtoC($data[36],1);
if ($wxSoftware == 'CU') { // Get the Cumulus realtime.txt file
      if(!isset($SITE['realtimefile']) and 
	      isset($SITE['WXtags']) and file_exists($SITE['WXtags']) ) { // get from CUtags.php
	     global $WX;
		 include_once($SITE['WXtags']);
	     $inUOM = 'F';
		 $curtemp = 70;
		 $mintemp = 60;
		 $maxtemp = 80;
		 if(isset($WX['temp']))   {$curtemp = preg_replace('|,|','.',$WX['temp']); }
		 if(isset($WX['tempTL'])) {$mintemp = preg_replace('|,|','.',$WX['tempTL']); }
		 if(isset($WX['tempTH'])) {$maxtemp = preg_replace('|,|','.',$WX['tempTH']); }
		 if(isset($WX['tempunit']) and preg_match("|C|i",$WX['tempunit'])) {
		    $inUOM = 'C';
		 } else {
			$inUOM = 'F';
		 }
		if ($inUOM == 'F' and $UOM == 'C') {
		  $curtemp = FtoC($curtemp,1);
		  $mintemp = FtoC($mintemp,1);
		  $maxtemp = FtoC($maxtemp,1);
		} elseif ($inUOM == 'C' and $UOM == 'F') {
		  $curtemp = CtoF($curtemp,1);
		  $mintemp = CtoF($mintemp,1);
		  $maxtemp = CtoF($maxtemp,1);
	  } else { // get from realtime file
      $dataraw = file_get_contents($realtimefile);
      // clean up any blank lines
      $dataraw = trim($dataraw);
      $dataraw = preg_replace("/[\r\n]+[\s\t]*[\r\n]+/","\n",$dataraw);
      $data = explode(" ", $dataraw);
	  $inUOM = $data[14];
      if ($inUOM == 'F' and $UOM == 'C') {
		$curtemp = FtoC($data[2],1);
		$mintemp = FtoC($data[28],1);
		$maxtemp = FtoC($data[26],1);
	  } elseif ($inUOM == 'C' and $UOM == 'F') {
		$curtemp = CtoF($data[2],1);
		$mintemp = CtoF($data[28],1);
		$maxtemp = CtoF($data[26],1);
	  } else {
		$curtemp = $data[2];
		$mintemp = $data[28];
		$maxtemp = $data[26];
		$UOM = $inUOM;
	  }
    } // end use realtime
if ($wxSoftware == 'MB') { // Process Meteobridge
  if(!isset($MBrealtime)) { // get from MBtags.php
	   if (file_exists($SITE['WXtags'])) {
		   global $WX;
		   include_once($SITE['WXtags']);
	   }
	   $inUOM = 'F';
	   $curtemp = 70;
	   $mintemp = 60;
	   $maxtemp = 80;
	   
	   if(preg_match("|C|i",$WX['uomTemp'])) {
		  $inUOM = 'C';
	   } else {
		  $inUOM = 'F';
	   }
	  if ($inUOM == 'F' and $UOM == 'C') {
		$curtemp = FtoC($WX['th0temp-act'],1);
		$mintemp = FtoC($WX['th0temp-dmin'],1);
		$maxtemp = FtoC($WX['th0temp-dmax'],1);
	  } elseif ($inUOM == 'C' and $UOM == 'F') {
		$curtemp = CtoF($WX['th0temp-act'],1);
		$mintemp = CtoF($WX['th0temp-dmin'],1);
		$maxtemp = CtoF($WX['th0temp-dmax'],1);
	  } elseif (isset($WX['th0temp-act'])) {
		$curtemp = $WX['th0temp-act'];
		$mintemp = $WX['th0temp-dmin'];
		$maxtemp = $WX['th0temp-dmax'];
		$UOM = $inUOM;
	  }
  } else { // get from MB_realtime.txt
	 $dataraw = file_get_contents($MBrealtime);
	 // clean up any blank lines
	 $dataraw = trim($dataraw);
	 $dataraw = preg_replace("/[\r\n]+/",'',$dataraw);
	 $data = explode("|", $dataraw);
	 if(preg_match("/C/i",$data[14])) {
		 $inUOM = 'C';
	 } else {
		 $inUOM = 'F';
	 if ($inUOM == 'F' and $UOM == 'C') {
			$curtemp = FtoC($data[2],1);
			$mintemp = FtoC($data[28],1);
			$maxtemp = FtoC($data[26],1);
	 } elseif ($inUOM == 'C' and $UOM == 'F') {
			$curtemp = CtoF($data[2],1);
			$mintemp = CtoF($data[28],1);
			$maxtemp = CtoF($data[26],1);
	 } else {
			$curtemp = $data[2];
			$mintemp = $data[28];
			$maxtemp = $data[26];
			$UOM = $inUOM;
  } // end get from MB_realtime.txt
} // end Meteobridge processing
if ($wxSoftware == 'WL') { // Process WeatherLink
      if(!isset($WLrealtime)) { // get from WLtags.php
	     if (file_exists($SITE['WXtags'])) {global $WX; include_once($SITE['WXtags']); }
	     $inUOM = 'F';
		 $curtemp = 70;
		 $mintemp = 60;
		 $maxtemp = 80;
		 if(preg_match("|C|i",$WX['tempUnit'])) {
		    $inUOM = 'C';
		 } else {
			$inUOM = 'F';
		 }
		if ($inUOM == 'F' and $UOM == 'C') {
		  $curtemp = FtoC($WX['outsideTemp'],1);
		  $mintemp = FtoC($WX['lowOutsideTemp'],1);
		  $maxtemp = FtoC($WX['hiOutsideTemp'],1);
		} elseif ($inUOM == 'C' and $UOM == 'F') {
		  $curtemp = CtoF($WX['outsideTemp'],1);
		  $mintemp = CtoF($WX['lowOutsideTemp'],1);
		  $maxtemp = CtoF($WX['hiOutsideTemp'],1);
		} elseif (isset($WX['outsideTemp'])) {
		  $curtemp = $WX['outsideTemp'];
		  $mintemp = $WX['lowOutsideTemp'];
		  $maxtemp = $WX['hiOutsideTemp'];
		  $UOM = $inUOM;
	} else { // fetch it from the $WLrealtime
	 $dataraw = file_get_contents($WLrealtime);
	 // clean up any blank lines
	 $dataraw = trim($dataraw);
	 $dataraw = preg_replace("/[\r\n]+/",'',$dataraw);
	 $data = explode("|", $dataraw);
	 if(preg_match("/C/i",$data[14])) {
		 $inUOM = 'C';
	 } else {
		 $inUOM = 'F';
	 if ($inUOM == 'F' and $UOM == 'C') {
			$curtemp = FtoC($data[2],1);
			$mintemp = FtoC($data[28],1);
			$maxtemp = FtoC($data[26],1);
	 } elseif ($inUOM == 'C' and $UOM == 'F') {
			$curtemp = CtoF($data[2],1);
			$mintemp = CtoF($data[28],1);
			$maxtemp = CtoF($data[26],1);
	 } else {
			$curtemp = $data[2];
			$mintemp = $data[28];
			$maxtemp = $data[26];
			$UOM = $inUOM;
	   
	} // end fetch it from $WLrealtime
} // end WeatherLink handling
if ($wxSoftware == 'WCT') { // Process WeatherCat
  if(!isset($WCTrealtime)) { // get from WCTtags.php
	   if (file_exists($SITE['WXtags'])) {
		   global $WX;
		   include_once($SITE['WXtags']);
	   }
	   $inUOM = 'F';
	   $curtemp = 70;
	   $mintemp = 60;
	   $maxtemp = 80;
	   
	   if(preg_match("|C|i",$WX['TEMPUNITS'])) {
		  $inUOM = 'C';
	   } else {
		  $inUOM = 'F';
	   }
	  if ($inUOM == 'F' and $UOM == 'C') {
		$curtemp = FtoC($WX['STAT:TEMPERATURE:CURRENT'],1);
		$mintemp = FtoC($WX['STAT:TEMPERATURE:MIN:TODAY'],1);
		$maxtemp = FtoC($WX['STAT:TEMPERATURE:MAX:TODAY'],1);
	  } elseif ($inUOM == 'C' and $UOM == 'F') {
		$curtemp = CtoF($WX['STAT:TEMPERATURE:CURRENT'],1);
		$mintemp = CtoF($WX['STAT:TEMPERATURE:MIN:TODAY'],1);
		$maxtemp = CtoF($WX['STAT:TEMPERATURE:MAX:TODAY'],1);
	  } elseif (isset($WX['STAT:TEMPERATURE:CURRENT'])) {
		$curtemp = $WX['STAT:TEMPERATURE:CURRENT'];
		$mintemp = $WX['STAT:TEMPERATURE:MIN:TODAY'];
		$maxtemp = $WX['STAT:TEMPERATURE:MAX:TODAY'];
		$UOM = $inUOM;
	  }
  } else { // get from WCT_realtime.txt
	 $dataraw = file_get_contents($WCTrealtime);
	 // clean up any blank lines
	 $dataraw = trim($dataraw);
	 $dataraw = preg_replace("/[\r\n]+/",'',$dataraw);
	 $data = explode("|", $dataraw);
	 if(preg_match("/C/i",$data[14])) {
		 $inUOM = 'C';
	 } else {
		 $inUOM = 'F';
	 if ($inUOM == 'F' and $UOM == 'C') {
			$curtemp = FtoC($data[2],1);
			$mintemp = FtoC($data[28],1);
			$maxtemp = FtoC($data[26],1);
	 } elseif ($inUOM == 'C' and $UOM == 'F') {
			$curtemp = CtoF($data[2],1);
			$mintemp = CtoF($data[28],1);
			$maxtemp = CtoF($data[26],1);
	 } else {
			$curtemp = $data[2];
			$mintemp = $data[28];
			$maxtemp = $data[26];
			$UOM = $inUOM;
  } // end get from WCT_realtime.txt
} // end WeatherCat processing
if ($wxSoftware == 'WXS') { // Process WXSolution
  if(!isset($WXSrealtime)) { // get from WXStags.php
	   if (file_exists($SITE['WXtags'])) {
		   global $WX;
		   include_once($SITE['WXtags']);
	   }
	   $inUOM = 'F';
	   $curtemp = 70;
	   $mintemp = 60;
	   $maxtemp = 80;
	   
	   if(preg_match("|C|i",$WX['UT'])) {
		  $inUOM = 'C';
	   } else {
		  $inUOM = 'F';
	   }
	  if ($inUOM == 'F' and $UOM == 'C') {
		$curtemp = FtoC($WX['TC'],1);
		$mintemp = FtoC($WX['DAY_TL'],1);
		$maxtemp = FtoC($WX['DAY_TH'],1);
	  } elseif ($inUOM == 'C' and $UOM == 'F') {
		$curtemp = CtoF($WX['TC'],1);
		$mintemp = CtoF($WX['DAY_TL'],1);
		$maxtemp = CtoF($WX['DAY_TH'],1);
	  } elseif (isset($WX['TC'])) {
		$curtemp = $WX['TC'];
		$mintemp = $WX['DAY_TL'];
		$maxtemp = $WX['DAY_TH'];
		$UOM = $inUOM;
	  }
  } else { // get from WXS_realtime.txt
	 $dataraw = file_get_contents($WCTrealtime);
	 // clean up any blank lines
	 $dataraw = trim($dataraw);
	 $dataraw = preg_replace("/[\r\n]+/",'',$dataraw);
	 $data = explode("|", $dataraw);
	 if(preg_match("/C/i",$data[14])) {
		 $inUOM = 'C';
	 } else {
		 $inUOM = 'F';
	 if ($inUOM == 'F' and $UOM == 'C') {
			$curtemp = FtoC($data[2],1);
			$mintemp = FtoC($data[28],1);
			$maxtemp = FtoC($data[26],1);
	 } elseif ($inUOM == 'C' and $UOM == 'F') {
			$curtemp = CtoF($data[2],1);
			$mintemp = CtoF($data[28],1);
			$maxtemp = CtoF($data[26],1);
	 } else {
			$curtemp = $data[2];
			$mintemp = $data[28];
			$maxtemp = $data[26];
			$UOM = $inUOM;
  } // end get from WXS_realtime.txt
} // end WXSolution processing
if ($wxSoftware == 'WV') { // Process wview
  if(!isset($WVrealtime)) { // get from WVtags.php
	   if (file_exists($SITE['WXtags'])) {
		   global $WX;
		   include_once($SITE['WXtags']);
	   }
	   $inUOM = 'F';
	   $curtemp = 70;
	   $mintemp = 60;
	   $maxtemp = 80;
	   
	   if(preg_match("|C|i",$WX['tempUnit'])) {
		  $inUOM = 'C';
	   } else {
		  $inUOM = 'F';
	   }
	  if ($inUOM == 'F' and $UOM == 'C') {
		$curtemp = FtoC($WX['outsideTemp'],1);
		$mintemp = FtoC($WX['lowOutsideTemp'],1);
		$maxtemp = FtoC($WX['hiOutsideTemp'],1);
	  } elseif ($inUOM == 'C' and $UOM == 'F') {
		$curtemp = CtoF($WX['outsideTemp'],1);
		$mintemp = CtoF($WX['lowOutsideTemp'],1);
		$maxtemp = CtoF($WX['hiOutsideTemp'],1);
	  } elseif (isset($WX['outsideTemp'])) {
		$curtemp = $WX['outsideTemp'];
		$mintemp = $WX['lowOutsideTemp'];
		$maxtemp = $WX['hiOutsideTemp'];
		$UOM = $inUOM;
	  }
  } else { // get from WV_realtime.txt
	 $dataraw = file_get_contents($WVrealtime);
	 // clean up any blank lines
	 $dataraw = trim($dataraw);
	 $dataraw = preg_replace("/[\r\n]+/",'',$dataraw);
	 $data = explode("|", $dataraw);
	 if(preg_match("/C/i",$data[14])) {
		 $inUOM = 'C';
	 } else {
		 $inUOM = 'F';
	 if ($inUOM == 'F' and $UOM == 'C') {
			$curtemp = FtoC($data[2],1);
			$mintemp = FtoC($data[28],1);
			$maxtemp = FtoC($data[26],1);
	 } elseif ($inUOM == 'C' and $UOM == 'F') {
			$curtemp = CtoF($data[2],1);
			$mintemp = CtoF($data[28],1);
			$maxtemp = CtoF($data[26],1);
	 } else {
			$curtemp = $data[2];
			$mintemp = $data[28];
			$maxtemp = $data[26];
			$UOM = $inUOM;
  } // end get from WV_realtime.txt
} // end wview processing
if ($wxSoftware == 'WSN') { // Process WeatherSnoop (tags files only)
		 global $WX,$SITE; 
		 include_once($SITE['WXtags']);
		 $inUOM = $uomtemp; // uomtemp from site:properties:outsideTemperature:unit (WSN setup)
	     $useUOM = preg_match('|C|i',$SITE['uomTemp'])?'C':'F';
      if(isset($WX['site:properties:outdoorTemperature:values:1:value'])) {
		if ($useUOM == 'C') {
		  $curtemp = $WX['site:properties:outdoorTemperature:values:1:value'];
		  $mintemp = $WX['site:properties:outdoorTemperature:minValueToday:values:1:value'];
		  $maxtemp = $WX['site:properties:outdoorTemperature:maxValueToday:values:1:value'];
		} else {
		  $curtemp = $WX['site:properties:outdoorTemperature:values:0:value'];
		  $mintemp = $WX['site:properties:outdoorTemperature:minValueToday:values:0:value'];
		  $maxtemp = $WX['site:properties:outdoorTemperature:maxValueToday:values:0:value'];
	  } else {
		if ($useUOM == 'C') {
		  $curtemp = $WX['site:properties:temperature:values:1:value'];
		  $mintemp = $WX['site:properties:temperature:minValueToday:values:1:value'];
		  $maxtemp = $WX['site:properties:temperature:maxValueToday:values:1:value'];
		} else {
		  $curtemp = $WX['site:properties:temperature:values:0:value'];
		  $mintemp = $WX['site:properties:temperature:minValueToday:values:0:value'];
		  $maxtemp = $WX['site:properties:temperature:maxValueToday:values:0:value'];
		  
	  }
//		if($mintemp == '-') {$mintemp = $curtemp;}
//		if($maxtemp == '-') {$maxtemp = $curtemp;}
} // end WeatherSnoop processing
if (isset($_REQUEST['current'])) { $curtemp = $_REQUEST['current']; } // for testing
if (isset($_REQUEST['min'])) { $mintemp = $_REQUEST['min']; } // for testing
if (isset($_REQUEST['max'])) { $maxtemp = $_REQUEST['max']; } // for testing
if ($UOM == 'F') { // use Fahrenheit settings
    $Tmax = $TmaxF;   // maximum temperature on thermometer
    $Tmin = $TminF;    // minimum temperature on thermometer
    $Tincr = $TincrF;    // increment number of degrees for major/minor ticks on thermometer
    $TMajTick = $TMajTickF;// major tick with value when scale number divisible by this
  } else { // use Centigrade settings
    $Tmax = $TmaxC;    // maximum temperature on thermometer
    $Tmin = $TminC;   // minimum temperature on thermometer
    $Tincr = $TincrC;    // increment number of degrees for major/minor ticks on thermometer
    $TMajTick = $TMajTickC;// major tick with value when scale number divisible by this
      if($autoScale) { autoscale($curtemp,$mintemp,$maxtemp); }
      genThermometer($curtemp, $mintemp,$maxtemp); // make graphic!
return;
// ----------- functions ----------------------------------------------------------
function genThermometer( $current,$min,$max ) {
   global $UOM,$BlankGraphic,$BlankGraphicBlack,$wxSoftware,$invertColor;
   global  $Tmax,$Tmin,$Tincr,$TMajTick;
// draw a filled thermometer with scale, min max on a blank thermometer image
 $BGfile = $invertColor?$BlankGraphicBlack:$BlankGraphic;
 $image = LoadPNG($BGfile);
 // settings relative to the thermometer image file defines the drawing area
 // for the thermometer filling
 // these settings are SPECIFICALLY for the thermometer-blank.png image background
 $minX = 20; // left
 $maxX = 24; // right
 $minY = 20; // top
 $maxY = 140;// bottom
 $width = imagesx($image);
 $height = imagesy($image);
 $font = 1;
 $bg    = imagecolorallocate($image,255,255,255 );
 $tx    = imagecolorallocate($image,0,0,0);
 $blue  = imagecolorallocate($image,0,0,255);
 $red   = imagecolorallocate($image,255,0,0);
 if ($invertColor) {
   $tx    = imagecolorallocate($image,255,255,255);
   $blue  = imagecolorallocate($image,0,192,255);
   $red   = imagecolorallocate($image,255,32,32);
 $Trange = $Tmax - $Tmin; // total temperature range
 $Tpct = ($current-$Tmin)/($Trange); // percent for current temperature of range
 $Y = (1-$Tpct)*($maxY-$minY)+$minY; // upper location for fill
// fill the thermometer with a red bar from bottom to $Y 
  imagefilledrectangle( $image,
                 $minX,
                 $Y,
                 $maxX,
                 $maxY,
                 $red );
				 
// Draw tick marks and scale values on right
			 
 for ($T=$Tmin;$T<=$Tmax;$T+=$Tincr) {
     $Tpct = ($T-$Tmin)/($Trange);
     $Y = (1-$Tpct)*($maxY-$minY)+$minY;
	 if ($T == 0 or ($T % $TMajTick) == 0) { // Major Tick
	    imagefilledrectangle( $image,
            $maxX+7 ,
            $Y ,
            $maxX+12,
            $Y +1, $tx );
        imagestring($image, $font,
            $maxX + 14,
            $Y - (ImageFontHeight($font)/2),
            sprintf( "%2d", $T),$tx);
	 } else { // Minor tick
     	imagefilledrectangle( $image,
            $maxX+7,
            $Y ,
            $maxX+9,
            $Y +1, $tx );
 } // end do ticks legend
 if(isset($min) and $min <> '-') { // put on minimum temp bar/value
//     $Tpct = ($min-$Tmin)/($Trange);
     $Tpct = ( ( (float)$min-$Tmin )/ $Trange );
     $Y = (1-$Tpct)*($maxY-$minY)+$minY;
	 imagefilledrectangle( $image,
            $minX - 18,
            $Y ,
            $minX - 5,
           $Y +1, $blue );
      $tstr = sprintf('%2d',round($min,0));
	  $tsize = strlen($tstr)*imagefontwidth($font+1);
      imagestring($image, $font+1,
            $minX - $tsize - 3 ,
            $Y + 2 ,
            $tstr,$blue);
 if(isset($max) and $max <> '-') { // put on maximum temp bar/value
     $Tpct = ($max-$Tmin)/($Trange);
     $Y = (1-$Tpct)*($maxY-$minY)+$minY;
	 imagefilledrectangle( $image,
            $minX - 18,
            $Y ,
            $minX - 5,
            $Y +1, $red );
      $tstr = sprintf('%2d',round($max,0));
	  $tsize = strlen($tstr)*imagefontwidth($font+1);
      imagestring($image, $font+1,
            $minX - $tsize - 3 ,
            $Y - imagefontheight($font+1),
            $tstr,$red);
 // put legend on top with UOM
    $cnt = chr(176) . $UOM; // chr(176) = degree sign in ISO-8859-1
    imagestring( $image, $font+2, ($width/2)-((strlen($cnt)/2)*ImageFontWidth($font+2)),
       (10-(ImageFontHeight($font+2) / 2)),
       $cnt, $tx);
// write current temperature on thermometer bulb	
//    $tstr = sprintf('%2d',round($current,0));
//	$tsize = strlen($cnt)*imagefontwidth($font);
//    imagestring($image, $font,
//            ($minX+$maxX)/2 - $tsize/2 -2 ,
//            $maxY+6,
//            $tstr,$bg);
//imagestring( $image, $font, ($width/2)-((strlen($wxSoftware)/2)*imagefontwidth($font)),
//   $height-imagefontheight($font),
//	$wxSoftware,$tx);
 // send the image
 header("content-type: image/png");
 imagepng($image);
 imagedestroy($image);
} // end genThermometer
// load PNG image 
function LoadPNG ($imgname) { 
   $im = @imagecreatefrompng ($imgname); /* Attempt to open */ 
   if (!$im) { /* See if it failed */ 
       $im  = imagecreate (150, 30); /* Create a blank image */ 
       $bgc = imagecolorallocate ($im, 255, 255, 255); 
       $tc  = imagecolorallocate ($im, 0, 0, 0); 
       imagefilledrectangle ($im, 0, 0, 150, 30, $bgc); 
       /* Output an errmsg */ 
       imagestring ($im, 1, 5, 5, "Error loading $imgname", $tc); 
   } 
   return $im; 
// CtoF: converts degrees Celcius to degress Farenheight (from Anolecomputing.com)
function CtoF($value, $precision) {
  global $UOM;
  if ($UOM <> 'F') { 
    return round($value,$precision); 
  } else { 
    return round($value = (($value * 9 / 5) + 32),$precision); 
} // end function C_to_F
// FtoC: converts degress Farenheight to degrees Celcius  (from Anolecomputing.com)
function FtoC($value, $precision) {
  global $UOM;
  if ($UOM == 'F') { 
    return round($value,$precision); 
  } else { 
    return round(($value - 32) * (5/9),$precision); 
} // end function F to C
// autoscale function .. adjust scale to fit current conditions if need be.
function autoscale($curtemp,$mintemp,$maxtemp) {
   global  $Tmax,$Tmin,$Tincr,$TMajTick;
   $highest = max($curtemp,$Tmax,$maxtemp);
   $lowest = min($curtemp,$Tmin,$mintemp);
   while ($Tmax < $highest) {
     $Tmax += $TMajTick;
   }
   while ($Tmin > $lowest) {
     $Tmin = $Tmin - $TMajTick;
   }
   return;
?><?php
############################################################################
# A Project of TNET Services, Inc. and Saratoga-Weather.org (Base-* template sets)
############################################################################
#	Project:	Sample Included Website Design
#	Module:		top.php
#	Purpose:	Provides the initial top section of the website
# 	Authors:	Kevin W. Reed <kreed@tnet.com>
#				TNET Services, Inc.
#               Ken True <webmaster@saratoga-weather.org>
#               Saratoga-Weather.org
# 	Copyright:	(c) 1992-2007 Copyright TNET Services, Inc.
############################################################################
# This program is free software; you can redistribute it and/or
# modify it under the terms of the GNU General Public License
# as published by the Free Software Foundation; either version 2
# of the License, or (at your option) any later version.
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
# You should have received a copy of the GNU General Public License
# along with this program; if not, write to the Free Software
# Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA
############################################################################
#	This document uses Tab 4 Settings
############################################################################
require_once("Settings.php");
require_once("common.php");
global	$TITLE;
//Version  V3.01 - 03-Mar-2011 - added Content-Type header for charset switching
//Version  V3.02 - 23-Jul-2011 - added WXtags upload copy capability
//Version  V3.03 - 17-Nov-2011 - added support for right-to-left presentation format
//Version  V3.04 - 05-Feb-2013 - added support for HTML5+UTF8
############################################################################
if(isset($useUTF8) and function_exists('set_langtrans_UTF8') ) {
	set_langtrans_UTF8(); // convert langrans items to UTF-8
header("Content-Type: text/html; charset=".strtoupper($SITE['charset']));
if(isset($useHTML5) and $useHTML5) {
  print "<!DOCTYPE html>\n";
  print "<html";
  if (isset($SITE['ISOLang'][$SITE['lang']])) { // 
	$olang = $SITE['ISOLang'][$SITE['lang']];
	echo " lang=\"$olang\""; 
  print ">\n";
} else {
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN"
   "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<?php 
} // end HTML5 v.s. XHTML 1.0 Transitional header
<?php
 if(isset($SITE['WXtags']) and $SITE['WXtags'] <> '') {
	// see if upload copy should be done
	$siteUploadFile = preg_replace('|\.php$|','-new.php',$SITE['WXtags']);
	if(file_exists($siteUploadFile) and 
	   is_writable($SITE['WXtags']) and
	   filesize($siteUploadFile) > filesize($SITE['WXtags']) - 1023 and
	   filemtime($siteUploadFile) > filemtime($SITE['WXtags']) ) {
		 $didCopy = copy($siteUploadFile,$SITE['WXtags']);
		 if($didCopy) {
			 print "<!-- WXtags file updated successfully from $siteUploadFile -->\n";
		 } else {
			 print "<!-- WXtags file update failed from $siteUploadFile -->\n";
		 }
	if (isset($_REQUEST['debug']) and strtolower($_REQUEST['debug']) == 'y') {
	  $canWriteTags = is_writable($SITE['WXtags'])?"is":"IS NOT";
	  print "<!-- WXtags '".$SITE['WXtags']. "' $canWriteTags writeable. -->";
	include_once($SITE['WXtags']);
 $doIconvUTF8 = ($SITE['charset'] == 'UTF-8' and $SITE['origCharset'] <> 'UTF-8')?true:false;
  <head>
<?php if(isset($SITE['ajaxScript'])) { ?>
    <!-- ##### start AJAX mods ##### -->
    <script type="text/javascript" src="<?php echo $SITE['ajaxScript']; ?>"></script>
    <!-- AJAX updates by Ken True - http://saratoga-weather.org/wxtemplates/ -->
<?php } // end if ajaxScript ?>
<?php if (isset($showGizmo) and $showGizmo) { ?>
    <script type="text/javascript" src="ajaxgizmo.js"></script>
<?php if (isset($SITE['UV']) and !$SITE['UV']) {  // turn gizmo uv display off ?>
    <script type="text/javascript"> showUV = false; </script>
<?php   }  // end of turn gizmo uv display off ?>
<?php } // end of showGizmo ?>
<?php if (file_exists("language-". $SITE['lang'] . ".js") and (!$doIconvUTF8) ) { ?>
    <script type="text/javascript" src="language-<?php echo $SITE['lang']; ?>.js"></script>
	<!-- language for AJAX script included -->
<?php }
  if(isset($useUTF8) and $useUTF8 and file_exists("language-". $SITE['lang'] . ".js") and $doIconvUTF8) {
	$tjsfile = file("language-". $SITE['lang'] . ".js");
	$sceCharset = $SITE['origCharset']; // set in common.php when useUTF8 invoked
	print "    <script type=\"text/javascript\">\n// <![CDATA[ /* converted to UTF-8 from $sceCharset */\n";
	foreach ($tjsfile as $n => $line) {
		print iconv($sceCharset,'UTF-8//TRANSLIT',$line);
	print "// converted ".count($tjsfile)." lines of language-".$SITE['lang'].".js from $sceCharset to UTF-8 inline -->\n// ]]\n    </script>\n"; 
    <meta name="description" content="Personal weather station." />
    <meta http-equiv="Content-Type" content="text/html; charset=<?php echo strtoupper($SITE['charset']); ?>" />
    <link rel="stylesheet" type="text/css" href="<?php echo $SITE['CSSscreen']; ?>" media="screen" title="screen" />
    <link rel="stylesheet" type="text/css" href="<?php echo $SITE['CSSprint']; ?>" media="print" />
	<link rel="shortcut icon" href="/favicon.ico" type="image/x-icon" />
	<script type="text/javascript" src="cssrefresh.js"></script>
<?php 
if(isset($useHTML5) and $useHTML5) { // no pragma/cache-control for us
} else { ?>
	<meta http-equiv="Pragma" content="no-cache" />
    <meta http-equiv="Cache-Control" content="no-cache" />
<?php } // end HTML5 check 
if(isset($SITE['showTitleTemp']) and $SITE['showTitleTemp'] and isset($temperature)) {
  $dispTUOM = $temperature . '&deg;'.strtoupper(preg_replace('|[^CF]+|i','',$uomtemp)). ' - ';
} else {
  $dispTUOM = '';
if( isset ($TITLE) ) {
	echo "    <title>$dispTUOM" . $TITLE . "</title>\n";
} else {
	echo "    <title>$dispTUOM" . langtransstr($SITE['organ']) . "</title>\n";
if (isset($SITE['flyoutmenu']) and $SITE['flyoutmenu'] or
	isset($_REQUEST['menu']) and strtolower($_REQUEST['menu']) == 'test' ) {
  $SITE['flyoutmenu'] = true;
  $PrintFlyoutMenu = false;
  $genDiv =false;
  global $FlyoutCSS, $FlyoutMenuText;
  include_once('flyout-menu.php');
  print $FlyoutCSS;
// Right-to-left language CSS mod
if(isset($SITE['CSS-RTL']) and file_exists($SITE['CSS-RTL']) and isset($SITE['RTL-LANG']) and 
   (strpos($SITE['RTL-LANG'],$SITE['lang']) !== false) ) { // use the override CSS
   print "<!-- lang='".$SITE['lang']."' using RTL CSS Override -->\n"; 
  // print "<style type=\"text/css\">\n";
  // readfile($SITE['CSS-RTL']);
  // print "</style>\n";
  print "<link rel=\"stylesheet\" type=\"text/css\" href=\"".$SITE['CSS-RTL']."\"/>\n";
} // end Right-to-left CSS override 
<!-- World-ML template from http://saratoga-weather.org/wxtemplates/ -->
<!-- end of top -->
<?php 
// WU-forecast.php script by Ken True - webmaster@saratoga-weather.org
// Version 1.00 - 02-Sep-2007 - initial release
// Version 1.01 - 09-Sep-2007 - added selective printing and translation for 'Chance of precipitation'
// Version 1.02 - 18-Sep-2007 - fixed typo on line 533 ($PrintMode instead of $printMode)
// Version 1.03 - 31-Jan-2008 - modified to support new Wunderground page layout and icon set
// Version 1.04 - 21-Feb-2008 - modified to support minor WU website change and added support for
//                              Carterlake/AJAX/PHP template integration
// Version 1.05 - 30-Mar-2008 - added units selector C/F/both function for icon legend
// Version 1.06 - 21-Apr-2008 - added $SITE['xlateCOP'] for World-Multi-lingual support
// Version 1.07 - 22-Apr-2008 - added iconv() to convert UTF-8 to targeted character set $SITE['charset']
// Version 1.08 - 01-Oct-2008 - added support for WU display of Tropical data when it appears
// Version 1.09 - 02-Dec-2008 - fixes for WeatherUnderground website changes
// Version 1.10 - 15-Dec-2008 - fixes for F/C temperature for WU website changes
// Version 1.11 - 19-Dec-2008 - fixes for WU website changes
// Version 1.12 - 22-Dec-2008 - fix to remove '\r\n2000\r\n' from WU website returned HTML
// Version 1.13 - 26-Jan-2011 - added support for global $cacheFileDir for cache files
// Version 1.14 - 03-Feb-2011 - fixes for WeatherUnderground major website changes
// Version 1.15 - 07-Feb-2011 - more fixes for multilingual usage
// Version 1.16 - 06-Mar-2011 - added foldIconRow option to display icons in two-rows of 5
// Version 1.17 - 30-May-2011 - added fix for premature halt if missing data from WU (heat index/wind chill)
// Version 1.18 - 07-Sep-2011 - fixes for WeatherUnderground website changes
// Version 1.19 - 09-Sep-2011 - added $maxForecasts to limit text forecasts to display (7 days worth)
// Version 1.20 - 13-Sep-2011 - added new method for short-forecast from icon if forecast text too long
// Version 1.21 - 14-Sep-2011 - added fix to correct invalid WU HTML in text forecast area
// Version 1.22 - 16-Sep-2011 - fixes for WeatherUnderground website changes
// Version 1.23 - 01-Oct-2011 - added support for alternative animated icon set from http://www.meteotreviglio.com/
// Version 1.24 - 25-Oct-2011 - fixes for WeatherUnderground website changes
// Version 1.25 - 05-Nov-2011 - fixes to remove Notice: errata
// Version 1.26 - 17-Nov-2011 - add lang=he support (UTF-8) and multi-forecast capability
// Version 1.27 - 31-Dec-2011 - remove 'Weather Forecast ' from $WUforecastcity
// Version 1.28 - 03-Feb-2012 - added diagnostics if access blocked by WU website
// Version 1.29 - 16-Feb-2012 - fixes for WeatherUnderground website changes
// Version 1.30 - 01-Jun-2012 - fixes for WeatherUnderground website changes (title and temperature)
// Version 1.31 - 17-Dec-2013 - fixes issues with older preg_match not working correctly & verbose temp display(English)
// Version 1.32 - 24-Feb-2014 - fixes issues with WU website changes around temperature displays
// Version 1.33 - 25-Feb-2014 - fixes issues with temperature display
// Version 1.34 - 06-Apr-2014 - fixes PoP parsing issue with some languages.
// Version 2.00 - 14-Apr-2014 - add parsing for new format WU pages (JSON included)
// Version 2.01 - 15-Apr-2014 - add support for PHP 5 < 5.3 (missing json_last_error() function)
// Version 2.02 - 15-Apr-2014 - fixed JSON extract for PHP < 5.4 processing
// Version 2.03 - 16-Apr-2014 - fixed JSON extract after WU website tweaks
// Version 2.04 - 16-Apr-2014 - fixes JSON extract for PHP < 5.4 processing with new WU page design
// Version 2.05 - 07-Jun-2014 - fixes processing after WU website changes+remove old HTML parse code
// Version 2.06 - 13-Oct-2014 - fixed JSON extract after WU website change
// Version 2.07 - 15-Oct-2014 - fixed JSON mixed UTF-8/ISO-8859-x character issues
// Version 3.00 - 31-Oct-2014 - script rewritten to use WU API for data source
// Version 3.01 - 01-Nov-2014 - fixes for non-English default language selection
// Version 3.02 - 01-Nov-2014 - fixes for other WU Page URL types like locid:, US City, others
$Version = "WU-forecast.php (ML) Version 3.02 - 01-Nov-2014";
// error_reporting(E_ALL);  // uncomment to turn on full error reporting
// script available at http://saratoga-weather.org/scripts.php
//  
// you may copy/modify/use this script as you see fit,
// no warranty is expressed or implied.
// This script parses the WeatherUnderground forecast JSON API and loads icons/text into
//  arrays so you can use them in your weather website.  
// NOTE: You must leave an attribution link to weatherunderground.com in the output page.
// output: creates XHTML 1.0-Strict HTML page (or inclusion)
// Options on URL:
//   inc=Y            - omit <HTML><HEAD></HEAD><BODY> and </BODY></HTML> from output
//   heading=n        - (default)='y' suppress printing of heading (forecast city/by/date)
//   icons=n          - (default)='y' suppress printing of the icons+conditions+temp+wind+UV
//   text=n           - (default)='y' suppress printing of the periods/forecast text
//  You can also invoke these options directly in the PHP like this
//    $doIncludeWU = true;
//    include("WU-forecast.php");  for just the text
//  or ------------
//    $doPrintWU = false;
//    include("WU-forecast.php");  for setting up the $WUforecast... variables without printing
//  or ------------
//    $doIncludeWU = true;
//    $doPrintHeadingWU = true;
//    $doPrintIconsWU = true;
//    $doPrintTextWU = false
//    include("WU-forecast.php");  include mode, print only heading and icon set
// Variables returned (useful for printing an icon or forecast or two...)
// $WUforecastcity 		- Name of city from WU Forecast header
// The following variables exist for $i=0 to $i= number of forecast periods minus 1
//  a loop of for ($i=0;$i<count($WUforecastday);$i++) { ... } will loop over the available 
//  values.
// $WUforecastday[$i]	- period of forecast
// $WUforecasttext[$i]	- text of forecast 
// $WUforecasttemp[$i]	- Temperature with text and formatting
// $WUforecastpop[$i]	- Number - Probabability of Precipitation ('',10,20, ... ,100)
// $WUforecasticon[$i]   - base name of icon graphic to use
// $WUforecastcond[$i]   - Short legend for forecast icon 
// $WUforecasticons[$i]  - Full icon with Period, <img> and Short legend.
// Settings ---------------------------------------------------------------
//REQUIRED: a WU API KEY.. sign up at http://www.wunderground.com/weather/api/
$WUAPIkey = 'specify-for-standalone-use-here'; // use this only for standalone / non-template use
// NOTE: if using the Saratoga template, add to Settings.php a line with:
//    $SITE['WUAPIkey'] = 'your-api-key-here';
// and that will enable the script to operate correctly in your template
$iconDir ='./forecast/images/';	// directory for carterlake icons './forecast/images/'
$iconType = '.jpg';				// default type='.jpg' 
//                            		use '.gif' for animated icons from http://www.meteotreviglio.com/
//$iconDir ='';					// set to '' to use the Wunderground icons instead
$WU_URL = 'Acquaviva|http://www.wunderground.com/cgi-bin/findweather/hdfForecast?query=43.116%2C11.865&sp=ITOSCANA306';
// The optional multi-city forecast .. make sure the first entry is for the $WU_URL location
// The contents will be replaced by $SITE['WUforecasts'] if specified in your Settings.php
$WUforecasts = array(
 // Location|forecast-URL  (separated by | characters)
'Acquaviva|http://www.wunderground.com/cgi-bin/findweather/hdfForecast?query=43.116%2C11.865&sp=ITOSCANA306',
'Aarhus|http://www.wunderground.com/global/stations/06075.html',
'Auckland|http://english.wunderground.com/cgi-bin/findweather/getForecast?query=-36.910%2C174.771&sp=IAUCKLAN110', // Awhitu, Waiuku New Zealand
'Amsterdam|http://www.wunderground.com/cgi-bin/findweather/getForecast?query=Amsterdam%2C+Netherlands',
'Paris|http://www.wunderground.com/cgi-bin/findweather/getForecast?query=Paris%2C+France',
'Stockholm|http://www.wunderground.com/cgi-bin/findweather/getForecast?query=Stockholm%2C+Sweden',
'Oslo|http://www.wunderground.com/cgi-bin/findweather/getForecast?query=Oslo%2C+Norway',
'Moscow|http://www.wunderground.com/global/stations/27612.html',
'Athens|http://www.wunderground.com/cgi-bin/findweather/getForecast?query=Athens%2C+Greece',
'Tel Aviv|http://www.wunderground.com/cgi-bin/findweather/getForecast?query=Tel+Aviv%2C+Israel',
'Madrid|http://www.wunderground.com/cgi-bin/findweather/getForecast?query=Madrid%2C+Spain',
'Helsinki|http://www.wunderground.com/cgi-bin/findweather/getForecast?query=Helsinki%2C+Finland',
'Castrop-Rauxel|http://www.wunderground.com/cgi-bin/findweather/getForecast?query=51.572%2C7.376&sp=INORDRHE72',
'Southampton|http://www.wunderground.com/global/stations/03865.html',
'Canvey Island, Essex|http://www.wunderground.com/weather-forecast/zmw:00000.57.03691',
'Saratoga PWS|http://www.wunderground.com/cgi-bin/findweather/getForecast?query=pws:KCASARAT1',
'St. Nicholas|http://www.wunderground.com/q/locid:UKEN1390',
'Alberta (Canada)|http://www.wunderground.com/q/locid:CAXX4520',
'Andover (Middle Wallop)|http://www.wunderground.com/cgi-bin/findweather/getForecast?query=zmw:00000.1.03749',
'Assen (Holland)|http://www.wunderground.com/q/zmw:00000.6.06280',
'Honolulu|http://www.wunderground.com/US/HI/Honolulu.html',
'Malta|http://www.wunderground.com/global/ML.html',
//*/
$maxWidth = '640px';                      // max width of tables (could be '100%')
$maxIcons = 10;                           // max number of icons to display
$maxForecasts = 14;                       // max number of Text forecast periods to display
$maxForecastLegendWords = 4;              // more words in forecast legend than this number will use our forecast words 
$numIconsInFoldedRow = 5;                 // if words cause overflow of $maxWidth pixels, then put this num of icons in rows
$autoSetTemplate = true;                  // =true set icons based on wide/narrow template design
$cacheFileDir = './';                     // default cache file directory
$cacheName = "WU-forecast-json.txt";      // locally cached page from WU
$refetchSeconds = 3600;                   // cache lifetime (3600sec = 60 minutes)
$xlateCOP = 'Chance of precipitation';    // change to local language if needed like
//$xlateCOP = 'Kans op neerslag';   //  Dutch example
$showTempsAs  = 'C';                  // under icons/forecast, 'C'=Centigrade, 'F'=Fahrenheit
$charsetOutput = 'ISO-8859-1';        // default character encoding of output
$lang = 'en';	// default language
$foldIconRow = true;  // display icons in rows of 5 if long texts are found
$RTLlang = ',he,jp,cn,';  // languages that use right-to-left order
// ---- end of settings ---------------------------------------------------
// overrides from Settings.php if available
global $SITE;
if (isset($SITE['WUforecasts']))   {$WUforecasts = $SITE['WUforecasts']; }
if (isset($SITE['WUAPIkey']))	{$WUAPIkey = $SITE['WUAPIkey']; } // new V3.00
if (isset($SITE['fcsturlWU'])) 	{$WU_URL = $SITE['fcsturlWU'];}
if (isset($SITE['fcsticonsdir'])) 	{$iconDir = $SITE['fcsticonsdir'];}
if (isset($SITE['fcsticonstype'])) 	{$iconType = $SITE['fcsticonstype'];}
if (isset($SITE['uomTemp']))	{$uomTemp = $SITE['uomTemp'];}
if (isset($SITE['xlateCOP']))	{$xlateCOP = $SITE['xlateCOP'];}
if (isset($LANGLOOKUP['Chance of precipitation'])) {
  $xlateCOP = $LANGLOOKUP['Chance of precipitation'];
if (isset($SITE['charset']))	{$charsetOutput = strtoupper($SITE['charset']); }
if (isset($SITE['lang']))		{$lang = $SITE['lang'];}
if(isset($SITE['cacheFileDir']))     {$cacheFileDir = $SITE['cacheFileDir']; }
if(isset($SITE['foldIconRow']))     {$foldIconRow = $SITE['foldIconRow']; }
if(isset($SITE['RTL-LANG']))     {$RTLlang = $SITE['RTL-LANG']; }
// end of overrides from Settings.php
// -------------------begin code ------------------------------------------
if (isset($_REQUEST['sce']) && strtolower($_REQUEST['sce']) == 'view' ) {
   //--self downloader --
   $filenameReal = __FILE__;
   $download_size = filesize($filenameReal);
   header('Pragma: public');
   header('Cache-Control: private');
   header('Cache-Control: no-cache, must-revalidate');
   header("Content-type: text/plain");
   header("Accept-Ranges: bytes");
   header("Content-Length: $download_size");
   header('Connection: close');
   readfile($filenameReal);
   exit;
$Status = "<!-- $Version on PHP ".phpversion()." -->\n";
//------------------------------------------------
if(preg_match('|specify|i',$WUAPIkey)) {
	print "<p>Note: the WU-forecast.php script requires an API key from WeatherUnderground to operate.<br/>";
	print "Visit <a href=\"http://www.wunderground.com/weather/api/\">Weather Underground</a> to ";
	print "register for an API key.</p>\n";
	if( isset($SITE['fcsturlWU']) ) {
		print "<p>Insert in Settings.php an entry for:<br/><br/>\n";
		print "\$SITE['WUAPIkey'] = '<i>your-key-here</i>';<br/><br/>\n";
		print "replacing <i>your-key-here</i> with your WU API key.</p>\n";
	return;
$NWSiconlist = array(
 // WU Icon name => NWS icon name // WU meaning
 'chanceflurries.gif' 	=> array('sn.jpg','Chance flurries'), // Chance of Flurries
 'chancerain.gif' 		=> array('hi_shwrs.jpg','Chance rain'), // Chance of Rain
 'chancesleet.gif' 		=> array('ip.jpg','Chance sleet'), // Chance of Sleet
 'chancesnow.gif' 		=> array('sn.jpg','Chance snow'), // Chance of Snow
 'chancetstorms.gif' 	=> array('hi_tsra.jpg','Chance thunderstorms'), // Chance of Thunderstorms
 'clear.gif' 			=> array('skc.jpg','Clear'), // Clear
 'cloudy.gif' 			=> array('ovc.jpg','Cloudy'), // Cloudy
 'flurries.gif' 		=> array('sn.jpg','Flurries'), // Flurries
 'fog.gif' 				=> array('fg.jpg','Fog'), // Fog
 'hazy.gif' 			=> array('fg.jpg','Hazy'), // Hazy
 'mostlycloudy.gif' 	=> array('bkn.jpg','Mostly cloudy'), // Mostly Cloudy
 'mostlysunny.gif' 		=> array('sct.jpg','Partly cloudy'), // Mostly Sunny
 'partlycloudy.gif' 	=> array('sct.jpg','Partly cloudy'), // Partly Cloudy
 'partlysunny.gif' 		=> array('bkn.jpg','Mostly sunny'), // Partly Sunny
 'rain.gif' 			=> array('ra.jpg','Rain'), // Rain 
 'sleet.gif' 			=> array('ip.jpg','Sleet'), // Sleet
 'sleat.gif' 			=> array('ip.jpg','Sleet'), // Sleet (other spelling)
 'snow.gif' 			=> array('sn.jpg','Snow'), // Snow
 'sunny.gif' 			=> array('skc.jpg','Sunny'), // Sunny
 'tstorms.gif' 			=> array('tsra.jpg','Thunderstorms'), // Thunderstorms
 'unknown.gif' 			=> array('na.jpg',''), // Unknown
 'nt_chanceflurries.gif' => array('nsn.jpg','Chance flurries'), // Chance of Flurries
 'nt_chancerain.gif' 	=> array('hi_nshwrs.jpg','Chance rain'), // Chance of Rain
 'nt_chancesleet.gif' 	=> array('ip.jpg','Chance sleet'), // Chance of Sleet
 'nt_chancesnow.gif' 	=> array('nsn.jpg','Chance snow'), // Chance of Snow
 'nt_chancetstorms.gif' => array('hi_ntsra.jpg','Chance thunderstorms'), // Chance of Thunderstorms
 'nt_clear.gif' 		=> array('nskc.jpg','Clear'), // Clear
 'nt_cloudy.gif' 		=> array('novc.jpg','Cloudy'), // Cloudy
 'nt_flurries.gif' 		=> array('nsn.jpg','Flurries'), // Flurries
 'nt_fog.gif' 			=> array('nfg.jpg','Fog'), // Fog
 'nt_hazy.gif' 			=> array('nfg.jpg','Hazy'), // Hazy
 'nt_mostlycloudy.gif' 	=> array('nbkn.jpg','Mostly cloudy'), // Mostly Cloudy
 'nt_mostlysunny.gif' 	=> array('nsct.jpg','Partly cloudy'), // Mostly Sunny
 'nt_partlycloudy.gif' 	=> array('nsct.jpg','Partly cloudy'), // Partly Cloudy
 'nt_partlysunny.gif' 	=> array('nbkn.jpg','Mostly cloudy'), // Partly Sunny
 'nt_rain.gif' 			=> array('nra.jpg','Rain'), // Rain 
 'nt_sleet.gif' 		=> array('ip.jpg','Sleet'), // Sleet
 'nt_sleat.gif'			=> array('ip.jpg','Sleet'), // sleet (other spelling)
 'nt_snow.gif' 			=> array('nsn.jpg','Snow'), // Snow
 'nt_sunny.gif' 		=> array('nskc.jpg','Sunny'), // Sunny
 'nt_tstorms.gif' 		=> array('ntsra.jpg','Thunderstorms'), // Thunderstorms
 'nt_unknown.gif' 		=> array('na.jpg',''), // Unknown
 '.gif' 		        => array('na.jpg',''), // Unknown
/* translation entries needed:
langlookup|Chance flurries|Chance flurries|
langlookup|Chance rain|Chance rain|
langlookup|Chance sleet|Chance sleet|
langlookup|Chance snow|Chance snow|
langlookup|Chance thunderstorms|Chance thunderstorms|
langlookup|Clear|Clear|
langlookup|Cloudy|Cloudy|
langlookup|Flurries|Flurries|
langlookup|Fog|Fog|
langlookup|Hazy|Hazy|
langlookup|Mostly cloudy|Mostly cloudy|
langlookup|Partly cloudy|Partly cloudy|
langlookup|Mostly sunny|Mostly sunny|
langlookup|Rain|Rain|
langlookup|Sleet|Sleet|
langlookup|Snow|Snow|
langlookup|Sunny|Sunny|
langlookup|Thunderstorms|Thunderstorms|
if(!function_exists('langtransstr')) {
	// shim function if not running in template set
	function langtransstr($input) { return($input); }
if(!function_exists('json_last_error')) {
	// shim function if not running PHP 5.3+
	function json_last_error() { return('- N/A'); }
	$Status .= "<!-- php V".phpversion()." json_last_error() stub defined -->\n";
	if(!defined('JSON_ERROR_NONE')) { define('JSON_ERROR_NONE',0); }
	if(!defined('JSON_ERROR_DEPTH')) { define('JSON_ERROR_DEPTH',1); }
	if(!defined('JSON_ERROR_STATE_MISMATCH')) { define('JSON_ERROR_STATE_MISMATCH',2); }
	if(!defined('JSON_ERROR_CTRL_CHAR')) { define('JSON_ERROR_CTRL_CHAR',3); }
	if(!defined('JSON_ERROR_SYNTAX')) { define('JSON_ERROR_SYNTAX',4); }
	if(!defined('JSON_ERROR_UTF8')) { define('JSON_ERROR_UTF8',5); }
WU_loadLangDefaults (); // set up the language defaults
$WULANG = 'EN'; // Default to English for API
$lang = strtolower($lang); 	
if( isset($WUlanguages[$lang]) ) { // if $lang is specified, use it
	$SITE['lang'] = $lang;
	$WULANG = $WUlanguages[$lang];
	$charsetOutput = (isset($WUlangCharsets[$lang]))?$WUlangCharsets[$lang]:$charsetOutput;
if(isset($_GET['lang']) and isset($WUlanguages[strtolower($_GET['lang'])]) ) { // template override
	$lang = strtolower($_GET['lang']);
	$SITE['lang'] = $lang;
	$WULANG = $WUlanguages[$lang];
	$charsetOutput = (isset($WUlangCharsets[$lang]))?$WUlangCharsets[$lang]:$charsetOutput;
$doRTL = (strpos($RTLlang,$lang) !== false)?true:false;  // format RTL language in Right-to-left in output
// get the selected forecast location code
$haveIndex = '0';
if (!empty($_GET['z']) && preg_match("/^[0-9]+$/i", htmlspecialchars($_GET['z']))) {
  $haveIndex = htmlspecialchars(strip_tags($_GET['z']));  // valid zone syntax from input
if(!isset($WUforecasts[0])) {
	// print "<!-- making NWSforecasts array default -->\n";
	$WUforecasts = array("|$WU_URL"); // create default entry
//  print "<!-- NWSforecasts\n".print_r($WUforecasts,true). " -->\n";
// Set the default zone. The first entry in the $SITE['NWSforecasts'] array.
list($Nl,$Nn) = explode('|',$WUforecasts[0].'|||');
$FCSTlocation = $Nl;
$WU_URL = $Nn;
if(!isset($WUforecasts[$haveIndex])) {
	$haveIndex = 0;
// locations added to the drop down menu and set selected zone values
$dDownMenu = '';
for ($m=0;$m<count($WUforecasts);$m++) { // for each locations
  list($Nlocation,$Nname) = explode('|',$WUforecasts[$m].'|||');
  $seltext = '';
  if($haveIndex == $m) {
    $FCSTlocation = $Nlocation;
    $WU_URL = $Nname;
	$seltext = ' selected="selected" ';
  $dDownMenu .= "     <option value=\"$m\"$seltext>".langtransstr($Nlocation)."</option>\n";
// build the drop down menu
$ddMenu = '';
// create menu if at least two locations are listed in the array
if (isset($WUforecasts[0]) and isset($WUforecasts[1])) {
	if($doRTL) {$RTLopt = ' style="direction: rtl;"'; } else {$RTLopt = '';}; 
	$ddMenu .= '<tr align="center">
      <td style="font-size: 14px; font-family: Arial, Helvetica, sans-serif">
      <script type="text/javascript">
        <!--
        function menu_goto( menuform ){
         selecteditem = menuform.logfile.selectedIndex ;
         logfile = menuform.logfile.options[ selecteditem ].value ;
         if (logfile.length != 0) {
          location.href = logfile ;
         }
        }
        //-->
      </script>
     <form action="" method="get">
     <p><select name="z" onchange="this.form.submit()"'.$RTLopt.'>
     <option value=""> - '.langtransstr('Select Forecast').' - </option>
' . $dDownMenu .
		$ddMenu . '     </select></p>
     <div><noscript><pre><input name="submit" type="submit" value="'.langtransstr('Get Forecast').'" /></pre></noscript></div>
     </form>
    </td>
   </tr>
$Force = false;
if (isset($_REQUEST['force']) and  $_REQUEST['force']=="1" ) {
  $Force = true;
$doDebug = false;
if (isset($_REQUEST['debug']) and strtolower($_REQUEST['debug'])=='y' ) {
  $doDebug = true;
$fileName = $WU_URL;
if ($doDebug) {
  $Status .= "<!-- WU URL: $fileName -->\n";
if (isset($uomTemp) and $showTempsAs <> 'B') { // use Settings.php Temp units only
   $showTempsAs = preg_match('|C|i',$uomTemp) ? 'C' : 'F';
   $Status .= "<!-- temps in $showTempsAs -->\n";
if ($autoSetTemplate and isset($_SESSION['CSSwidescreen'])) {
	if($_SESSION['CSSwidescreen'] == true) {
	   $maxWidth = '900px';
	   $maxIcons = 14;
	   $maxForecasts = 14;
	   $numIconsInFoldedRow = 7;
	   $Status .= "<!-- autoSetTemplate using ".$SITE['CSSwideOrNarrowDefault']." aspect. -->\n";	
	if($_SESSION['CSSwidescreen'] == false) {
	   $maxWidth = '640px';
	   $maxIcons = 10;
	   $maxForecasts = 14;
	   $numIconsInFoldedRow = 5;
	   $Status .= "<!-- autoSetTemplate using ".$SITE['CSSwideOrNarrowDefault']." aspect. -->\n";	
$cacheName = $cacheFileDir . $cacheName;
$cacheName = preg_replace('|\.txt|is',"-$haveIndex-$lang.txt",$cacheName); // unique cache per language used
$APIfileName = WU_get_APIURL($fileName); // transform WU page URL to API query URL
if (! $Force and file_exists($cacheName) and filemtime($cacheName) + $refetchSeconds > time()) {
      $html = implode('', file($cacheName)); 
      $Status .= "<!-- loading from $cacheName (" . strlen($html) . " bytes) -->\n"; 
  } else { 
      $Status .= "<!-- loading from $APIfileName. -->\n"; 
      $html = WU_fetchUrlWithoutHanging($APIfileName,$cacheName); 
    $RC = '';
	if (preg_match("|^HTTP\/\S+ (.*)\r\n|",$html,$matches)) {
	    $RC = trim($matches[1]);
	$Status .= "<!-- RC=$RC, bytes=" . strlen($html) . " -->\n";
	if (preg_match('|30\d |',$RC)) { // handle possible blocked redirect
	   preg_match('|Location: (\S+)|is',$html,$matches);
	   if(isset($matches[1])) {
		  $sURL = $matches[1];
		  if(preg_match('|opendns.com|i',$sURL)) {
			  $Status .= "<!--  NOT following to $sURL --->\n";
		  } else {
			$Status .= "<!-- following to $sURL --->\n";
			$html = WU_fetchUrlWithoutHanging($sURL,false);
			$RC = '';
			if (preg_match("|^HTTP\/\S+ (.*)\r\n|",$html,$matches)) {
				$RC = trim($matches[1]);
			}
			$Status .= "<!-- RC=$RC, bytes=" . strlen($html) . " -->\n";
		  }
	   }
    }
      $fp = fopen($cacheName, "w"); 
	  if (!$fp) { 
	    $Status .= "<!-- unable to open $cacheName for writing. -->\n"; 
	  } else {
        $write = fputs($fp, $html); 
        fclose($fp);  
		$Status .= "<!-- saved cache to $cacheName (". strlen($html) . " bytes) -->\n";
	  } 
  preg_match('|charset="{0,1}(\S+)"{0,1}|i',$html,$matches);
  if (isset($matches[1])) {
    $charsetInput = strtoupper($matches[1]);
  } else {
    $charsetInput = 'UTF-8';
 $doIconv = ($charsetInput == $charsetOutput)?false:true; // only do iconv() if sets are different
 $Status .= "<!-- using charsetInput='$charsetInput' charsetOutput='$charsetOutput' doIconv='$doIconv' doRTL='$doRTL' -->\n";
  $i = strpos($html,"\r\n\r\n");
  $headers = substr($html,0,$i-1);
  $content = substr($html,$i+4);
  if(preg_match('|Transfer-Encoding: chunke|Ui',$headers)) {
	  $Status .= "<!-- unchunking response -->\n"; 
	  $Status .= "<!-- in=".strlen($html);
      $html = preg_replace("|\r\n[0-9a-fA-F]+\r\n|is",'',$html); // kludge, but should get them all :)
	  $Status .= " out=".strlen($html). " bytes -->\n";
 //  process the file .. select out the 7-day forecast part of the page
  $UnSupported = false;
// --------------------------------------------------------------------------------------------------
 $Status .= "<!-- processing JSON entries for forecast -->\n";
  $i = strpos($html,"\r\n\r\n");
  $headers = substr($html,0,$i-1);
  $content = substr($html,$i+4);
  $rawJSON = $content;
  $Status .= "<!-- rawJSON size is ".strlen($rawJSON). " bytes -->\n";
  $rawJSON = WU_prepareJSON($rawJSON);
  $JSON = json_decode($rawJSON,true); // get as associative array
  $Status .= WU_decode_JSON_error();
  //$Status .= "<!-- JSON\n".print_r($JSON,true)." -->\n";
/* //Ken's dump debugging code
$Status = htmlentities($Status);
$Status = preg_replace("|\n|is","<br/>\n",$Status);
print $Status;
return;
//Ken's dump debugging code
if(json_last_error() === JSON_ERROR_NONE) { // got good JSON .. process it
   $UnSupported = false;
   $WUforecastcity = trim(trim($JSON['location']['city']));
   if($doIconv) {$WUforecastcity = iconv($charsetInput,$charsetOutput.'//TRANSLIT',$WUforecastcity);}
   if($doDebug) {
     $Status .= "<!-- WUforecastcity='$WUforecastcity' -->\n";
   }
   $WUtitle = "5-day Forecast";
// Process the Period forecasts for High/Low temperatures (one period=1 day)
// much easier than extracting from the text forecast :)
  $n = 0;
  foreach ($JSON['forecast']['simpleforecast']['forecastday'] as $i => $FCpart) {
	  $sT = ($showTempsAs == 'C')?'celsius':'fahrenheit';
	  $WUforecasttemp[$n] = "<span style=\"color: #ff0000;\">".$FCpart['high'][$sT]."&deg;$showTempsAs</span>";
	  $n++;
	  $WUforecasttemp[$n] = "<span style=\"color: #0000ff;\">".$FCpart['low'][$sT]."&deg;$showTempsAs</span>";
	  $n++;
// process the forecast details from the 1/2 day periods (day, night, etc)
  $n = 0; 
  foreach ($JSON['forecast']['txt_forecast']['forecastday'] as $i => $FCpart) {  // 
 	if ( $doDebug) {
      $Status .= "<!-- processing forecastday[$i]='" . $FCpart['title'] . "' -->\n";
	$sT = ($showTempsAs == 'C')?'fcttext_metric':'fcttext';	
    if($i >= $maxForecasts or strlen($FCpart['title'])+strlen($FCpart[$sT]) < 10) {
		break; // end of the good stuff
	$WUforecasticon[$n] = $FCpart['icon'].'.gif';
	if ($doDebug) {
      $Status .= "<!-- WUforecasticon[$n]='" . $WUforecasticon[$n] . "' -->\n";
	$WUforecastday[$n] = trim($FCpart['title']);
	if($doIconv) {$WUforecastday[$n] = iconv($charsetInput,$charsetOutput.'//TRANSLIT',$WUforecastday[$n]);}
	$WUforecasttitles[$n] = $WUforecastday[$n];
	if ($doDebug) {
      $Status .= "<!-- WUforecastday[$n]='" . $WUforecastday[$n] . "' -->\n";
	$WUforecasttext[$n] = trim($FCpart[$sT]);
	if($doIconv) {$WUforecasttext[$n] = preg_replace('/(Chance of Precip.|Chance of precipitation:)/s',iconv($charsetOutput,$charsetInput,$xlateCOP).':',$WUforecasttext[$n]);}
	if($doIconv) {$WUforecasttext[$n] = iconv($charsetInput,$charsetOutput.'//TRANSLIT',$WUforecasttext[$n]);}
	if ($doDebug) {
      $Status .= "<!-- WUforecasttext[$n]='" . $WUforecasttext[$n] . "' -->\n";
	$WUforecastpop[$n] = $FCpart['pop'];
	if ($doDebug) {
      $Status .= "<!-- WUforecastpop[$n]='" . $WUforecastpop[$n] . "' -->\n";
	$temp = explode('.',$WUforecasttext[$n]); // split as sentences (sort of).
	$WUforecastcond[$n] = trim($temp[0]); // take first one as summary.
	if ($doDebug) {
      $Status .= "<!-- forecastcond[$n]='" . $WUforecastcond[$n] . "' -->\n";
    if (count(explode(' ',$WUforecastcond[$n])) > $maxForecastLegendWords) {
	   if(function_exists('langtransstr')) {
         $WUforecastcond[$n] = langtransstr($NWSiconlist[$WUforecasticon[$n]][1]); // use our description instead
	   } else {
         $WUforecastcond[$n] = $NWSiconlist[$WUforecasticon[$n]][1]; // use our description instead
	   }
	   $Status .= "<!-- replaced forecastcond[$n]='" . $WUforecastcond[$n] . "' -->\n";
    }
	$WUforecasticons[$n] = $WUforecastday[$n] . "<br/>" .
	     WU_img_replace($WUforecasticon[$n],$WUforecastcond[$n],$WUforecastpop[$n]) . "<br/>" .
		 $WUforecastcond[$n];
	$n++;
  } // end of process text forecasts
} // end got good JSON decode/process
// end process JSON style --------------------------------------------------------------------
// All finished with parsing, now prepare to print
  $wdth = intval(100/count($WUforecasticons));
  $ndays = intval(count($WUforecasticon)/2);
  $WUtitle = preg_replace('|5|i',$ndays,$WUtitle,1);
  $doNumIcons = $maxIcons;
  if(count($WUforecasticons) < $maxIcons) { $doNumIcons = count($WUforecasticons); }
  $IncludeMode = false;
  $PrintMode = true;
  if (isset($doPrintWU) && ! $doPrintWU ) {
      print $Status;
      return;
  if (isset($_REQUEST['inc']) && 
      strtolower($_REQUEST['inc']) == 'noprint' ) {
      print $Status;
	  return;
if (isset($_REQUEST['inc']) && strtolower($_REQUEST['inc']) == 'y') {
  $IncludeMode = true;
if (isset($doIncludeWU)) {
  $IncludeMode = $doIncludeWU;
$printHeading = true;
$printIcons = true;
$printText = true;
if (isset($doPrintHeadingWU)) {
  $printHeading = $doPrintHeadingWU;
if (isset($_REQUEST['heading']) ) {
  $printHeading = substr(strtolower($_REQUEST['heading']),0,1) == 'y';
if (isset($doPrintIconsWU)) {
  $printIcons = $doPrintIconsWU;
if (isset($_REQUEST['icons']) ) {
  $printIcons = substr(strtolower($_REQUEST['icons']),0,1) == 'y';
if (isset($doPrintTextWU)) {
  $printText = $doPrintTextWU;
if (isset($_REQUEST['text']) ) {
  $printText = substr(strtolower($_REQUEST['text']),0,1) == 'y';
if (! $IncludeMode and $PrintMode) { ?>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
    "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<title>WeatherUnderground <?php echo $WUtitle . ' - ' . $WUforecastcity; ?></title>
    <meta http-equiv="Content-Type" content="text/html; charset=<?php echo $charsetOutput; ?>" />
</head>
<body style="font-family:Verdana, Arial, Helvetica, sans-serif; font-size:12px; background-color:#FFFFFF">
<?php
} // end printmode and not includemode
print $Status;
// if the forecast text is blank, prompt the visitor to force an update
if($UnSupported) {
  print <<< EONAG
<h1>Sorry.. this <a href="$WU_URL">forecast</a> can not be processed at this time.</h1>
EONAG
if (strlen($WUforecasttext[0])<2 and $PrintMode and ! $UnSupported ) {
  echo '<br/><br/>Forecast blank? <a href="' . $PHP_SELF . '?force=1">Force Update</a><br/><br/>';
if ($PrintMode and ($printHeading or $printIcons)) {  ?>
  <table width="<?php print $maxWidth; ?>" style="border: none;" class="WUforecast">
  <?php echo $ddMenu ?>
    <?php if($printHeading) { ?>
    <tr align="center" style="background-color: #FFFFFF;">
      <td><b>WeatherUnderground <?php echo $WUtitle; ?>: </b><span style="color: green;">
	   <?php echo $WUforecastcity; ?></span>
      </td>
    </tr>
	<?php } // end print heading
	if ($printIcons) {
    <tr>
      <td align="center">
	    <table width="100%" border="0" cellpadding="0" cellspacing="0">  
	<?php
	  // see if we need to fold the icon rows due to long text length
	  $doFoldRow = false; // don't assume we have to fold the row..
	  if($foldIconRow) {
		  $iTitleLen =0;
		  $iTempLen = 0;
		  $iCondLen = 0;
		  for($i=0;$i<$doNumIcons;$i++) {
			$iTitleLen += strlen(strip_tags($WUforecasttitles[$i]));
			$iCondLen += strlen(strip_tags($WUforecastcond[$i]));
			$iTempLen += strlen(strip_tags($WUforecasttemp[$i]));  
		  }
		  print "<!-- lengths title=$iTitleLen cond=$iCondLen temps=$iTempLen -->\n";
		  $maxChars = 135;
		  if($iTitleLen >= $maxChars or 
		     $iCondLen >= $maxChars or
			 $iTempLen >= $maxChars ) {
				 print "<!-- folding icon row -->\n";
				 $doFoldRow = true;
			 } 
			 
	  }
	  $startIcon = 0;
	  $finIcon = $doNumIcons;
	  $incr = $doNumIcons;
	  if ($doFoldRow) { $wdth = $wdth*2; $incr = $numIconsInFoldedRow; }
	for ($k=$startIcon;$k<$doNumIcons-1;$k+=$incr) { // loop over icon rows, 5 at a time until done
	  $startIcon = $k;
	  if ($doFoldRow) { $finIcon = $startIcon+$numIconsInFoldedRow; } else { $finIcon = $doNumIcons; }
	  $finIcon = min($finIcon,$doNumIcons);
	  print "<!-- start=$startIcon fin=$finIcon num=$doNumIcons -->\n";
	  if(!$doRTL) {
        print "	      <tr valign=\"top\" align=\"center\">\n";
	  } else {
        print "	      <tr valign=\"top\" align=\"center\" style=\"direction: rtl\">\n";
	  }
	  for ($i=$startIcon;$i<$finIcon;$i++) {
		$ni = $doRTL?$numIconsInFoldedRow-1-$i+$startIcon+$k:$i;  
	    print "<td style=\"width: $wdth%; text-align: center;\"><span style=\"font-size: 8pt;\">$WUforecasttitles[$ni]</span></td>\n";
	  }
print "          </tr>\n";	
	  if(!$doRTL) {
        print "	      <tr valign=\"top\" align=\"center\">\n";
	  } else {
        print "	      <tr valign=\"top\" align=\"center\" style=\"direction: rtl\">\n";
	  }
	  for ($i=$startIcon;$i<$finIcon;$i++) {
		$ni = $doRTL?$numIconsInFoldedRow-1-$i+$startIcon+$k:$i;  
	    print "<td style=\"width: $wdth%;\">" . WU_img_replace($WUforecasticon[$ni],$WUforecastcond[$ni],$WUforecastpop[$ni]) . "</td>\n";
	  }
          </tr>	
	      <tr valign ="top" align="center">
	<?php
	  for ($i=$startIcon;$i<$finIcon;$i++) {
		$ni = $doRTL?$numIconsInFoldedRow-1-$i+$startIcon+$k:$i;  
	    print "<td style=\"width: $wdth%; text-align: center;\"><span style=\"font-size: 8pt;\">$WUforecastcond[$ni]</span></td>\n";
	  }
      print "	      </tr>\n";	
	  if(!$doRTL) {
        print "	      <tr valign=\"top\" align=\"center\">\n";
	  } else {
        print "	      <tr valign=\"top\" align=\"center\" style=\"direction: rtl\">\n";
	  }
	  for ($i=$startIcon;$i<$finIcon;$i++) {
		$ni = $doRTL?$numIconsInFoldedRow-1-$i+$startIcon+$k:$i;  
	    print "<td style=\"width: $wdth%; text-align: center;\">$WUforecasttemp[$ni]</td>\n";
	  }
	  ?>
          </tr>
	<?php if(! $iconDir) { // print a PoP row since they aren't using icons 
	  if(!$doRTL) {
        print "	      <tr valign=\"top\" align=\"center\">\n";
	  } else {
        print "	      <tr valign=\"top\" align=\"center\" style=\"direction: rtl\">\n";
	  }
	  for ($i=$startIcon;$i<$finIcon;$i++) {
		$ni = $doRTL?$numIconsInFoldedRow-1-$i+$startIcon+$k:$i;  
	    print "<td style=\"width: $wdth%; text-align: center;\">";
	    if($WUforecastpop[$ni] > 0) {
  		  print "<span style=\"font-size: 8pt; color: #009900;\">PoP: $WUforecastpop[$ni]%</span>";
		} else {
		  print "&nbsp;";
		print "</td>\n";
	  }
          </tr>	
	  <?php } // end if iconDir ?>
      <?php if ($doFoldRow) { 
	  if(!$doRTL) {
        print "	      <tr valign=\"top\" align=\"center\">\n";
	  } else {
        print "	      <tr valign=\"top\" align=\"center\" style=\"direction: rtl\">\n";
	  }
	    for ($i=$startIcon;$i<$finIcon;$i++) {
	      print "<td style=\"width: $wdth%; text-align: center;\">&nbsp;</td>\n";
      
	    }
		print "</tr>\n";
      } // end doFoldRow ?>
  <?php } // end of foldIcon loop ?>
        </table><!-- end icon table -->
     </td>
   </tr><!-- end print icons -->
   	<?php } // end print icons ?>
</table>
  <p>&nbsp;</p>
<?php } // end print header or icons
if ($PrintMode and $printText) { ?>
<table style="border: 0" width="<?php print $maxWidth; ?>" class="WUforecast">
	<?php
	  for ($i=0;$i<count($WUforecasttitles);$i++) {
        print "<tr valign =\"top\" align=\"left\">\n";
		if(!$doRTL) { // normal Left-to-right
	      print "<td style=\"width: 20%;\"><b>$WUforecasttitles[$i]</b><br />&nbsp;<br /></td>\n";
	      print "<td style=\"width: 80%;\">$WUforecasttext[$i]</td>\n";
		} else { // print RTL format
	      print "<td style=\"width: 80%; text-align: right;\">$WUforecasttext[$i]</td>\n";
	      print "<td style=\"width: 20%; text-align: right;\"><b>$WUforecasttitles[$i]</b><br />&nbsp;<br /></td>\n";
		print "</tr>\n";
	  }
   </table>
<?php } // end print text ?>
<?php if ($PrintMode) { ?>
<p>&nbsp;</p>
<p>Forecast from <a href="<?php echo htmlspecialchars($fileName); ?>">WeatherUnderground</a> 
for <?php echo $WUforecastcity; ?>.
<?php if($iconType <> '.jpg') {
	print "<br/>Animated forecast icons courtesy of <a href=\"http://www.meteotreviglio.com/\">www.meteotreviglio.com</a>.";
</p>
<?php
} // end printmode
 if (! $IncludeMode and $PrintMode ) { ?>
</body>
</html>
<?php 
// Functions --------------------------------------------------------------------------------
function WU_fetchUrlWithoutHanging($url,$cacheurl)
   {
   global $Status;
   // Set maximum number of seconds (can have floating-point) to wait for feed before displaying page without feed
   $numberOfSeconds=4;    
   // Suppress error reporting so Web site visitors are unaware if the feed fails
   error_reporting(0);
   // Extract resource path and domain from URL ready for fsockopen
   $url = str_replace("http://","",$url);
   $urlComponents = explode("/",$url);
   $domain = $urlComponents[0];
   $resourcePath = str_replace($domain,"",$url);
   $xml = '';
   // Establish a connection
   $socketConnection = fsockopen($domain, 80, $errno, $errstr, $numberOfSeconds);
   if (!$socketConnection)
       {
       // You may wish to remove the following debugging line on a live Web site
       $Status .= "<!-- Network error: $errstr ($errno) -->\n";
       }    // end if
   else    {
       $xml = '';
       fputs($socketConnection, "GET $resourcePath HTTP/1.1\r\nHost: $domain\r\nConnection: Close\r\nCookie: Units=metric;\r\nUser-agent: PHP,WU-forecast.php,saratoga-weather.org\r\n\r\n");
       // Loop until end of file
       while (!feof($socketConnection))
           {
           $xml .= fgets($socketConnection, 4096);
           }    // end while
       fclose ($socketConnection);
       }    // end else
   $xml = preg_replace('|\r\n2000\r\n|is','',$xml);  // this funky string started appearing in WU website
   return($xml);
   }    // end function
// -------------------------------------------------------------------------------------------
 function WU_img_replace ( $WUimage, $WUcondtext,$WUpop) {
// optionally replace the WeatherUnderground icon with an NWS icon instead.
 global $NWSiconlist,$iconDir,$iconType,$Status;
// $WU_URL = 'http://icons-aa.wxug.com/graphics/conds/';
// $WU_URL = 'http://icons.wunderground.com/graphics/conds/2005/';
 $WUiconURL = 'http://icons-pe.wxug.com/i/c/50/';
 $curicon = isset($NWSiconlist[$WUimage][0])?$NWSiconlist[$WUimage][0]:''; // translated icon (if any)
 if (!$iconDir or !$curicon) { // no change.. use WU icon
   return("<img src=\"$WUiconURL$WUimage\" width=\"50\" height=\"50\" 
  alt=\"$WUcondtext\" title=\"$WUcondtext\"/>"); 
  if($iconType <> '.jpg') {
	  $curicon = preg_replace('|\.jpg|',$iconType,$curicon);
  $Status .= "<!-- replace icon '$WUimage' with ";
  if ($WUpop > 0) {
	$testicon = preg_replace('|'.$iconType.'|',$WUpop.$iconType,$curicon);
	if (file_exists("$iconDir$testicon")) {
	  $newicon = $testicon;
	} else {
	  $newicon = $curicon;
  } else {
	$newicon = $curicon;
  $Status .= "'$newicon' pop=$WUpop -->\n";
  return("<img src=\"$iconDir$newicon\" width=\"55\" height=\"58\" 
  alt=\"$WUcondtext\" title=\"$WUcondtext\"/>"); 
// -------------------------------------------------------------------------------------------
function WU_prepareJSON($input) {
	global $Status;
   //This will convert ASCII/ISO-8859-1 to UTF-8.
   //Be careful with the third parameter (encoding detect list), because
   //if set wrong, some input encodings will get garbled (including UTF-8!)
   list($isUTF8,$offset,$msg) = WU_check_utf8($input);
   if(!$isUTF8) {
	   $Status .= "<!-- WU_prepareJSON: Oops, non UTF-8 char detected at $offset. $msg. Doing utf8_encode() -->\n";
	   $str = utf8_encode($input);
       list($isUTF8,$offset,$msg) = WU_check_utf8($str);
	   $Status .= "<!-- WU_prepareJSON: after utf8_encode, i=$offset. $msg. -->\n";   
   } else {
	   $Status .= "<!-- WU_prepareJSON: $msg. -->\n";
	   $str = $input;
   }
   //Remove UTF-8 BOM if present, json_decode() does not like it.
   if(substr($str, 0, 3) == pack("CCC", 0xEF, 0xBB, 0xBF)) $str = substr($str, 3);
   return $str;
// -------------------------------------------------------------------------------------------
function WU_check_utf8($str) {
// check all the characters for UTF-8 compliance so json_decode() won't choke
// Sometimes, an ISO international character slips in the WU text string.	  
     $len = strlen($str); 
     for($i = 0; $i < $len; $i++){ 
         $c = ord($str[$i]); 
         if ($c > 128) { 
             if (($c > 247)) return array(false,$i,"c>247 c='$c'"); 
             elseif ($c > 239) $bytes = 4; 
             elseif ($c > 223) $bytes = 3; 
             elseif ($c > 191) $bytes = 2; 
             else return false; 
             if (($i + $bytes) > $len) return array(false,$i,"i+bytes>len bytes=$bytes,len=$len"); 
             while ($bytes > 1) { 
                 $i++; 
                 $b = ord($str[$i]); 
                 if ($b < 128 || $b > 191) return array(false,$i,"128<b or b>191 b=$b"); 
                 $bytes--; 
             } 
         } 
     } 
     return array(true,$i,"Success. Valid UTF-8"); 
 } // end of check_utf8
// -------------------------------------------------------------------------------------------
function WU_decode_JSON_error() {
  $Status = '';
  $Status .= "<!-- json_decode returns ";
  switch (json_last_error()) {
	case JSON_ERROR_NONE:
		$Status .= ' - No errors';
	break;
	case JSON_ERROR_DEPTH:
		$Status .= ' - Maximum stack depth exceeded';
	break;
	case JSON_ERROR_STATE_MISMATCH:
		$Status .= ' - Underflow or the modes mismatch';
	break;
	case JSON_ERROR_CTRL_CHAR:
		$Status .= ' - Unexpected control character found';
	break;
	case JSON_ERROR_SYNTAX:
		$Status .= ' - Syntax error, malformed JSON';
	break;
	case JSON_ERROR_UTF8:
		$Status .= ' - Malformed UTF-8 characters, possibly incorrectly encoded';
	break;
	default:
		$Status .= ' - Unknown error, json_last_error() returns \''.json_last_error(). "'";
	break;
   } 
   $Status .= " -->\n";
   return($Status);
// -------------------------------------------------------------------------------------------
function WU_get_APIURL ($rawURL) {
	global $WUAPIkey,$WULANG,$Status,$doDebug;
// try to generate an API request URL from a WU page URL	
'Saratoga|http://www.wunderground.com/cgi-bin/findweather/getForecast?query=95070',
'Aarhus|http://www.wunderground.com/global/stations/06075.html',
'Auckland|http://english.wunderground.com/cgi-bin/findweather/getForecast?query=-36.910%2C174.771&sp=IAUCKLAN110', // Awhitu, Waiuku New Zealand
'Amsterdam|http://www.wunderground.com/cgi-bin/findweather/getForecast?query=Amsterdam%2C+Netherlands',
'Paris|http://www.wunderground.com/cgi-bin/findweather/getForecast?query=Paris%2C+France',
'Stockholm|http://www.wunderground.com/cgi-bin/findweather/getForecast?query=Stockholm%2C+Sweden',
'Oslo|http://www.wunderground.com/cgi-bin/findweather/getForecast?query=Oslo%2C+Norway',
'Moscow|http://www.wunderground.com/global/stations/27612.html',
'Athens|http://www.wunderground.com/cgi-bin/findweather/getForecast?query=Athens%2C+Greece',
'Tel Aviv|http://www.wunderground.com/cgi-bin/findweather/getForecast?query=Tel+Aviv%2C+Israel',
'Madrid|http://www.wunderground.com/cgi-bin/findweather/getForecast?query=Madrid%2C+Spain',
'Helsinki|http://www.wunderground.com/cgi-bin/findweather/getForecast?query=Helsinki%2C+Finland',
'Castrop-Rauxel|http://www.wunderground.com/cgi-bin/findweather/getForecast?query=51.572%2C7.376&sp=INORDRHE72',
'Southampton|http://www.wunderground.com/global/stations/03865.html',
'Canvey Island, Essex|http://www.wunderground.com/weather-forecast/zmw:00000.57.03691',
'Saratoga PWS|http://www.wunderground.com/cgi-bin/findweather/getForecast?query=pws:KCASARAT1',
'St. Nicholas|http://www.wunderground.com/q/locid:UKEN1390',
'Alberta (Canada)|http://www.wunderground.com/q/locid:CAXX4520',
'Andover (Middle Wallop)|http://www.wunderground.com/cgi-bin/findweather/getForecast?query=zmw:00000.1.03749',
'Assen (Holland)|http://www.wunderground.com/q/zmw:00000.6.06280',
'Honolulu|http://www.wunderground.com/US/HI/Honolulu.html',
'Malta|http://www.wunderground.com/global/ML.html',
http://api.wunderground.com/api/$WUAPIkey/forecast10day/geolookup/lang:$WULANG/q/$WUQUERY.json
// Note: new formats for the query:
//  CA/San_Francisco	US state/city
//  60290	US zipcode
//  Australia/Sydney	country/city
//  37.8,-122.4	latitude,longitude
//  KJFK	airport code
//  pws:KCASANFR70	PWS id
   $newURL = 'http://api.wunderground.com/api/%s/forecast10day/geolookup/lang:%s/q/%s.json';
   $Status .= "<!-- WU_API Raw URL='$rawURL' -->\n";
   if(preg_match("|query=([^\&]+)|i",$rawURL,$matches)) {
	 $rawQuery = urldecode(trim($matches[1]));
	 if(preg_match('|^[\d\-\.\,]+$|',$rawQuery)) { // likely lat,long query.. use it
	 } else { // likely a City, State query
		$t = explode(', ',$rawQuery);
		if(isset($t[1])) { $rawQuery = $t[1].'/'.$t[0]; }
		$rawQuery = preg_replace('| |','_',$rawQuery);
	 if($doDebug) {$Status .= "<!-- query='$rawQuery' -->\n"; }
	 $newURL = sprintf($newURL,$WUAPIkey,$WULANG,$rawQuery);
     $Status .= "<!-- WU API New URL='$newURL' -->\n";
	 return($newURL);
   } // end query= processing
   if(preg_match('|global/stations/(\d+).html|i',$rawURL,$matches)) {
	 $rawQuery = 'zmw:00000.1.'.trim($matches[1]);
	 $newURL = sprintf($newURL,$WUAPIkey,$WULANG,$rawQuery);
     $Status .= "<!-- WU API New URL='$newURL' -->\n";
	 return($newURL);
   }
   if(preg_match('|weather-forecast/zmw:([\d\.]+)|i',$rawURL,$matches)) {
	 $rawQuery = 'zmw:'.trim($matches[1]);
	 $newURL = sprintf($newURL,$WUAPIkey,$WULANG,$rawQuery);
     $Status .= "<!-- WU API New URL='$newURL' -->\n";
	 return($newURL);
   }
   if(preg_match('|/q/([^\s]+)|i',$rawURL,$matches)) { // handle alternate locid:, zmw: 
	 $rawQuery = trim($matches[1]);
	 $newURL = sprintf($newURL,$WUAPIkey,$WULANG,$rawQuery);
     $Status .= "<!-- WU API New URL='$newURL' -->\n";
	 return($newURL);
   }
   if(preg_match('|/US/(.*)$|i',$rawURL,$matches)) { // handle US ST/Cityname
	 $rawQuery = trim($matches[1]);
	 $newURL = sprintf($newURL,$WUAPIkey,$WULANG,$rawQuery);
     $Status .= "<!-- WU API New URL='$newURL' -->\n";
	 return($newURL);
   }
   if(preg_match('|/global/([^\s]+)\.html|i',$rawURL,$matches)) { // handle US ST/Cityname
	 $rawQuery = trim($matches[1]);
	 $newURL = sprintf($newURL,$WUAPIkey,$WULANG,$rawQuery);
     $Status .= "<!-- WU API New URL='$newURL' -->\n";
	 return($newURL);
   }
   return('');
function WU_loadLangDefaults () {
	global $WUlanguages, $WUlangCharsets;
WU Language definitions for Lang: in API URL
"AF" = Afrikaans
"AL" = Albanian
"AR" = Arabic
"HY" = Armenian
"AZ" = Azerbaijani
"EU" = Basque
"BY" = Belarusian
"BU" = Bulgarian
"LI" = British English
"MY" = Burmese
"CA" = Catalan
"CN" = Chinese - Simplified
"TW" = Chinese - Traditional
"CR" = Croatian
"CZ" = Czech
"DK" = Danish
"DV" = Dhivehi
"NL" = Dutch
"EN" = English
"EO" = Esperanto
"ET" = Estonian
"FA" = Farsi
"FI" = Finnish
"FR" = French
"FC" = French Canadian
"GZ" = Galician
"DL" = German
"KA" = Georgian
"GR" = Greek
"GU" = Gujarati
"HT" = Haitian Creole
"IL" = Hebrew
"HI" = Hindi
"HU" = Hungarian
"IS" = Icelandic
"IO" = Ido
"ID" = Indonesian
"IR" = Irish Gaelic
"IT" = Italian
"JP" = Japanese
"JW" = Javanese
"KM" = Khmer
"KR" = Korean
"KU" = Kurdish
"LA" = Latin
"LV" = Latvian
"LT" = Lithuanian
"ND" = Low German
"MK" = Macedonian
"MT" = Maltese
"GM" = Mandinka
"MI" = Maori
"MR" = Marathi
"MN" = Mongolian
"NO" = Norwegian
"OC" = Occitan
"PS" = Pashto
"GN" = Plautdietsch
"PL" = Polish
"BR" = Portuguese
"PA" = Punjabi
"RO" = Romanian
"RU" = Russian
"SR" = Serbian
"SK" = Slovak
"SL" = Slovenian
"SP" = Spanish
"SI" = Swahili
"SW" = Swedish
"CH" = Swiss
"TL" = Tagalog
"TT" = Tatarish
"TH" = Thai
"TR" = Turkish
"TK" = Turkmen
"UA" = Ukrainian
"UZ" = Uzbek
"VU" = Vietnamese
"CY" = Welsh
"SN" = Wolof
"JI" = Yiddish - transliterated
"YI" = Yiddish - unicode
 $WUlanguages = array(  // our template language codes v.s. lang:LL codes for JSON
	'af' => 'AF',
	'bg' => 'BU',
	'ct' => 'CA',
	'dk' => 'DK',
	'nl' => 'NL',
	'en' => 'EN',
	'fi' => 'FI',
	'fr' => 'FR',
	'de' => 'DL',
	'el' => 'GR',
	'ga' => 'IR',
	'it' => 'IT',
	'he' => 'IL',
	'hu' => 'HU',
	'no' => 'NO',
	'pl' => 'PL',
	'pt' => 'BR',
	'ro' => 'RO',
	'es' => 'SP',
	'se' => 'SW',
	'si' => 'SL',
  );
  $WUlangCharsets = array(
	'bg' => 'ISO-8859-5',
	'el' => 'ISO-8859-7',
	'he' => 'UTF-8', 
	'hu' => 'ISO-8859-2',
	'ro' => 'ISO-8859-2',
	'pl' => 'ISO-8859-2',
	'si' => 'ISO-8859-2',
	'ru' => 'ISO-8859-5'
  );
} // end loadLangDefaults
// End of functions --------------------------------------------------------------------------
?><?php
############################################################################
# A Project of TNET Services, Inc. and Saratoga-Weather.org (Canada/World-ML template set)
############################################################################
#   Project:    Sample Included Website Design
#   Module:     sample.php
#   Purpose:    Sample Page
#   Authors:    Kevin W. Reed <kreed@tnet.com>
#               TNET Services, Inc.
# 	Copyright:	(c) 1992-2007 Copyright TNET Services, Inc.
############################################################################
# This program is free software; you can redistribute it and/or
# modify it under the terms of the GNU General Public License
# as published by the Free Software Foundation; either version 2
# of the License, or (at your option) any later version.
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
# You should have received a copy of the GNU General Public License
# along with this program; if not, write to the Free Software
# Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA
############################################################################
#	This document uses Tab 4 Settings
############################################################################
//Version 1.01 - 24-Jul-2012 - corrected default text to display current weather software
require_once("Settings.php");
require_once("common.php");
############################################################################
$TITLE= $SITE['organ'] . " - " . langtransstr("About Us");
$showGizmo = true;  // set to false to exclude the gizmo
include("top.php");
############################################################################
</head>
<body>
<?php
############################################################################
include("header.php");
############################################################################
include("menubar.php");
############################################################################
<div id="main-copy">
<?php if($SITE['lang'] == 'en') { ?>  
	<h3>Informazioni sulla stazione Meteo</h3> 
	<p>Il sito e la raccolta dati sono gestiti dal programma <a href="<?php echo $SITE['WXsoftwareURL']; ?>"><?php echo $SITE['WXsoftwareLongName']; ?></a>. La stazione comprende l'anemometro, un pluviometro e un sensore di temperatura/umidit
 collocati in posizione ottimale al fine di ottenere misure il pi
 accurate possibile.</p>
	<h3>Riguardo la citt
</h3> 
<p align=left>
Informazioni sulla citt
</p>
	<h3>Note sul Sito</h3> 
	<p>Questo sito utilizza il template design di <a href="http://www.carterlake.org">CarterLake.org</a> convertito in PHP da <a href="http://saratoga-weather.org/">Saratoga-Weather.org</a>.<br/>
	<p>Il template utilizzato 
 conforme alle specifiche XHTML 1.0. Verifica codice <a href="http://validator.w3.org/check/referer">XHTML</a> e <a href="http://jigsaw.w3.org/css-validator/check/referer">CSS</a> di questa pagina.</p>
<?php }
// end of english specific site description
  if ($SITE['lang'] <> 'en') { 
// handle included files for other language wxabout-XX.html 
   if(file_exists("wxabout-".$SITE['lang'].'.html') ) {
     include_once("wxabout-".$SITE['lang'].'.html');
   } else {
     print "<p>Sorry, no '".$SITE['lang']."' version of this page can be found.</p>\n";
   }
  }// end of non-english inclusion
</div><!-- end main-copy -->
<?php
############################################################################
include("footer.php");
############################################################################
# End of Page
############################################################################
?><?php
############################################################################
# A Project of TNET Services, Inc. and Saratoga-Weather.org (Canada/World-ML template set)
############################################################################
#   Project:    Sample Included Website Design
#   Module:     sample.php
#   Purpose:    Sample Page
#   Authors:    Kevin W. Reed <kreed@tnet.com>
#               TNET Services, Inc.
# 	Copyright:	(c) 1992-2007 Copyright TNET Services, Inc.
############################################################################
# This program is free software; you can redistribute it and/or
# modify it under the terms of the GNU General Public License
# as published by the Free Software Foundation; either version 2
# of the License, or (at your option) any later version.
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
# You should have received a copy of the GNU General Public License
# along with this program; if not, write to the Free Software
# Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA
############################################################################
#	This document uses Tab 4 Settings
############################################################################
require_once("Settings.php");
require_once("common.php");
############################################################################
$TITLE= $SITE['organ'] . " - " . langtransstr("Watches/Warnings/Advisories");
$showGizmo = true;  // set to false to exclude the gizmo
include("top.php");
############################################################################
</head>
<body>
<?php
############################################################################
include("header.php");
############################################################################
include("menubar.php");
############################################################################
<div id="main-copy">
  <?php if(isset($SITE['EUwarningURL'])) {
    include_once("get-meteoalarm-warning-inc.php"); // Use the EU Meteoalarm warning
	} else { 
// -------------------------------------------------------
// put your code for your regional weather warnings below this line ?>
	  <h3><?php langtrans('Watches/Warnings/Advisories'); ?></h3> 
        
    <div class="advisoryBox" style="text-align: left; background-color:#FFFF99">
	Note: you'll need to find a link to your national watch/warn/advisory source.
	</div>
  <?php // end of put your code above this line
// -------------------------------------------------------
    } // end roll-your-own warnings ?>
</div><!-- end main-copy -->
<?php
############################################################################
include("footer.php");
############################################################################
# End of Page
############################################################################
?><?php
############################################################################
# A Project of TNET Services, Inc. and Saratoga-Weather.org (Canada/World-ML template set)
############################################################################
#   Project:    Sample Included Website Design
#   Module:     sample.php
#   Purpose:    Sample Page
#   Authors:    Kevin W. Reed <kreed@tnet.com>
#               TNET Services, Inc.
# 	Copyright:	(c) 1992-2007 Copyright TNET Services, Inc.
############################################################################
# This program is free software; you can redistribute it and/or
# modify it under the terms of the GNU General Public License
# as published by the Free Software Foundation; either version 2
# of the License, or (at your option) any later version.
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
# You should have received a copy of the GNU General Public License
# along with this program; if not, write to the Free Software
# Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA
############################################################################
#	This document uses Tab 4 Settings
############################################################################
// Version 1.01 - 22-Jan-2012 - fixes for mixed date format translations
require_once("Settings.php");
require_once("common.php");
############################################################################
$TITLE= $SITE['organ'] . " - " . langtransstr("Astronomy");
$showGizmo = true;  // set to false to exclude the gizmo
include("top.php");
############################################################################
</head>
<body>
<?php
############################################################################
include("header.php");
############################################################################
include("menubar.php");
############################################################################
# NOTE: you don't have to change these defaults.. use Settings.php to set your values.
$timeFormat = 'd-M-Y g:ia';  // 31-Mar-2006 6:35pm
//$timeFormat = 'd-M-Y H:i';   // 31-Mar-2006 18:35
$timeOnlyFormat = 'g:ia';    // h:mm[am|pm];
//$timeOnlyFormat = 'H:i';     // hh:mm
$dateOnlyFormat = 'd-M-Y';   // d-Mon-YYYY
$WDdateMDY = true;     // true=dates by WD are 'month/day/year'
//                     // false=dates by WD are 'day/month/year'
$ourTZ = "PST8PDT";  //NOTE: this *MUST* be set correctly to
// translate UTC times to your LOCAL time for the displays.
$imagesDir = './ajax-images/';  // directory for ajax-images with trailing slash
if (isset($SITE['imagesDir'])) 	{$imagesDir = $SITE['imagesDir'];}
if (isset($SITE['timeFormat'])) {$timeFormat = $SITE['timeFormat'];}
if (isset($SITE['timeOnlyFormat'])) {$timeOnlyFormat = $SITE['timeOnlyFormat'];}
if (isset($SITE['dateOnlyFormat'])) {$dateOnlyFormat = $SITE['dateOnlyFormat'];}
if (isset($SITE['WDdateMDY']))  {$WDdateMDY = $SITE['WDdateMDY'];}
if (isset($SITE['tz'])) 		{$ourTZ = $SITE['tz'];}
$DebugMode = false;
if (isset($_REQUEST['debug'])) {$DebugMode = strtolower($_REQUEST['debug']) == 'y'; }
<div id="main-copy-dark">
<h3><?php langtrans('Astronomy'); ?></h3> 
<br />
<?php if(isset($SITE['WXtags']) and $SITE['WXtags'] <> '') { // do astronomy only if station is configured
if(isset($SITE['WXsoftware']) and $SITE['WXsoftware'] == 'WD') {
// Sample from WD: $moonage = "Moon age: 10 days,10 hours,41 minutes,80%";	// current age of the moon (days since new moon)
// Sample from WD: $moonphase = "80%";	// Moon phase %
  $moonagedays = preg_replace('|^Moon age:\s+(\d+)\s.*$|is',"\$1",$moonage);
  if(!isset($moonphase) or $moonphase == '') { // MAC version of WD is missing this value
    preg_match_all('|(\d+)|is',$moonage,$matches);
    $moonphase  = $matches[1][3];
	if(isset($matches[1][4])) {
	  $moonphase .= '.' . $matches[1][4]; // pick up decimal;
	  $moonphase = round($moonphase,0);
	$moonphase .= '%';
  $moonphasename = moonphase($moonage);
} else { // perform non-WD moon stuff
	$mooninfo = cGetMoonInfo();  /* Note:  getMoonInfo() is located in common.php */
	print "<!-- cGetMoonInfo returns\n".print_r($mooninfo,true)." -->\n";
	if(!isset($moonphase)) {$moonphase = $mooninfo->ill.'%'; }
	if(!isset($newmoon))   {$newmoon   = $mooninfo->NMWD;    }
	if(!isset($nextnewmoon)) {$nextnewmoon = $mooninfo->Q4WD; } 
	if(!isset($firstquarter)) {$firstquarter = $mooninfo->Q1WD; }
	if(!isset($lastquarter)) {$lastquarter = $mooninfo->Q3WD; }
	if(!isset($fullmoon))    {$fullmoon = $mooninfo->FMWD; }
	if(!isset($moonphasename)) {$moonphasename = $mooninfo->phase;}
	if(!isset($moonagedays))  {$moonagedays = $mooninfo->pic; }
	if(!isset($moonage))      {$moonage = 'Moon age: '.$mooninfo->age.','.$mooninfo->ill.'%'; }
	$seasoninfo = cGetSeasonInfo(); /* Note: getSeasonInfo() is located in common.php */
	if(!isset($marchequinox) and isset($seasoninfo->spring)) {$marchequinox = $seasoninfo->spring; } 
	if(!isset($junesolstice) and isset($seasoninfo->summer)) {$junesolstice = $seasoninfo->summer; } 
	if(!isset($sepequinox) and isset($seasoninfo->fall))     {$sepequinox   = $seasoninfo->fall; } 
	if(!isset($decsolstice) and isset($seasoninfo->winter))  {$decsolstice  = $seasoninfo->winter; } 
    if(file_exists("get-USNO-sunmoon.php")) { 
      include_once("get-USNO-sunmoon.php");
	  $USNOdata = getUSNOsunmoon();
   }
   if(isset($USNOdata['sunrise']))                 {$sunrise =     $USNOdata['sunrise']; }  
   if(isset($USNOdata['sunrisedate']))             {$sunrisedate = $USNOdata['sunrisedate']; }  
   if(isset($USNOdata['sunset']))                  {$sunset =      $USNOdata['sunset']; }  
   if(isset($USNOdata['sunsetdate']))              {$sunsetdate =  $USNOdata['sunsetdate']; }  
   if(isset($USNOdata['moonrise']))                {$moonrise =    $USNOdata['moonrise']; }  
   if(isset($USNOdata['moonrisedate']))            {$moonrisedate= $USNOdata['moonrisedate']; }  
   if(isset($USNOdata['moonset']))                 {$moonset =     $USNOdata['moonset']; }  
   if(isset($USNOdata['moonsetdate']))             {$moonsetdate = $USNOdata['moonsetdate']; }  
   if(isset($USNOdata['moonphase']))               {$moonphasename = $USNOdata['moonphase']; }  
   if(isset($USNOdata['illumination']))            {$moonphase = $USNOdata['illumination']; }  
   if(isset($USNOdata['hoursofpossibledaylight'])) {$hoursofpossibledaylight = $USNOdata['hoursofpossibledaylight'];} 
 }  
<div align="center">
  <table width="99%" cellpadding="0" border="0" cellspacing="0">
  <tr>
    <td width="50%" align="center"><h3><?php langtrans('Sun&nbsp;'); ?></h3></td>
    <td width="50%" align="center"><h3><?php langtrans('Moon'); ?></h3></td>
  </tr>
  <tr>
    <td width="50%" align="center">
    <img src="<?php print $SITE['imagesDir']; ?>sunicon.jpg" width="104" height="72" alt="<?php langtrans('Sun'); ?>" style="border: 0;"/></td>
    <td width="50%" align="center">
    <?php if(file_exists('moonicon.gif')) { ?>
    <img src="moonicon.gif" width="104" height="72" 
	  alt="<?php print $moonage; ?>" title="<?php print $moonage; ?>"/></td>
     <?php } else { // ?>
    <img src="<?php echo $imagesDir . 'moon' . $moonagedays; ?>.gif" width="72" height="72"
	  alt="<?php print $moonage; ?>" title="<?php print $moonage; ?>"/></td>
     <?php } ?>
  </tr>
  <tr>
      <td width="50%" align="center"><?php langtrans('Sunrise'); ?>: <?php print adjustWDtime($sunrise); ?><br />
	  <?php langtrans('Sunset'); ?>: <?php print adjustWDtime($sunset); ?><br />
	  <?php langtrans('Daylight'); ?>: <?php print $hoursofpossibledaylight; ?></td>
      <td width="50%" align="center">
	  <?php langtrans('Moonrise'); ?>: <?php print adjustWDtime($moonrise);
	  if(isset($moonrisedate)) { print ' (' . adjustWDdate($moonrisedate) . ')';} ?><br />
	  <?php langtrans('Moonset'); ?>: <?php print adjustWDtime($moonset);
	  if(isset($moonsetdate)) { print ' (' . adjustWDdate($moonsetdate) . ')';} ?><br />
	  <?php echo langtrans($moonphasename); ?><br/>
	  <?php print $moonphase; ?> <?php langtrans('Illuminated'); ?></td>
  </tr>
</table>
</div>
<br /><br />
<div align="center">
  <table width="99%" cellpadding="0" border="0" cellspacing="0">
    <tr>
      <td width="25%" align="center"><?php langtrans('First Quarter Moon') ;?></td>
      <td width="25%" align="center"><?php langtrans('Full Moon'); ?></td>
      <td width="25%" align="center"><?php langtrans('Last Quarter Moon'); ?></td>
      <td width="25%" align="center"><?php langtrans('New Moon'); ?></td>
    </tr>
    <tr>
      <td align="center">
      <img src="<?php print $SITE['imagesDir']; ?>moon-firstquar.gif" width="100" height="100" 
	  alt="<?php langtrans('First Quarter Moon'); ?>"
	  title="<?php langtrans('First Quarter Moon'); ?>"/></td>
      <td align="center">
      <img src="<?php print $SITE['imagesDir']; ?>moon-fullmoon.gif" width="100" height="100" 
	  alt="<?php langtrans('Full Moon'); ?>"
	  title="<?php langtrans('Full Moon'); ?>"/></td>
      <td align="center">
      <img src="<?php print $SITE['imagesDir']; ?>moon-lastquar.gif" width="100" height="100" 
	  alt="<?php langtrans('Last Quarter Moon'); ?>"
	  title="<?php langtrans('Last Quarter Moon'); ?>"/></td>
      <td align="center">
      <img src="<?php print $SITE['imagesDir']; ?>moon-newmoon.gif" width="100" height="100" 
	  alt="<?php langtrans('New Moon'); ?>"
	  title="<?php langtrans('New Moon'); ?>"/></td>
    </tr>
	<?php $sourceMonths = $SITE['monthNames']; // from Settings.php file for WD month names ?>
    <tr>
      <td width="25%" align="center">
	  <?php echo get_localdate($firstquarter); ?><br/>
	  <small><?php echo get_utcdate($firstquarter); ?></small></td>
      <td width="25%" align="center">
	  <?php echo get_localdate($fullmoon); ?><br/>
	  <small><?php echo get_utcdate($fullmoon); ?></small></td>
      <td width="25%" align="center">
	  <?php echo get_localdate($lastquarter); ?><br/>
	  <small><?php echo get_utcdate($lastquarter); ?></small></td>
      <td width="25%" align="center">
	  <?php echo get_localdate($nextnewmoon); ?><br/>
	  <small><?php echo get_utcdate($nextnewmoon); ?></small></td>
    </tr>
  </table>
</div>
<br/><br/>
<div align="center">
<table width="99%" cellpadding="0" border="0" cellspacing="0">
    <tr>
      <td align="center"><?php langtrans('Vernal Equinox'); ?><br/>
	  <small><?php langtrans('Start of Spring'); ?></small></td>
      <td align="center"><?php langtrans('Summer Solstice'); ?><br/>
	  <small><?php langtrans('Start of Summer'); ?></small></td>
      <td align="center"><?php langtrans('Autumn Equinox'); ?>
	  <br/><small><?php langtrans('Start of Fall'); ?></small></td>
      <td align="center"><?php langtrans('Winter Solstice'); ?><br/>
	  <small><?php langtrans('Start of Winter'); ?></small></td>
    </tr>
    <tr>
      <td align="center">
      <img src="<?php print $SITE['imagesDir']; ?>earth-spring.jpg" width="125" height="125"
	   alt="<?php langtrans('Start of Spring'); ?>"
	   title="<?php langtrans('Start of Spring'); ?>"/></td>
      <td align="center">
<?php if($SITE['latitude'] >=0) { // Use Northern Summer ?>
      <img src="<?php print $SITE['imagesDir']; ?>earth-summer.jpg" width="125" height="125"
	<?php } else { // use Southern Summer image 
      <img src="<?php print $SITE['imagesDir']; ?>earth-winter.jpg" width="125" height="125" 
<?php } // end Northern Summer test ?>	
	   alt="First day of Summer"
	   title="First day of Summer"/></td>
      <td align="center">
      <img src="<?php print $SITE['imagesDir']; ?>earth-fall.jpg" width="125" height="125" 
	  alt="First day of Fall"
	  title="First day of Fall"/></td>
      <td align="center">
<?php if($SITE['latitude'] >=0) { // Use Northern Winter ?>
      <img src="<?php print $SITE['imagesDir']; ?>earth-winter.jpg" width="125" height="125" 
	<?php } else { // use Southern Winter image 
	 ?>
      <img src="<?php print $SITE['imagesDir']; ?>earth-summer.jpg" width="125" height="125"
<?php } // end Northern Winter test ?>	
	  alt="First day of Winter"
	  title="First day of Winter"/></td>
    </tr>
    <tr>
<?php if ($SITE['latitude'] >= 0) { // Use Northern Hemisphere dates with images?>
      <td align="center">
	  <?php echo get_localdate($marchequinox); ?><br/>
	  <small><?php echo get_utcdate($marchequinox); ?></small></td>
      <td align="center">
	  <?php echo get_localdate($junesolstice); ?><br/>
	  <small><?php echo get_utcdate($junesolstice); ?></small></td>
      <td align="center">
	  <?php echo get_localdate($sepequinox); ?><br/>
	  <small><?php echo get_utcdate($sepequinox); ?></small></td>
      <td align="center">
	  <?php echo get_localdate($decsolstice); ?><br/>
	  <small><?php echo get_utcdate($decsolstice); ?></small></td>
<?php } else { // Use Southern Hemisphere dates with images ?>
      <td align="center">
     <?php echo get_localdate($sepequinox); ?><br/>
	 <small><?php echo get_utcdate($sepequinox); ?></small></td>
      <td align="center">
     <?php echo get_localdate($decsolstice); ?><br/>
	 <small><?php echo get_utcdate($decsolstice); ?></small></td>
      <td align="center">
     <?php echo get_localdate($marchequinox); ?><br/>
	 <small><?php echo get_utcdate($marchequinox); ?></small></td>
      <td align="center">
     <?php echo get_localdate($junesolstice); ?><br/>
	 <small><?php echo get_utcdate($junesolstice); ?></small></td>
<?php } // end test for Hemisphere ?>
    </tr>
  </table>
<p>&nbsp;
<?php if(file_exists("moondetail1.gif")) { ?>
<img src="moondetail1.gif" alt="Moon Details from Weather-Display" style="border: white 1px solid" /><br/><br/>
<?php }
      if(file_exists("moondetail2.gif")) { ?>
<img src="moondetail2.gif" alt="Additional Moon facts from Weather-Display"  style="border: white 1px solid"/>
<?php } ?>
</p>
</div>
<?php } else { // show we need a weather station to be configured for this page
<p>&nbsp;</p>
<p>Note: Astronomy information not available since weather station not yet specified.</p>
<?php for ($i=0;$i<10;$i++) { print "<p>&nbsp;</p>\n"; } ?>
<?php } // end of no station configured ?>
</div><!-- end main-copy -->
<?php
############################################################################
include("footer.php");
############################################################################
# End of Page
############################################################################
# locally used functions
# routines adjusted to support World-ML template set
//=========================================================================
// decode WD %moonage% tag and return a text description for the moon phase name
// "Moon age: 10 days,10 hours,41 minutes,80%"
function moonphase ($WDmoonage) {
  preg_match_all('|(\d+)|is',$WDmoonage,$matches);
  print "<!-- WDmoonage='$WDmoonage' matches=\n" . print_r($matches,true) . "-->\n";
  $mdays = $matches[1][0];
  $mhours = $matches[1][1];
  $mmins = $matches[1][2];
  $mpct  = $matches[1][3];
  $mdaysd = $mdays + ($mhours / 24) + ($mmins / 1440);
  // Definitions from http://www.answers.com/topic/lunar-phase
  //  * Dark Moon - Not visible
  //  * New Moon - Not visible, or traditionally, the first visible crescent of the Moon
  //  * Waxing Crescent Moon - Right 1-49% visible
  //  * First Quarter Moon - Right 50% visible
  //  * Waxing gibbous Moon - Right 51-99% visible
  //  * Full Moon - Fully visible
  //  * Waning gibbous Moon - Left 51-99% visible
  //  * Third Quarter Moon - Left 50% visible
  //  * Waning Crescent Moon - Left 1-49% visible
  //  * New Moon - Not visible
  if ($mdaysd <= 29.53/2) { // increasing illumination
    $ph = "Waxing";
	$qtr = "First";
  } else { // decreasing illumination
    $ph = "Waning";
	$qtr = "Last";
  if ($mpct < 1 ) { return("New Moon"); }
  if ($mpct <= 49) { return("$ph Crescent"); }
  if ($mpct < 51) { return("$qtr Quarter"); }
  if ($mpct < 99) { return("$ph Gibbous"); }
	return("Full Moon");
# perform two-way translation on UTC String from WD  for astronomical dates
#  first, change from WD UTC date format (possibly in non-English) to English
#  second, change from English to targeted language (possibly leave in English)
function get_utcdate ( $indate ) {
  global $SITE, $sourceMonths;
  $EnglishMonths = array(
   'January','February','March','April','May','June',
   'July','August','September','October','November','December');
  $utcstr = substr($indate,10) . " " . substr($indate,0,9); // move formats
  if (isset($SITE['monthNames'])) {
    // convert TO English for strtotime()
    echo "<!-- before utcstr='$utcstr' -->\n";
	foreach ($EnglishMonths as $i => $monthEN) {
	   $utcstr = preg_replace('| '.$SITE['monthNames'][$i].' |i'," $monthEN ",$utcstr);
	}  
    echo "<!-- after utcstr='$utcstr' -->\n";
  } 
    $lclstr = $utcstr;
    if (isset($SITE['langMonths'])) {
    // convert From English for return (will only work if long-format month names in $timeFormat)  
    echo "<!-- before lclstr='$lclstr' -->\n";
	foreach ($EnglishMonths as $i => $monthEN) {
	   $lclstr = preg_replace('| '.$monthEN.' |i',' '.$SITE['langMonths'][$i].' ',$lclstr);
	}  
    echo "<!-- after lclstr='$lclstr' -->\n";
  return ($lclstr);
function get_localdate ( $indate) {
  global $SITE;
  $EnglishMonths = array(
   'January','February','March','April','May','June',
   'July','August','September','October','November','December');
// Change '02:33 UTC 4 September 2007' to
//        specified date by  
  $timeFormat = 'D, d-M-Y h:ia T';  // Fri, 31-Mar-2006 14:03 TZone
//  $timeFormat = 'h:ia T D, d-M-Y ';  // Fri, 31-Mar-2006 14:03 TZone
  if(isset($SITE['timeFormat'])) { $timeFormat = $SITE['timeFormat']; }
  $utcstr = substr($indate,10) . " " . substr($indate,0,9); // move formats
  echo "<!-- input utcstr='$utcstr' -->\n";
 // input dates are assumed to be in English only
 if (isset($SITE['monthNames'])) {
    // convert TO English for strtotime()
    echo "<!-- before utcstr='$utcstr' -->\n";
	foreach ($EnglishMonths as $i => $monthEN) {
	   $utcstr = preg_replace('| '.$SITE['monthNames'][$i].' |i'," $monthEN ",$utcstr);
	}  
    echo "<!-- after utcstr='$utcstr' -->\n";
  $utc = strtotime($utcstr);
  $lclstr = date($timeFormat,$utc);
  if (isset($SITE['langMonths'])) {
    // convert From English for return (will only work if long-format month names in $timeFormat)  
    echo "<!-- before lclstr='$lclstr' -->\n";
	foreach ($EnglishMonths as $i => $monthEN) {
	   $lclstr = preg_replace('| '.$monthEN.' |i',' '.$SITE['langMonths'][$i].' ',$lclstr);
	}  
    echo "<!-- after lclstr='$lclstr' -->\n";
  return ($lclstr);
//=========================================================================
// change the hh:mm AM/PM to h:mmam/pm format or format spec by $timeOnlyFormat
function adjustWDtime ( $WDtime ) {
  global $timeOnlyFormat,$DebugMode;
  if ($WDtime == "00:00: AM") { return ''; }
  $t = explode(':',$WDtime);
  if (preg_match('/pm/i',$WDtime)) { $t[0] = $t[0] + 12; }
  if ($t[0] > 23) {$t[0] = 12; }
  if (preg_match('/^12.*am/i',$WDtime)) { $t[0] = 0; }
  $t2 = join(':',$t); // put time back to gether;
  $t2 = preg_replace('/[^\d\:]/is','',$t2); // strip out the am/pm if any
  $r = date($timeOnlyFormat , strtotime($t2));
  if ($DebugMode) {
    $r = "<!-- adjustWDtime WDtime='$WDtime' t2='$t2' -->" . $r;
    $r = '<span style="color: green;">' . $r . '</span>'; 
  return ($r);
//=========================================================================
// adjust WD date to desired format
function adjustWDdate ($WDdate) {
  global $timeFormat,$timeOnlyFormat,$dateOnlyFormat,$WDdateMDY,$DebugMode;
  $d = explode('/',$WDdate);
  if(!isset($d[2])) {$d=explode("-",$WDdate); }
  if(!isset($d[2])) {$d=explode(".",$WDdate); }
  if ($d[2] > 70 and $d[2] <= 99) {$d[2] += 1900;} // 2 digit dates 70-99 are 1970-1999
  if ($d[2] < 99) {$d[2] += 2000; } // 2 digit dates (left) are assumed 20xx dates.
  if ($WDdateMDY) {
    $new = sprintf('%04d-%02d-%02d',$d[2],$d[0],$d[1]); //  M/D/YYYY -> YYYY-MM-DD
  } else {
    $new = sprintf('%04d-%02d-%02d',$d[2],$d[1],$d[0]); // D/M/YYYY -> YYYY-MM-DD
  $r = date($dateOnlyFormat,strtotime($new));
  if ($DebugMode) {
    $r = "<!-- adjustDate WDdate='$WDdate', WDdateUSA='$WDdateMDY' new='$new' -->" . $r;
    $r = '<span style="color: green;">' . $r . '</span>'; 
  return ($r);
?><?php
############################################################################
# A Project of TNET Services, Inc. and Saratoga-Weather.org (WD-World template set)
############################################################################
#   Project:    Sample Included Website Design
#   Module:     sample.php
#   Purpose:    Sample Page
#   Authors:    Kevin W. Reed <kreed@tnet.com>
#               TNET Services, Inc.
# 	Copyright:	(c) 1992-2007 Copyright TNET Services, Inc.
############################################################################
# This program is free software; you can redistribute it and/or
# modify it under the terms of the GNU General Public License
# as published by the Free Software Foundation; either version 2
# of the License, or (at your option) any later version.
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
# You should have received a copy of the GNU General Public License
# along with this program; if not, write to the Free Software
# Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA
############################################################################
#	This document uses Tab 4 Settings
############################################################################
require_once("Settings.php");
require_once("common.php");
############################################################################
$TITLE= $SITE['organ'] . " - Forecast";
$showGizmo = true;  // set to false to exclude the gizmo
include("top.php");
############################################################################
// testing parameters
$fcstby = isset($_REQUEST['fcstby'])?strtoupper($_REQUEST['fcstby']):'';
if ($fcstby == 'NWS') {
$SITE['fcstscript']		= 'advforecast2.php';  // USA-only NWS Forecast script
$SITE['fcstorg']		= 'NWS';    // set to 'NWS' for NOAA NWS
if ($fcstby == 'EC') {
$SITE['fcstscript']   = 'ec-forecast.php';    // Canada forecasts from Environment Canada
$SITE['fcstorg']		= 'EC';    // set to 'EC' for Environment Canada
if ($fcstby == 'WU') {
$SITE['fcstscript']	= 'WU-forecast.php';    // Non-USA, Non-Canada Wunderground Forecast Script
$SITE['fcstorg']		= 'WU';    // set to 'WU' for WeatherUnderground
if ($fcstby == 'WXSIM') {
$SITE['fcstscript']	= 'plaintext-parser.php';    // WXSIM forecast
$SITE['fcstorg']		= 'WXSIM';    // set to 'WXSIM' for WXSIM forecast
// end of special testing parms
</head>
<body>
<?php
############################################################################
include("header.php");
############################################################################
include("menubar.php");
############################################################################
<div id="main-copy">
         <?php 
		 $doIncludeNWS = true; // handle advforecast2.php include
		 $doIncludeWU  = true; // handle WU-forecast include also
		 $doInclude	   = true; // handle ec-forecast and WXSIM include also
		 $doPrint	   = true; //  ec-forecast.php setting
		 include_once($SITE['fcstscript']); ?>
</div><!-- end main-copy -->
<?php
############################################################################
include("footer.php");
############################################################################
# End of Page
############################################################################
?><?php
############################################################################
# A Project of TNET Services, Inc. and Saratoga-Weather.org (Canada/World-ML template set)
############################################################################
#   Project:    Sample Included Website Design
#   Module:     sample.php
#   Purpose:    Sample Page
#   Authors:    Kevin W. Reed <kreed@tnet.com>
#               TNET Services, Inc.
# 	Copyright:	(c) 1992-2007 Copyright TNET Services, Inc.
############################################################################
# This program is free software; you can redistribute it and/or
# modify it under the terms of the GNU General Public License
# as published by the Free Software Foundation; either version 2
# of the License, or (at your option) any later version.
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
# You should have received a copy of the GNU General Public License
# along with this program; if not, write to the Free Software
# Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA
############################################################################
#	This document uses Tab 4 Settings
############################################################################
//Version 1.01 - 9-Aug-2011 - added Meteohub support
//Version 1.02 - 24-Mar-2012 - added WeatherCat support
//Version 1.03 - 03-Jul-2012 - added wview support
//Version 1.04 - 16-Feb-2013 - added Cumulus solar/uv graph displays
require_once("Settings.php");
require_once("common.php");
############################################################################
$TITLE= $SITE['organ'] . " - " . langtransstr("Trend Graphs");
$showGizmo = true;  // set to false to exclude the gizmo
include("top.php");
############################################################################
</head>
<body>
<?php
############################################################################
include("header.php");
############################################################################
include("menubar.php");
############################################################################
$graphImageDir = './';
if(isset($SITE['graphImageDir'])) {$graphImageDir = $SITE['graphImageDir']; }
<div id="main-copy">
	<h1><?php langtrans('Weather Trend Graphs'); ?></h1>
    <?php if($SITE['WXsoftware'] <> '') { // have software defined ?> 
    <p><?php print langtrans('Graphs generated by')." ".$SITE['WXsoftwareLongName']." "; ?>
	<?php if(isset($wdversion)) {echo " (".$wdversion.")";} ?></p>
    <?php } else { // software not defined yet ?>
    <p>&nbsp;</p>
    <p>Weather software not specified in configuration.</p>
    <?php } // end software not defined yet ?>
    
<?php if($SITE['WXsoftware'] == 'WL') { // WeatherLink graph names ?>
    <h2><?php echo langtransstr('Temperature') . ' / ' . langtransstr('Humidity'); ?></h2>
	<?php genImageLink('OutsideTempHistory.gif','Temperature'); ?>
    <?php genImageLink('OutsideHumidityHistory.gif','Humidity'); ?>
    <br />
    <?php genImageLink('DewPointHistory.gif','Dew Point'); ?>
    <?php genImageLink('THWHistory.gif','THW Index'); ?>
    <br />
    <?php genImageLink('WindChillHistory.gif','Wind Chill'); ?>
    <?php genImageLink('HeatIndexHistory.gif','Heat Index'); ?>
    <br />
    <h2><?php echo langtransstr('Wind') . ' / ' . langtransstr('Barometer'); ?></h2>
    <?php genImageLink('WindSpeedHistory.gif','Wind Speed'); ?>
    <?php genImageLink('WindDirectionHistory.gif','Wind Direction'); ?>
    <br />
    <?php genImageLink('HiWindSpeedHistory.gif','High Wind Speed'); ?>
    <?php genImageLink('BarometerHistory.gif','Barometer'); ?>
    <br />
    <h2><?php langtrans('Rain'); ?></h2>
    <?php genImageLink('RainHistory.gif','Rain'); ?>
    <?php genImageLink('RainRateHistory.gif','Rain Rate'); ?>
    <br />
    <?php // figure out to display solar and/or UV based on site settings
	if($SITE['SOLAR'] and $SITE['UV']) { // have both sensors ?>
    <h2><?php echo langtransstr('Solar Radiation') . ' / ' . langtransstr('UV Index'); ?></h2>
    <?php genImageLink('SolarRadHistory.gif','Solar Radiation'); ?>
    <?php genImageLink('UVHistory.gif','UV Index'); ?>
    <?php } elseif ($SITE['SOLAR']) { ?>
     <h2><?php echo langtransstr('Solar Radiation'); ?></h2>
    <?php genImageLink('SolarRadHistory.gif','Solar Radiation'); ?>
    <?php } elseif ($SITE['UV']) { ?>
     <h2><?php echo langtransstr('UV Index'); ?></h2>
    <?php genImageLink('UVHistory.gif','UV Index'); ?>
    <?php } // end solar/uv selection ?>
    
<?php } // end WeatherLink graph names    ?>
<?php if($SITE['WXsoftware'] == 'VWS') { // VWS graph names ?>
     <h2><?php echo langtransstr('Temperature') . ' / ' . langtransstr('Humidity'); ?></h2>
    <?php genImageLink('vws742.jpg','Temperature'); ?>
    <?php genImageLink('vws740.jpg','Humidity'); ?>
    <br />
    <?php genImageLink('vws757.jpg','Dew Point'); ?>
    <?php genImageLink('vws2811.jpg','THW Index'); ?>
    <br />
    <?php genImageLink('vws754.jpg','Wind Chill'); ?>
    <?php genImageLink('vws756.jpg','Heat Index'); ?>
    <br />
    <h2><?php echo langtransstr('Wind') . ' / ' . langtransstr('Barometer'); ?></h2>
    <?php genImageLink('vws737.jpg','Wind Speed'); ?>
    <?php genImageLink('vws736.jpg','Wind Direction'); ?>
    <br />
    <?php genImageLink('vws1325.jpg','High Wind Speed'); ?>
    <?php genImageLink('vws758.jpg','Barometer'); ?>
    <br />
    <h2><?php langtrans('Rain'); ?></h2>
    <?php genImageLink('vws744.jpg','Rain'); ?>
    <?php genImageLink('vws859.jpg','Rain Rate'); ?>
    <br />
    <?php // figure out to display solar and/or UV based on site settings
	if($SITE['SOLAR'] and $SITE['UV']) { // have both sensors ?>
    <h2><?php echo langtransstr('Solar Radiation') . ' / ' . langtransstr('UV Index'); ?></h2>
    <?php genImageLink('vws753.jpg','Solar Radiation'); ?>
    <?php genImageLink('vws752.jpg','UV Index'); ?>
    <?php } elseif ($SITE['SOLAR']) { ?>
     <h2><?php echo langtransstr('Solar Radiation'); ?></h2>
    <?php genImageLink('vws753.jpg','Solar Radiation'); ?>
    <?php } elseif ($SITE['UV']) { ?>
     <h2><?php echo langtransstr('UV Index'); ?></h2>
    <?php genImageLink('vws752.jpg','UV Index'); ?>
    <?php } // end solar/uv selection ?>
<?php } // end VWS graph names    ?>
<?php if($SITE['WXsoftware'] == 'CU') { // Cumulus graph names ?>
   <h2><?php echo langtransstr('Temperature') . ' / ' . langtransstr('Humidity'); ?></h2>
  <?php genImageLink('temp.png','Temperature',620,248); ?>
  <br />
  <?php genImageLink('hum.png','Humidity',620,248); ?>
  <br />
  <h2><?php echo langtransstr('Wind') . ' / ' . langtransstr('Barometer'); ?></h2>
  <?php genImageLink('wind.png','Wind Speed',620,248); ?>
  <br />
  <?php genImageLink('windd.png','Wind Direction',620,248); ?>
  <br />
  <?php genImageLink('press.png','Barometer',620,248); ?>
  <br />
  <h2><?php langtrans('Rain'); ?></h2>
  <?php genImageLink('raint.png','Rain',620,248); ?>
  <br />
  <?php genImageLink('rain.png','Rain Rate',620,248); ?>
  <br />
  <?php // figure out to display solar and/or UV based on site settings
   if ($SITE['SOLAR']) { ?>
   <h2><?php echo langtransstr('Solar Radiation'); ?></h2>
  <?php genImageLink('solar.png','Solar Radiation',620,248); 
   } ?>
  <br />
  <?php if ($SITE['UV']) { ?>
   <h2><?php echo langtransstr('UV Index'); ?></h2>
  <?php genImageLink('uv.png','UV Index',620,248); ?>
  <?php } // end solar/uv selection ?>
  <?php if ($SITE['SOLAR']) { ?>
   <h2><?php echo langtransstr('Sunshine Hours'); ?></h2>
  <?php genImageLink('sunshine.png','Sunshine Hours',620,248); ?>
  <?php } // end solar/uv selection ?>
<?php } // end CU graph names    ?>
<?php if($SITE['WXsoftware'] == 'WD') { // Weather-Display graph names ?>
	<h1><?php langtrans('Last 24 Hours'); ?></h1> 
		<?php genImageLink('curr24hourgraph.gif','Last 24 hours',469,555); ?>
	<br /><br />
	<h1><?php langtrans('Last 72 Hours'); ?></h1> 
		<?php genImageLink('curr72hourgraph.gif','Last 72 hours',469,555); ?>
	<br /><br />
	<h1><?php langtrans('Month to Date'); ?></h1> 
		<?php genImageLink('monthtodate.gif','Month to Date',469,555); ?>
<?php } // end WD graph names    ?>
<?php if($SITE['WXsoftware'] == 'MH') { // Meteohub graph names ?>
	<h2><?php echo langtransstr('Temperature') . ' / ' . langtransstr('Dew Point'). ' / ' . langtransstr('Barometer'); ?></h2> 
		<?php genImageLink('tdpb2day.png','Last 48 hours',610,300); ?>
	<br /><br />
	<h2><?php echo langtransstr('Wind') . ' / ' . langtransstr('Rain'); ?></h2> 
		<?php genImageLink('windrain2day.png','Last 48 hours',610,300); ?>
    <?php if(isset($VPsolar) and isset($VPuv) and file_exists($graphImageDir.'soluv2day.png')) { ?>
			<br /><br />
	<h2><?php echo langtransstr('Solar') . ' / ' . langtransstr('UV Index'); ?></h2> 
		<?php genImageLink('soluv2day.png','Last 48 hours',610,300); ?>
    <?php } // solar/uv only if both have sensors present ?>
    <?php if(!isset($VPuv) and isset($VPsolar) and file_exists($graphImageDir.'solhi2day.png')) { ?>
			<br /><br />
	<h2><?php echo langtransstr('Solar') . ' / ' . langtransstr('Heat Index'); ?></h2> 
		<?php genImageLink('solhi2day.png','Last 48 hours',610,300); ?>
    <?php } // only Solar sensor present ?>
    <?php if(!isset($VPsolar) and isset($VPuv) and file_exists($graphImageDir.'uvhi2day.png')) { ?>
			<br /><br />
	<h2><?php echo langtransstr('UV Index') . ' / ' . langtransstr('Heat Index'); ?></h2> 
		<?php genImageLink('uvhi2day.png','Last 48 hours',610,300); ?>
    <?php } // only UV sensor present ?>
<?php } // end MH graph names    ?>
<?php if($SITE['WXsoftware'] == 'WCT') { // WeatherCat graph names
$WX['GRTEMPO'] = 'temperature1.jpg'; // Current outside temperature graph.
$WX['GRDEW'] = 'dewpoint1.jpg'; // Current dew point graph.
$WX['GRHUMO'] = 'rh1.jpg'; // Current outside humidity graph.
$WX['GRWINDCH'] = 'windchill1.jpg'; // Current wind chill graph.
$WX['GRHEATI'] = 'heatindex1.jpg'; // Current heat index graph.
$WX['GRSOLAR'] = 'solarrad1.jpg'; // Current solar radiation graph.
$WX['GRUV'] = 'uv1.jpg'; // Current U.V. graph. Note: There's no U.V. sensor on the station here.
$WX['GRWINDD'] = 'winddirection1.jpg'; // Current wind direction graph.
$WX['GRWINDS'] = 'windspeed1.jpg'; // Current wind speed graph.
$WX['GRPRESSURE'] = 'pressure1.jpg'; // Current barometric pressure graph.
$WX['GRCLOUDB'] = 'cloudbase1.jpg'; // Current calculated cloud base graph.
$WX['GRRAIN1'] = 'precipitation1.jpg'; // Current 1 hour rain rate graph.
$WX['GRRAIN24'] = 'precipitationc1.jpg'; // Current daily rain rate graph.
    <h2><?php echo langtransstr('Temperature') . ' / ' . langtransstr('Humidity'); ?></h2>
	<?php genImageLink($WX['GRTEMPO'],'Temperature'); ?>
    <?php genImageLink($WX['GRHUMO'],'Humidity'); ?>
    <br />
    <?php genImageLink($WX['GRWINDCH'],'Wind Chill'); ?>
    <?php genImageLink($WX['GRHEATI'],'Heat Index'); ?>
    <h2><?php echo langtransstr('Dew Point') . ' / ' . langtransstr('Barometer'); ?></h2>
    <?php genImageLink($WX['GRDEW'],'Dew Point'); ?>
    <?php genImageLink($WX['GRPRESSURE'],'Barometer'); ?>
    <br />
    <h2><?php echo langtransstr('Wind'); ?></h2>
    <?php genImageLink($WX['GRWINDS'],'Wind Speed'); ?>
    <?php genImageLink($WX['GRWINDD'],'Wind Direction'); ?>
    <br />
    <h2><?php langtrans('Rain'); ?></h2>
    <?php genImageLink($WX['GRRAIN24'],'Rain'); ?>
    <?php genImageLink($WX['GRRAIN1'],'Rain Rate'); ?>
    <br />
    <?php // figure out to display solar and/or UV based on site settings
	if($SITE['SOLAR'] and $SITE['UV']) { // have both sensors ?>
    <h2><?php echo langtransstr('Solar Radiation') . ' / ' . langtransstr('UV Index'); ?></h2>
    <?php genImageLink($WX['GRSOLAR'],'Solar Radiation'); ?>
    <?php genImageLink($WX['GRUV'],'UV Index'); ?>
    <?php } elseif ($SITE['SOLAR']) { ?>
     <h2><?php echo langtransstr('Solar Radiation'); ?></h2>
    <?php genImageLink($WX['GRSOLAR'],'Solar Radiation'); ?>
    <?php } elseif ($SITE['UV']) { ?>
     <h2><?php echo langtransstr('UV Index'); ?></h2>
    <?php genImageLink($WX['GRUV'],'UV Index'); ?>
    <?php } // end solar/uv selection ?>
    
<?php } // end WeatherCat graph names    ?>
<?php if($SITE['WXsoftware'] == 'WV') { // wview graph names
  $WVgraphDescs = array(
     'd' => 'Daily',
	 'w' => 'Weekly',
	 'm' => 'Monthly',
	 'y' => 'Yearly',
  );
  $WVgraphPeriods = array(
     'd' => '24h',
	 'w' => '7d',
	 'm' => '28d',
	 'y' => '365d',
  );
$WVgraphs = array(
# 24h graphs
'24h-temp' => 'tempdaycomp.png',
'24h-hc' => 'heatchillcomp.png',
'24h-hum' => 'humidday.png',
'24h-baro' => 'baromday.png',
'24h-rain' => 'rainday.png',
'24h-wdir' => 'wdirday.png',
'24h-wsp' => 'wspeeddaycomp.png',
'24h-rad' => 'radiationDay.png',
'24h-uv' => 'UVDay.png',
# 7d graphs
'7d-temp' => 'tempweekcomp.png',
'7d-hc' => 'heatchillweekcomp.png',
'7d-hum' => 'humidweek.png',
'7d-baro' => 'baromweek.png',
'7d-rain' => 'rainweek.png',
'7d-wdir' => 'wdirweek.png',
'7d-wsp' => 'wspeedweekcomp.png',
'7d-rad' => 'radiationWeek.png',
'7d-uv' => 'UVWeek.png',
# 28d graphs
'28d-temp' => 'tempmonthcomp.png',
'28d-hc' => 'heatchillmonthcomp.png',
'28d-hum' => 'humidmonth.png',
'28d-baro' => 'barommonth.png',
'28d-rain' => 'rainmonth.png',
'28d-wdir' => 'wdirmonth.png',
'28d-wsp' => 'wspeedmonthcomp.png',
'28d-rad' => 'radiationMonth.png',
'28d-uv' => 'UVMonth.png',
# 365d graphs
'365d-temp' => 'tempyear.png',
'365d-hum' => 'humidyear.png',
# http://192.168.189.133/weather/wchillyear.png',
# http://192.168.189.133/weather/hindexyear.png',
'365d-hc' => 'hindexyear.png',
'365d-baro' => 'baromyear.png',
'365d-rain' => 'rainyear.png',
# http://192.168.189.133/weather/dewyear.png',
'365d-wsp' => 'wspeedyear.png',
'365d-wdir' => 'wdiryear.png',
# http://192.168.189.133/weather/hiwspeedyear.png',
'365d-rad' => 'radiationYear.png',
'365d-uv' => 'UVYear.png',
$WVgraphIdx = 'w';  // default is 7-day set
$WVgraphName = $WVgraphDescs[$WVgraphIdx];
$WVgraphSet =  $WVgraphPeriods[$WVgraphIdx];
if(isset($_REQUEST['graph'])) { // check out selection
  $req = strtolower($_REQUEST['graph']);
  foreach ($WVgraphDescs as $i => $v) {
	  if ($req == $i) {
		$WVgraphIdx = $i;  // default is 7-day set
		$WVgraphName = $WVgraphDescs[$i];
		$WVgraphSet =  $WVgraphPeriods[$i];
		break;  
	  }
// generate the links for the available periods to display
print "<p style=\"text-align: center\">";
foreach ($WVgraphDescs as $i => $v) {
	if ($i == $WVgraphIdx) {
		print "<strong>".langtransstr($v)."</strong>&nbsp;&nbsp;";
	} else {
		print "<a href=\"?graph=$i\">".langtransstr($v)."</a>&nbsp;&nbsp;";
print "</p>\n";	
    <h2><?php echo langtransstr('Temperature') . ' - ' . langtransstr('Dew Point') . ' / ' . langtransstr('Wind Chill') . ' - ' .langtransstr('Heat Index'); ?></h2>
	<?php genImageLink($WVgraphs[$WVgraphSet."-temp"],'Temperature'); ?>
    <?php genImageLink($WVgraphs[$WVgraphSet."-hc"],'Wind Chill'); ?>
    <br />
    <h2><?php echo langtransstr('Humidity') . ' / ' . langtransstr('Barometer'); ?></h2>
    <?php genImageLink($WVgraphs[$WVgraphSet."-hum"],'Humidity'); ?>
    <?php genImageLink($WVgraphs[$WVgraphSet."-baro"],'Barometer'); ?>
    <br />
    <h2><?php echo langtransstr('Wind'); ?></h2>
    <?php genImageLink($WVgraphs[$WVgraphSet."-wsp"],'Wind Speed'); ?>
    <?php genImageLink($WVgraphs[$WVgraphSet."-wdir"],'Wind Direction'); ?>
    <br />
    <h2><?php langtrans('Rain'); ?></h2>
    <?php genImageLink($WVgraphs[$WVgraphSet."-rain"],'Rain'); ?>
    <br />
        <?php // figure out to display solar and/or UV based on site settings
	if($SITE['SOLAR'] and $SITE['UV']) { // have both sensors ?>
    <h2><?php echo langtransstr('Solar Radiation') . ' / ' . langtransstr('UV Index'); ?></h2>
    <?php genImageLink($WVgraphs[$WVgraphSet."-rad"],'Solar Radiation'); ?>
    <?php genImageLink($WVgraphs[$WVgraphSet."-uv"],'UV Index'); ?>
    <?php } elseif ($SITE['SOLAR']) { ?>
     <h2><?php echo langtransstr('Solar Radiation'); ?></h2>
    <?php genImageLink($WVgraphs[$WVgraphSet."-rad"],'Solar Radiation'); ?>
    <?php } elseif ($SITE['UV']) { ?>
     <h2><?php echo langtransstr('UV Index'); ?></h2>
    <?php genImageLink($WVgraphs[$WVgraphSet."-uv"],'UV Index'); ?>
    <?php } // end solar/uv selection ?>
    
<?php } // end wview graph names    ?>
</div><!-- end main-copy -->
<?php
#--------------------------------------------------------------------------
# function genImageLink
#--------------------------------------------------------------------------
function genImageLink ( $imagename, $alttext, $width=310, $height=200) {
	global $graphImageDir;
	if(!file_exists($graphImageDir.$imagename)) {
		print "$graphImageDir$imagename not found.";
	} else {
		print "<img src=\"$graphImageDir$imagename\" alt=\"$alttext\" width=\"$width\" height=\"$height\" />\n";
#--------------------------------------------------------------------------
# end genImageLink function
#--------------------------------------------------------------------------
############################################################################
include("footer.php");
############################################################################
# End of Page
############################################################################
?><?php
############################################################################
# A Project of TNET Services, Inc. and Saratoga-Weather.org (Canada/World-ML template set)
############################################################################
#   Project:    Sample Included Website Design
#   Module:     sample.php
#   Purpose:    Sample Page
#   Authors:    Kevin W. Reed <kreed@tnet.com>
#               TNET Services, Inc.
# 	Copyright:	(c) 1992-2007 Copyright TNET Services, Inc.
############################################################################
# This program is free software; you can redistribute it and/or
# modify it under the terms of the GNU General Public License
# as published by the Free Software Foundation; either version 2
# of the License, or (at your option) any later version.
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
# You should have received a copy of the GNU General Public License
# along with this program; if not, write to the Free Software
# Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA
############################################################################
#	This document uses Tab 4 Settings
############################################################################
require_once("Settings.php");
require_once("common.php");
############################################################################
$TITLE = langtransstr($SITE['organ']) . " - " .langtransstr('Home');
$showGizmo = true;  // set to false to exclude the gizmo
include("top.php");
############################################################################
</head>
<body>
<?php
############################################################################
include("header.php");
############################################################################
include("menubar.php");
############################################################################
<div id="main-copy">
<div class="column-dark">
	<img src="<?php echo $SITE['imagesDir']; ?>spacer.gif" alt="spacer"
	height="2" width="620" style="padding:0; margin:0; border: none" />
<div align="center">
<h1 align=center><?php langtrans('Real time data')?></h1>
<br>
	<div align="center">
	<?php if(isset($SITE['ajaxDashboard']) and file_exists($SITE['ajaxDashboard']))
	 { include_once("ajax-dashboard.php");
	   } else {
		print "<p>&nbsp;</p>\n";
		print "<p>&nbsp;</p>\n";
		print "<p>Note: ajax-dashboard not included since weather station not yet specified.</p>\n";
        for ($i=0;$i<10;$i++) { print "<p>&nbsp;</p>\n"; }
	}?>
	</div>
</div>
</div><!-- end column-dark -->
</div><!-- end main-copy -->
<?php
############################################################################
include("footer.php");
############################################################################
# End of Page
############################################################################
<?php
############################################################################
# A Project of TNET Services, Inc. and Saratoga-Weather.org (Canada/World template set)
############################################################################
#   Project:    Sample Included Website Design
#   Module:     sample.php
#   Purpose:    Sample Page
#   Authors:    Kevin W. Reed <kreed@tnet.com>
#               TNET Services, Inc.
# 	Copyright:	(c) 1992-2007 Copyright TNET Services, Inc.
############################################################################
# This program is free software; you can redistribute it and/or
# modify it under the terms of the GNU General Public License
# as published by the Free Software Foundation; either version 2
# of the License, or (at your option) any later version.
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
# You should have received a copy of the GNU General Public License
# along with this program; if not, write to the Free Software
# Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA
############################################################################
#	This document uses Tab 4 Settings
############################################################################
require_once("Settings.php");
require_once("common.php");
############################################################################
$TITLE = langtransstr($SITE['organ']) . " - " .langtransstr('Useful Links');
$showGizmo = true;  // set to false to exclude the gizmo
include("top.php");
############################################################################
</head>
<body>
<?php
############################################################################
include("header.php");
############################################################################
include("menubar.php");
############################################################################
<div id="main-copy">
	<h3><?php langtrans('Useful Links'); ?></h3> 
        <ul>
		  <li>  <a href="http://www.wxforum.net"
		    title="The Independent Weather Enthusiasts Forum">
			WXForum.net</a></li>
          <li>	<a href="http://www.wxqa.com/"
			title="CWOP">
			Citizen Weather Observer Program</a></li>
          <li>	<a href="http://www.wunderground.com/weatherstation/index.asp"
			title="Weather Underground">
			Weather Underground Personal Station Signup</a></li>
          <li>	<a href="http://www.hamweather.net/weatherstations/"
			title="WeatherForYou Signup">
			WeatherForYou Signup Page</a></li>
          <li>	<a href="http://www.anythingweather.com/contactjoinnetwork.aspx"
			title="AnythingWeather Signup Page">
			AnythingWeather Signup Page</a></li>
          <li>	<a href="http://www.awekas.at/en/index.php"
			title="AWEKAS Signup">
			AWEKAS Signup Page</a></li>
        </ul>
	<h3><?php langtrans('Weather Education'); ?></h3> 
        <ul>
          <li>	<a href="http://amsglossary.allenpress.com/glossary"
			title="Meterology Terms">
			Glossary of Meteorology</a></li>
          <li>	<a href="http://www.ofcm.gov/fmh-1/fmh1.htm"
			title="Handbook for US Meterology">
			Federal Meteorological Handbook No. 1</a></li>
          <li>	<a href="http://asd-www.larc.nasa.gov/SCOOL/tutorial/clouds/cloudtypes.html"
			title="Cool audio/visual guide">
			S'COOL Cloud Types Audio/Visual Tutorial</a></li>
          <li>	<a href="http://eo.ucar.edu/webweather/"
			title="Web Weather for Kids">
			Web Weather for Kids</a></li>
          <li>	<a href="http://www.education.noaa.gov"
			title="NOAA Education Resources">
			NOAA Education Resources</a></li>
          <li>	<a href="http://www.weather.gov/om/reachout/kidspage.shtml"
			title="NWS Weather Website for Kids">
			NWS Weather Website for Kids</a></li>
          <li>	<a href="http://www.usatoday.com/weather/resources/basics/wworks0.htm"
			title="Weather Basics">
			USA Today - Weather Basics</a></li>
        </ul>
	<h3><?php langtrans('Weather Station Info'); ?></h3> 
        <ul>
          <li>	<a href="http://mywebpages.comcast.net/dshelms/CWOP_Guide.pdf"
			title="CWOP Station Setup Guide">
			CWOP Station Setup Guide</a> (PDF)</li>
          <li>	<a href="http://sandaysoft.com/products/cumulus"
			title="Cumulus weather software">
			Cumulus Weather Station software</a></li>
          <li>	<a href="http://www.weather-display.com/"
			title="Weather Station Software">
			Weather-Display Weather Station Software</a></li>
          <li>	<a href="http://www.weather-watch.com/smf/"
			title="Weather-Display Weather Forums">
			Weather Watch Forums (Weather Display)</a></li>
         <li>	<a href="http://www.ambientweather.com/station.html"
			title="Install Guide">
			Ambient Weather: Station Reviews and Install Guide, Virtual Weather Station software</a></li>
          <li>	<a href="http://www.davisnet.com/weather/index.asp"
			title="Davis Instruments">
			Davis Instruments Weather stations, WeatherLink software</a></li>
          <li>	<a href="http://www.lacrossetechnology.com/"
			title="La Crosse Technology">
			La Crosse Technology</a></li>
          <li>	<a href="http://www2.oregonscientific.com/catalog/subcategory.asp?c=2&amp;s=4"
			title="Oregon Scientific">
			Oregon Scientific</a></li>
        </ul>
	<h3><?php langtrans('Weather Website PHP Scripts'); ?></h3>
		<ul>
		   <li> <a href="http://www.carterlake.org/weatherphp.php">Carterlake.org Scripts</a></li>
		   <li> <a href="http://www.jcweather.us/scripts.php">Jcweather.us Scripts</a></li>
		   <li> <a href="http://www.642weather.com/weather/scripts.php">Long Beach Weather Scripts</a></li>
		   <li> <a href="http://saratoga-weather.org/scripts.php">Saratoga-Weather.org Scripts</a></li>
		   <li> <a href="http://www.tnetweather.com/scripts.php">TNETWeather.com Scripts</a></li>
		 </ul>
</div><!-- end main-copy -->
<?php
############################################################################
include("footer.php");
############################################################################
# End of Page
############################################################################
?><?php
############################################################################
# A Project of TNET Services, Inc. and Saratoga-Weather.org (WD-USA template set)
############################################################################
#   Project:    Sample Included Website Design
#   Module:     sample.php
#   Purpose:    Sample Page
#   Authors:    Kevin W. Reed <kreed@tnet.com>
#               TNET Services, Inc.
#         Copyright:        (c) 1992-2007 Copyright TNET Services, Inc.
############################################################################
# This program is free software; you can redistribute it and/or
# modify it under the terms of the GNU General Public License
# as published by the Free Software Foundation; either version 2
# of the License, or (at your option) any later version.
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
# You should have received a copy of the GNU General Public License
# along with this program; if not, write to the Free Software
# Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA
############################################################################
#        This document uses Tab 4 Settings
############################################################################
require_once("Settings.php");
require_once("common.php");
############################################################################
$TITLE= $SITE['organ'] . " - Weather Display Live";
$showGizmo = true;  // set to false to exclude the gizmo
include("top.php");
############################################################################
<!-- mchallis begin added for WDL or MML-->
<script type="text/javascript" src="swfobject.js"></script>
<script type="text/javascript" src="wdl-mml-forcesize.js"></script>
<style type="text/css" media="screen">
  html, body, #page, #main-copy, #flashcontent {
    height:100%;
</style>
<!-- mchallis end added for WDL or MML -->
</head>
<body>
<?php
############################################################################
include("header.php");
############################################################################
include("menubar.php");
############################################################################
<!--
Note: Do not add any html content to this portion of this page!
<div id="main-copy">
<h3>Weather Display Live</h3>
<!--
Note: If you add or remove any html content in this portion of this page,
you will need to adjust the settings for the swf below:
var BelowDivPadding, and var PageHeightPadding will have to be set to a higher number(add)
or lower number(remove),
otherwise your swf will overflow the bounds of where it is supposed to be positioned.
<b>What is Weather Display Live?</b><br />
Weather Display Live is an add-on Flash movie for Weather Display which allows you to view live
weather data over the web from your weatherstation in nearly real time.
This Weather Display weather station data is updated every 5 minutes.
</p>
Find out more about Weather Display Live (WDL) ...
<a href="http://www.weather-display.com/wdlive.php" title="Add WDL to your website," target="_blank">Add WDL to your website</a>
</p>
<!--
Note: Do not add any html content below this portion of this page!
or your swf will overflow the bounds of where it is supposed to be positioned.
<!-- http://www.weather-display.com-->
<!-- Weather Display Live for Weather Display, the Weather Software for Weather Stations -->
<div id="flashcontent">
<noscript>Javascript must be enabled to view the live content.</noscript>
<br />
<br />
You need to install v8, or greater, of Flash Player from
<a href="http://www.adobe.com">Adobe</a> to view this live content.
</div>
<script type="text/javascript">
// This version is customm tailored for the Weather Display/PHP/AJAX Website Template set WDL or MML page
// http://saratoga-weather.org/template/
// This is a custom version by Mike Challis
// http://www.642weather.com/weather/scripts.php
// This version is compatible with valid doc type xhtml while allowing dynamic resize
// the SWF while resizing the window in Firefox or IE
// The alternative to this method is to set the swf width and height to static settings
// Swf width and height can be set to 100% but then it will not work correctly in
// firefox when a xhtml doc type is used
// This version requires the files swfobject.js and wdl-mml-forcesize.js to be
// located in the same folder on your web server as this page
// also, the script and style html is REQUIRED to be inside the head  /head container on this page
//  This method assumes that the swf 'flashcontent' div is inside a 'main-copy' div that is inside a 'page' div
//  as is standard for the Weather Display/PHP/AJAX Website Template set wdl page or mml page
//  or it will not work! If you delete one of these divs, or add an extra div inside these divs it will break
//  the correct display of the swf!
// #######################
// # Begin settings
// #######################
// # # # # # #
// # Two mandatory settings:
   // # You must enter the correct URL to your WDL or MML xml settings
var pathToConfig = "http://saratoga-weather.org/wdlconfig5.01.xml";
   // # you must set to your WDL or MML swf file name
   // # (note: this name will change every time you upgrade the version)
var swfFileName = "wdlv5_03.swf";
// # # # # # #
// # Optional settings:
   // set to minimum width size your swf can resize to,
   // usually leave this as is, SWFForceSize resizes it dynamically
var MinWidth = "610";
   // set to minimum height size your swf can resize to,
   // usually leave this as is, SWFForceSize resizes it dynamically
var MinHeight = "470";
   // set to maximum width size your swf can resize to,
   // usually leave this as is, SWFForceSize resizes it dynamically
var MaxWidth = 900;
   // Width to Height Ratio  Ie: 0.75 makes Width of 800 have Height of 600
var Ratio = 0.75;
   // If you want to add a little html content above WDL increase this pixel value,
   // otherwise the swf may overflow your footer (do not add quotes to the value!)
var BelowDivPadding = 200; // usually set to 100 or 200, unless you have a very long side menu, then higher
  // If you want to add a little html content above WDL increase this pixel value,
   // otherwise the swf may overflow your footer (do not add quotes to the value!)
var PageHeightPadding = 300; // usually set to 300, unless you have a very long side menu, then higher
   // Background color white is fine, unless you really want to change it
var backgroundColourOfSWF = "#ffffff"; // #ffffff is white
// #######################
// # End settings
// #######################
var so = new SWFObject(swfFileName+"?"+pathToConfig, swfFileName, MinWidth, MinHeight, "8", backgroundColourOfSWF);
so.addParam("quality", "high");
so.addParam("wmode", "opaque"); // needed for the flyout menu to float on top, instead of behind
so.addParam('salign', 'lt');           // align left top
if( so.write('flashcontent') ) {
    var forcesize = new SWFForceSize( so, MinWidth, MaxWidth, Ratio, BelowDivPadding, PageHeightPadding );
</script>
<!--
Note: Do not add any html content to this portion of this page!
</div><!-- end main-copy -->
<?php
############################################################################
include("footer.php");
############################################################################
# End of Page
############################################################################
?><?php
############################################################################
# A Project of TNET Services, Inc. and Saratoga-Weather.org (Canada/World-ML template set)
############################################################################
#   Project:    Sample Included Website Design
#   Module:     sample.php
#   Purpose:    Sample Page
#   Authors:    Kevin W. Reed <kreed@tnet.com>
#               TNET Services, Inc.
# 	Copyright:	(c) 1992-2007 Copyright TNET Services, Inc.
############################################################################
# This program is free software; you can redistribute it and/or
# modify it under the terms of the GNU General Public License
# as published by the Free Software Foundation; either version 2
# of the License, or (at your option) any later version.
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
# You should have received a copy of the GNU General Public License
# along with this program; if not, write to the Free Software
# Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA
############################################################################
#	This document uses Tab 4 Settings
############################################################################
# Version 1.00 - 17-Nov-2011 - initial release
# Version 1.01 - 27-Nov-2011 - display 'Distance to station' mods
require_once("Settings.php");
require_once("common.php");
############################################################################
$TITLE = langtransstr($SITE['organ']) . " - " .langtransstr('Nearby METAR Reports');
$showGizmo = true;  // set to false to exclude the gizmo
include("top.php");
############################################################################
<style type="text/css">
.bidi {
	unicode-bidi: embed;
</style>
</head>
<body>
<?php
############################################################################
include("header.php");
############################################################################
include("menubar.php");
############################################################################
<div id="main-copy">
	<h1><?php langtrans('Nearby METAR Reports'); ?></h1>
    <p>&nbsp;</p>
<?php
// Customize this list with your nearby METARs by
// using http://saratoga-weather.org/wxtemplates/find-metar.php to create the list below
$MetarList = array( // set this list to your local METARs 
 // Metar(ICAO) | Name of station | dist-mi | dist-km | direction |
  'LIQW|Sarzana||||', // lat=37.3667,long=-121.9167, elev=24, dated=30-SEP-11
  'LIRP|Pisa||||', // lat=37.4000,long=-122.0500, elev=12, dated=30-SEP-11
  'LIRQ|Firenze||||', // lat=37.4667,long=-122.1167, elev=2, dated=30-SEP-11
//  'KRHV|San Jose/Reid, California, USA|12|19|ENE|', // lat=37.3167,long=-121.8167, elev=41, dated=30-SEP-11
//  'KOAK|Oakland, California, USA|31|50|NNW|', // lat=37.7000,long=-122.2167, elev=26, dated=30-SEP-11
//  'KSQL|San Carlos Airpo, California, USA|21|34|NW|', // lat=37.5167,long=-122.2500, elev=1, dated=30-SEP-11
//  'KSFO|San Francisco, California, USA|30|49|NW|', // lat=37.6167,long=-122.3667, elev=3, dated=30-SEP-11
//  'KE16|San Martin, California, USA|27|43|ESE|', // lat=37.0833,long=-121.6000, elev=86, dated=30-SEP-11
//  'KWVI|Watsonville, California, USA|27|44|SSE|', // lat=36.9333,long=-121.7833, elev=43, dated=30-SEP-11
//  'KHAF|Half Moon Bay, California, USA|31|50|WNW|', // lat=37.5167,long=-122.5000, elev=21, dated=30-SEP-11
//  'KHWD|Hayward, California, USA|28|44|N|', // lat=37.6667,long=-122.1167, elev=21, dated=30-SEP-11
//  'KLVK|Livermore, California, USA|31|51|NNE|', // lat=37.7000,long=-121.8167, elev=117, dated=30-SEP-11
// list generated Sun, 27-Nov-2011 9:01pm PST at http://saratoga-weather.org/wxtemplates/find-metar.php
$maxAge = 75*60; // max age for metar in seconds = 75 minutes
// end of customizations
# Note: you do not need to change the below settings .. your current values from Settings.php
# will be applied and replace what you change below.
$condIconDir = './ajax-images/';  // directory for ajax-images with trailing slash
$condIconType = '.jpg'; // default type='.jpg' -- use '.gif' for animated icons from http://www.meteotreviglio.com/
$uomTemp = '&deg;F';
$uomBaro = ' inHg';
$uomWind = ' mph';
$uomRain = ' in';
// optional settings for the Wind Rose graphic in ajaxwindiconwr as wrName . winddir . wrType
$wrName   = 'wr-';       // first part of the graphic filename (followed by winddir to complete it)
$wrType   = '.png';      // extension of the graphic filename
$wrHeight = '58';        // windrose graphic height=
$wrWidth  = '58';        // windrose graphic width=
$wrCalm   = 'wr-calm.png';  // set to full name of graphic for calm display ('wr-calm.gif')
$Lang = 'en'; // default language used (for Windrose display)
<?php
  if(file_exists("include-metar-display.php")) {
	  include_once("include-metar-display.php");
  } else {
	  print "<p>Sorry.. include-metar-display.php not found</p>\n";
    
</div><!-- end main-copy -->
<?php
############################################################################
include("footer.php");
############################################################################
# End of Page
############################################################################
<?php
############################################################################
# A Project of TNET Services, Inc. and Saratoga-Weather.org (Canada/World-ML template set)
############################################################################
#   Project:    Sample Included Website Design
#   Module:     sample.php
#   Purpose:    Sample Page
#   Authors:    Kevin W. Reed <kreed@tnet.com>
#               TNET Services, Inc.
# 	Copyright:	(c) 1992-2007 Copyright TNET Services, Inc.
############################################################################
# This program is free software; you can redistribute it and/or
# modify it under the terms of the GNU General Public License
# as published by the Free Software Foundation; either version 2
# of the License, or (at your option) any later version.
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
# You should have received a copy of the GNU General Public License
# along with this program; if not, write to the Free Software
# Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA
############################################################################
#	This document uses Tab 4 Settings
############################################################################
require_once("Settings.php");
require_once("common.php");
############################################################################
$TITLE = langtransstr($SITE['organ']) . " - " .langtransstr('Sample Blank Page');
$showGizmo = true;  // set to false to exclude the gizmo
include("top.php");
############################################################################
</head>
<body>
<?php
############################################################################
include("header.php");
############################################################################
include("menubar.php");
############################################################################
<div id="main-copy">
	<h1><?php langtrans('Sample Blank Page'); ?></h1>
    
    <p>This is a sample page</p>
    <p>Copy it to a new name and use as the base for a new page on your site.</p>
    
</div><!-- end main-copy -->
<?php
############################################################################
include("footer.php");
############################################################################
# End of Page
############################################################################
?><?php
############################################################################
# A Project of TNET Services, Inc. and Saratoga-Weather.org (World-ML template set)
############################################################################
#   Project:    Sample Included Website Design
#   Module:     sample.php
#   Purpose:    Sample Page
#   Authors:    Kevin W. Reed <kreed@tnet.com>
#               TNET Services, Inc.
# 	Copyright:	(c) 1992-2007 Copyright TNET Services, Inc.
############################################################################
# This program is free software; you can redistribute it and/or
# modify it under the terms of the GNU General Public License
# as published by the Free Software Foundation; either version 2
# of the License, or (at your option) any later version.
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
# You should have received a copy of the GNU General Public License
# along with this program; if not, write to the Free Software
# Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA
############################################################################
#	This document uses Tab 4 Settings
############################################################################
// Version 1.01 - 08-Sep-2012 - initial release with quake-json.php script
// Version 1.02 - 12-Sep-2012 - added translation for Google Map controls
// Version 1.03 - 23-May-2013 - removed USGS maps (no longer available), added 'home' pin
// Version 1.04 - 24-May-2013 - fixed HTML error in attribution
require_once("Settings.php");
require_once("common.php");
############################################################################
$TITLE= langtransstr($SITE['organ']) . " - " . langtransstr("Earthquakes");
$showGizmo = true;  // set to false to exclude the gizmo
include("top.php");
############################################################################
<style type="text/css">
.quake {
  width: 620px;
#map-container {
  padding: 5px;
  border-width: 1px;
  border-style: solid;
  border-color: #ccc #ccc #999 #ccc;
  -webkit-box-shadow: rgba(64, 64, 64, 0.5) 0 2px 5px;
  -moz-box-shadow: rgba(64, 64, 64, 0.5) 0 2px 5px;
  box-shadow: rgba(64, 64, 64, 0.1) 0 2px 5px;
  width: 620px;
  display: none;
#map {
  width: 620px;
  height: 480px;
#actions {
  list-style: none;
  padding: 0;
#inline-actions {
  padding-top: 10px;
.item {
  margin-left: 20px;
</style>
<?php
$lang = $SITE['lang'];
if(isset($SITE['ISOLang'][$lang])) { $lang = $SITE['ISOLang'][$lang]; }
    <script src="http://maps.google.com/maps/api/js?sensor=false&amp;language=<?php echo $lang; ?>" type="text/javascript"></script>
    <script src="quake-json.js" type="text/javascript"></script>
</head>
<body>
<?php
############################################################################
include("header.php");
############################################################################
include("menubar.php");
############################################################################
<div id="main-copy">
 <div align="center">
  <?php 
  $doIncludeQuake = true;
# uncomment ONE of the $setDistanceDisplay lines to use as template for distance displays  
#  $setDistanceDisplay = 'mi (km)';
  $setDistanceDisplay = 'mi';
#  $setDistanceDisplay = 'km (mi)';
#  $setDistanceDisplay = 'km';
  $setDistanceRadius  = 200;  // same units as first unit in $setDistanceDisplay
# NOTE: quakes of magnitude 1.0+ are available for USA locations only.
#    non-USA location earthquakes of magnitude 4.0+ are the only ones available from the USGS
  $setMinMagnitude = '4.0';  // minimum Richter Magnitude to display
  $setHighMagnitude = '5.0';  // highlight this Magnitude and greater
  $setMapZoomDefault = 7;    // default zoom for Google Map 1=world to 13=street
# script will use your $SITE[] values for latitude, longitude, cityname, timezone and time display format
# but you can override them if you with with the commented statements below:
#  $setLatitude  = 37.27153397;    //North=positive, South=negative decimal degrees
#  $setLongitude = -122.02274323;   //East=positive, West=negative decimal degrees
# The above settings are for saratoga-weather.org location
#  $setLocationName = 'Saratoga, CA'; // city/town name for lat/long above 
#  $setTimeZone = "America/Los_Angeles";  //NOTE: this *MUST* be set correctly to
# translate UTC times to your LOCAL time for the displays.
# Use http://www.php.net/manual/en/timezones.php to find the timezone suitable for
#  your location.
#  pick a format for the time to display ..uncomment one (or make your own)
# $setTimeFormat = 'D, Y-m-d H:i:s T';  // Fri, 2006-03-31 14:03:22 TZone
#  $setTimeFormat = 'D, d-M-Y H:i:s T';  // Fri, 31-Mar-2006 14:03:22 TZone
  $setDoLinkTarget = 1;   // =1 to have links open in new page, =0 for XHTML 1.0-Strict
  include_once("quake-json.php");
  ?>
  <p style="text-align: center"><?php langtrans('Map and data courtesy of');?> 
  <a href="http://earthquake.usgs.gov/earthquakes/map/"><?php langtrans('United States Geological Survey');?></a>.</p>
 </div>
</div><!-- end main-copy -->
<?php
############################################################################
include("footer.php");
############################################################################
# End of Page
############################################################################
?><?php
############################################################################
# A Project of TNET Services, Inc. and Saratoga-Weather.org (Canada/World-ML template set)
############################################################################
#   Project:    Sample Included Website Design
#   Module:     sample.php
#   Purpose:    Sample Page
#   Authors:    Kevin W. Reed <kreed@tnet.com>
#               TNET Services, Inc.
# 	Copyright:	(c) 1992-2007 Copyright TNET Services, Inc.
############################################################################
# This program is free software; you can redistribute it and/or
# modify it under the terms of the GNU General Public License
# as published by the Free Software Foundation; either version 2
# of the License, or (at your option) any later version.
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
# You should have received a copy of the GNU General Public License
# along with this program; if not, write to the Free Software
# Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA
############################################################################
#	This document uses Tab 4 Settings
############################################################################
require_once("Settings.php");
require_once("common.php");
############################################################################
$TITLE = langtransstr($SITE['organ']) . " - " .langtransstr('Earthquakes');
$showGizmo = true;  // set to false to exclude the gizmo
include("top.php");
############################################################################
</head>
<body>
<?php
############################################################################
include("header.php");
############################################################################
include("menubar.php");
############################################################################
<div id="main-copy">
 <div align="center">
  <?php 
  $doIncludeQuake = true;
  include_once("quake-UK.php");
  ?>
 <p style="align: center"><a href="http://www.earthquakes.bgs.ac.uk/"><img src="http://www.earthquakes.bgs.ac.uk/uk.jpg.0" alt="Recent Earthquake Events"
  width="338" height="520" style="border: none;"/></a></p>
 </div>
</div><!-- end main-copy -->
<?php
############################################################################
include("footer.php");
############################################################################
# End of Page
############################################################################
?><?php
############################################################################
# A Project of TNET Services, Inc. and Saratoga-Weather.org (Canada/World-ML template set)
############################################################################
#   Project:    Sample Included Website Design
#   Module:     sample.php
#   Purpose:    Sample Page
#   Authors:    Kevin W. Reed <kreed@tnet.com>
#               TNET Services, Inc.
# 	Copyright:	(c) 1992-2007 Copyright TNET Services, Inc.
############################################################################
# This program is free software; you can redistribute it and/or
# modify it under the terms of the GNU General Public License
# as published by the Free Software Foundation; either version 2
# of the License, or (at your option) any later version.
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
# You should have received a copy of the GNU General Public License
# along with this program; if not, write to the Free Software
# Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA
############################################################################
#	This document uses Tab 4 Settings
############################################################################
require_once("Settings.php");
require_once("common.php");
############################################################################
$TITLE = langtransstr($SITE['organ']) . " - " .langtransstr('Radar');
$showGizmo = true;  // set to false to exclude the gizmo
include("top.php");
############################################################################
</head>
<body>
<?php
############################################################################
include("header.php");
############################################################################
include("menubar.php");
############################################################################
<div id="main-copy">
	  <h3 class="title"><?php langtrans('National Radar'); ?></h3> 
<!--    
	/* modificato MASSI
	collegamento a immagine radar satellite
	/* http://www.protezionecivile.gov.it/images/rete_radar/VMI/VMI.JPEG*/
-->      
<!--<p align=center><IMG SRC="http://en.sat24.com/image?type=forecastTemp&region=europa"></p>-->
	<p align=center><IMG SRC="http://api.sat24.com/animated/TU/visual/3/GTB%20Standard%20Time/8334810"></p>
</div><!-- end main-copy -->
<?php
############################################################################
include("footer.php");
############################################################################
# End of Page
############################################################################
?><?php
############################################################################
# A Project of TNET Services, Inc. and Saratoga-Weather.org (Canada/World-ML template set)
############################################################################
#   Project:    Sample Included Website Design
#   Module:     sample.php
#   Purpose:    Sample Page
#   Authors:    Kevin W. Reed <kreed@tnet.com>
#               TNET Services, Inc.
# 	Copyright:	(c) 1992-2007 Copyright TNET Services, Inc.
############################################################################
# This program is free software; you can redistribute it and/or
# modify it under the terms of the GNU General Public License
# as published by the Free Software Foundation; either version 2
# of the License, or (at your option) any later version.
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
# You should have received a copy of the GNU General Public License
# along with this program; if not, write to the Free Software
# Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA
############################################################################
#	This document uses Tab 4 Settings
############################################################################
require_once("Settings.php");
require_once("common.php");
############################################################################
$TITLE = langtransstr($SITE['organ']) . " - " .langtransstr('WXSIM Forecast');
$showGizmo = true;  // set to false to exclude the gizmo
include("top.php");
############################################################################
</head>
<body>
<?php
############################################################################
include("header.php");
############################################################################
include("menubar.php");
############################################################################
<div id="main-copy">
         <?php 
		 if($SITE['WXSIM']) {
		   $doInclude	   = true; // handle ec-forecast and WXSIM include also
		   $showIconsMax = 8;
		   include_once($SITE['WXSIMscript']);
		 } else {
		   print "<p>".langtransstr('WXSIM Forecast is not available').".</p>\n";
		 } ?>
</div><!-- end main-copy -->
<?php
############################################################################
include("footer.php");
############################################################################
# End of Page
############################################################################
?><?php
############################################################################
# A Project of TNET Services, Inc. and Saratoga-Weather.org (Canada/World-ML template set)
############################################################################
#   Project:    Sample Included Website Design
#   Module:     sample.php
#   Purpose:    Sample Page
#   Authors:    Kevin W. Reed <kreed@tnet.com>
#               TNET Services, Inc.
# 	Copyright:	(c) 1992-2007 Copyright TNET Services, Inc.
############################################################################
# This program is free software; you can redistribute it and/or
# modify it under the terms of the GNU General Public License
# as published by the Free Software Foundation; either version 2
# of the License, or (at your option) any later version.
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
# You should have received a copy of the GNU General Public License
# along with this program; if not, write to the Free Software
# Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA
############################################################################
#	This document uses Tab 4 Settings
############################################################################
require_once("Settings.php");
require_once("common.php");
############################################################################
$TITLE = langtransstr($SITE['organ']) . " - " .langtransstr("Website Map");
$showGizmo = true;  // set to false to exclude the gizmo
include("top.php");
############################################################################
</head>
<body>
<?php
############################################################################
include("header.php");
############################################################################
include("menubar.php");
############################################################################
<div id="main-copy">
	<h1><?php langtrans('Website Map'); ?></h1>
    
    <?php if(isset($SITE['flyoutmenu']) and $SITE['flyoutmenu']) {
	     print $FlyoutMenuText;
	     } else {
		 fixup_trans($html); // from Menubar
		 }
    <p>&nbsp;</p>
</div><!-- end main-copy -->
<?php
############################################################################
include("footer.php");
############################################################################
# End of Page
############################################################################
// generate navigation links script - Ken True - webmaster@saratoga-weather.org
function fixup_trans($html) {
 preg_match('|<ul>(.*)</ul>|is', $html, $betweenspan); // find the navigation div
 $rawlinks  = $betweenspan[1]; 
 // Chop up each link and place in array 
 preg_match_all("/<li.*>(.*)<\/li>/Uis", $rawlinks, $betweenspan);  
 $links = $betweenspan[1]; 
 $ourPage = $_SERVER['PHP_SELF'];
 $doDebug = false;
 echo "<!-- this page='$ourPage' -->\n";
 if (isset($_REQUEST['page']) ) { // support testing
   $ourPage = $_REQUEST['page'];
   echo "<!-- using page='$ourPage' as test -->\n";
   $doDebug = true;
 if (isset($_REQUEST['debug']) ) { // support testing
   $doDebug = true;
  $t = pathinfo($ourPage); // extract base filename from link
  if ($doDebug) {print "<!-- pathinfo\n" . print_r($t,true) . "-->\n"; }
  $ourPage = $t['basename'];
// Now generate the code 
 print "<!-- navigation links from menubar.php -->\n";
 print "<ul>\n";
 foreach ($links as $i => $link) {
   if (preg_match('|<a.*href="([^"]+)"[^>]*>(.*)</a>|i',$link,$matches) ) {
	   if($doDebug) {  print "<!-- Matches for i=$i '$link': \n" . print_r($matches,true) . "-->\n"; }
	 //Matches: Array
	 //(
	 //   [0] => <a href="index.php" title="Current Conditions/Home">Home</a>
	 //   [1] => index.php
	 //   [2] => Home
	 //)
	    $t = langtransstr($matches[2]);
		print "<li>" . str_replace($matches[2],$t,$matches[0]) . "</li>\n";
    } else { // must be just text
      print "<li>" . $link . "</li>\n";
    } // end if has an <a href=
 print "</ul>\n<!-- end of navigation links from menubar.php -->\n";
 } // end of gen_navlinks function
?><?php
############################################################################
# A Project of TNET Services, Inc. and Saratoga-Weather.org (Canada/World-ML template set)
############################################################################
#   Project:    Sample Included Website Design
#   Module:     sample.php
#   Purpose:    Sample Page
#   Authors:    Kevin W. Reed <kreed@tnet.com>
#               TNET Services, Inc.
# 	Copyright:	(c) 1992-2007 Copyright TNET Services, Inc.
############################################################################
# This program is free software; you can redistribute it and/or
# modify it under the terms of the GNU General Public License
# as published by the Free Software Foundation; either version 2
# of the License, or (at your option) any later version.
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
# You should have received a copy of the GNU General Public License
# along with this program; if not, write to the Free Software
# Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA
############################################################################
#	This document uses Tab 4 Settings
############################################################################
require_once("Settings.php");
require_once("common.php");
############################################################################
$TITLE = langtransstr($SITE['organ']) . " - " .langtransstr('Sample Blank Page');
$showGizmo = true;  // set to false to exclude the gizmo
include("top.php");
############################################################################
</head>
<body>
<?php
############################################################################
include("header.php");
############################################################################
include("menubar.php");
############################################################################
<div id="main-copy">
	<h1 align=center><?php langtrans('Situazione meteo Real Time'); ?></h1>
<p align=center>
    
<iframe scrolling="no" width="650" height="650" frameborder="no" src=""></iframe>
 </p>       
</div><!-- end main-copy -->
<?php
############################################################################
include("footer.php");
############################################################################
# End of Page
############################################################################
?><?php
############################################################################
# A Project of TNET Services, Inc. and Saratoga-Weather.org (Canada/World-ML template set)
############################################################################
#   Project:    Sample Included Website Design
#   Module:     sample.php
#   Purpose:    Sample Page
#   Authors:    Kevin W. Reed <kreed@tnet.com>
#               TNET Services, Inc.
# 	Copyright:	(c) 1992-2007 Copyright TNET Services, Inc.
############################################################################
# This program is free software; you can redistribute it and/or
# modify it under the terms of the GNU General Public License
# as published by the Free Software Foundation; either version 2
# of the License, or (at your option) any later version.
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
# You should have received a copy of the GNU General Public License
# along with this program; if not, write to the Free Software
# Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA
############################################################################
#	This document uses Tab 4 Settings
############################################################################
//Version 1.00 - 05-Feb-2013 - initial release
//Version 1.01 - 09-Feb-2013 - added default HTML if missing gauges-ss-basic-inc.php file.
require_once("Settings.php");
require_once("common.php");
############################################################################
$useHTML5 = true;  // force this page to use HTML5 instead of XHTML 1.0-Transitional
$useUTF8 = true;   // force this page to convert language files to UTF8 for display
$TITLE = langtransstr($SITE['organ']) . " - " .langtransstr('Current Weather Gauges');
$showGizmo = true;  // set to false to exclude the gizmo
include("top.php");
############################################################################
# Required setting:
$ssgDir = './ssg/'; // set to relative directory location of the SteelSeries gauge directory
# Note: the Steel Series Gauges are available from http://wiki.sandaysoft.com/a/SteelSeries_Gauges
# and must be installed in the subdirectory listed above and the scripts/gauges.js
# file configured for your weather software and location of the required
# data file (weather software specific).  The gauges-ss-basic-inc.php file is distributed
# by Mark with the SteelSeries distribution and should be in the $ssgDir directory.
############################################################################
  <link rel="stylesheet" href="<?php echo $ssgDir;?>css/gauges-ss.css">
</head>
<body>
<?php
############################################################################
include("header.php");
############################################################################
include("menubar.php");
<div id="main-copy">
   <h2><?php langtrans('Current Weather Gauges'); ?></h2>
   <p>&nbsp;</p>
<?php 
   if(! file_exists($ssgDir."gauges-ss-basic-inc.php")) {
	  print "<!-- Steel Series Gauges template (gauges-ss-basic-inc.php) not found in $ssgDir.  ".
	  "Using default HTML for gauges. -->\n";
	  gen_default_html($ssgDir);
	   
   } else {
	include_once($ssgDir."gauges-ss-basic-inc.php"); 
   }
	$ssLanguages = array(
	// available languages for the Steel Series Gauges by Mark Crossley
	// from the LANG.ll= entries in $ssGdir scripts/language.min.js file
	  'en' => 'EN', // english
	  'fr' => 'FR', // french
	  'de' => 'DE', // german
	  'nl' => 'NL', // dutch
	  'se' => 'SE', // swedish
	  'dk' => 'DK', // danish
	  'fi' => 'FI', // finnish (Suomi)
	  'no' => 'NO', // norwegian
	  'it' => 'IT', // italian
	  'es' => 'ES', // spanish
	  'ct' => 'CT', // catalan
	  'el' => 'GR', // greek
	); 
	if(isset($ssLanguages[$SITE['lang']])) {
	   $toLang = $ssLanguages[$SITE['lang']];
	} else {
	   $toLang = 'EN';
	   print "<p><small><strong>Note:</strong> no lang='".$SITE['lang']."' (".ucfirst($SITE['WULanguages'][$SITE['lang']]).")  language translation is available.  English is used for gauge legends instead.</small></p>\n";
	   print "<script type=\"text/javascript\">
	   changeLang(LANG.$toLang);  // change SteelSeries language\n</script>\n";
</div><!-- end main-copy -->
<?php
############################################################################
include("footer.php");
############################################################################
# End of Page
############################################################################
function gen_default_html ($ssgDir) {
print '<!-- default HTML is being used -->
  <noscript>
    <h2 style="color:red; text-align:center">&gt;&gt;This pages requires JavaScript enabling in your browser.&lt;&lt;<br>&gt;&gt;Please enable scripting it to enjoy this site at its best.&lt;&lt;</h2>
  </noscript>
  <div class="row">
    <canvas id="canvas_led" width="25" height="25"></canvas>&nbsp;&nbsp;&nbsp;
    <canvas id="canvas_status" width="350" height="25"></canvas>&nbsp;&nbsp;
    <canvas id="canvas_timer" width="50" height="25"></canvas>
  </div>
  <div class="row">
    <div class="gauge">
      <div id="tip_0">
        <canvas id="canvas_temp" width="221" height="221"></canvas>
      </div>
      <input id="rad_temp1" type="radio" name="rad_temp" value="out" checked onclick="gauges.doTemp(this);"><label id="lab_temp1" for="rad_temp1">Outside</label>
      <input id="rad_temp2" type="radio" name="rad_temp" value="in" onclick="gauges.doTemp(this);"><label id="lab_temp2" for="rad_temp2">Inside</label>
    </div>
    <div class="gauge">
      <div id="tip_1">
        <canvas id="canvas_dew" width="221" height="221"></canvas>
      </div>
      <input id="rad_dew1" type="radio" name="rad_dew" value="dew" onclick="gauges.doDew(this);"><label id="lab_dew1" for="rad_dew1">Dew Point</label>
      <input id="rad_dew2" type="radio" name="rad_dew" value="app" checked onclick="gauges.doDew(this);"><label id="lab_dew2" for="rad_dew2">Apparent</label>
      <br>
      <input id="rad_dew3" type="radio" name="rad_dew" value="wnd" onclick="gauges.doDew(this);"><label id="lab_dew3" for="rad_dew3">Wind Chill</label>
      <input id="rad_dew4" type="radio" name="rad_dew" value="hea" onclick="gauges.doDew(this);"><label id="lab_dew4" for="rad_dew4">Heat Index</label>
      <br>
      <input id="rad_dew5" type="radio" name="rad_dew" value="hum" onclick="gauges.doDew(this);"><label id="lab_dew5" for="rad_dew5">Humidex</label>
    </div>
    <div class="gauge">
      <div id="tip_4">
        <canvas id="canvas_hum" width="221" height="221"></canvas>
      </div>
      <input id="rad_hum1" type="radio" name="rad_hum" value="out" checked onclick="gauges.doHum(this);"><label id="lab_hum1" for="rad_hum1">Outside</label>
      <input id="rad_hum2" type="radio" name="rad_hum" value="in" onclick="gauges.doHum(this);"><label id="lab_hum2" for="rad_hum2">Inside</label>
    </div>
  </div>
  <div class="row">
    <div id="tip_6" class="gauge">
      <canvas id="canvas_wind" width="221" height="221"></canvas>
    </div>
    <div id="tip_7" class="gauge">
      <canvas id="canvas_dir" width="221" height="221"></canvas>
    </div>
    <div id="tip_10" class="gauge">
      <canvas id="canvas_rose" width="221" height="221"></canvas>
    </div>
  </div>
  <div class="row">
    <div id="tip_5" class="gauge">
      <canvas id="canvas_baro" width="221" height="221"></canvas>
    </div>
    <div id="tip_2" class="gauge">
      <canvas id="canvas_rain" width="221" height="221"></canvas>
    </div>
    <div id="tip_3" class="gauge">
      <canvas id="canvas_rrate" width="221" height="221"></canvas>
    </div>
  </div>
  <div class="row">
    <div id="tip_8" class="gauge">
      <canvas id="canvas_uv" width="221" height="221"></canvas>
    </div>
    <div id="tip_9" class="gauge">
      <canvas id="canvas_solar" width="221" height="221"></canvas>
    </div>
  </div>
  <div class="unitsTable">
    <div style="display:table-row">
      <div id="temperature" class="cellRight">
        <span id="lang_temperature">Temperature</span>:
      </div>
      <div style="display:table-cell">
        <input id="rad_unitsTemp1" type="radio" name="rad_unitsTemp" value="C" checked onclick="gauges.setUnits(this);"><label id="lab_unitsTemp1" for="rad_unitsTemp1">&deg;C</label>
      </div>
      <div style="display:table-cell">
        <input id="rad_unitsTemp2" type="radio" name="rad_unitsTemp" value="F" onclick="gauges.setUnits(this);"><label id="lab_unitsTemp2" for="rad_unitsTemp2">&deg;F</label>
      </div>
    </div>
    <div style="display:table-row">
      <div id ="rainfall" class="cellRight">
        <span id="lang_rainfall">Rainfall</span>:
      </div>
      <div style="display:table-cell">
        <input id="rad_unitsRain1" type="radio" name="rad_unitsRain" value="mm" checked onclick="gauges.setUnits(this);"><label id="lab_unitsRain1" for="rad_unitsRain1">mm</label>
      </div>
      <div style="display:table-cell">
        <input id="rad_unitsRain2" type="radio" name="rad_unitsRain" value="in" onclick="gauges.setUnits(this);"><label id="lab_unitsRain2" for="rad_unitsRain2">Inch</label>
      </div>
    </div>
    <div style="display:table-row">
      <div id="pressure" class="cellRight">
        <span id="lang_pressure">Pressure</span>:
      </div>
      <div style="display:table-cell">
        <input id="rad_unitsPress1" type="radio" name="rad_unitsPress" value="hPa" checked onclick="gauges.setUnits(this);"><label id="lab_unitsPress1" for="rad_unitsPress1">hPa</label>
      </div>
      <div style="display:table-cell">
        <input id="rad_unitsPress2" type="radio" name="rad_unitsPress" value="inHg" onclick="gauges.setUnits(this);"><label id="lab_unitsPress2" for="rad_unitsPress2">inHg</label>
      </div>
      <div style="display:table-cell">
        <input id="rad_unitsPress3" type="radio" name="rad_unitsPress" value="mb" onclick="gauges.setUnits(this);"><label id="lab_unitsPress3" for="rad_unitsPress3">mb</label>
      </div>
      <div style="display:table-cell">
        <input id="rad_unitsPress4" type="radio" name="rad_unitsPress" value="kPa" onclick="gauges.setUnits(this);"><label id="lab_unitsPress4" for="rad_unitsPress4">kPa</label>
      </div>
    </div>
    <div style="display:table-row">
      <div id="wind" class="cellRight">
        <span id="lang_windSpeed">Wind Speed</span>:
      </div>
      <div style="display:table-cell">
        <input id="rad_unitsWind4" type="radio" name="rad_unitsWind" value="km/h" checked onclick="gauges.setUnits(this);"><label id="lab_unitsWind4" for="rad_unitsWind4">km/h</label>
      </div>
      <div style="display:table-cell">
        <input id="rad_unitsWind3" type="radio" name="rad_unitsWind" value="m/s" onclick="gauges.setUnits(this);"><label id="lab_unitsWind3" for="rad_unitsWind3">m/s</label>
      </div>
      <div style="display:table-cell">
        <input id="rad_unitsWind1" type="radio" name="rad_unitsWind" value="mph" onclick="gauges.setUnits(this);"><label id="lab_unitsWind1" for="rad_unitsWind1">mph</label>
      </div>
      <div style="display:table-cell">
        <input id="rad_unitsWind2" type="radio" name="rad_unitsWind" value="kts" onclick="gauges.setUnits(this);"><label id="lab_unitsWind2" for="rad_unitsWind2">knots</label>
      </div>
    </div>
  </div>
  <!-- Credits -->
  <div class="credits" style="padding: 0px 10px 10px 10px; text-align: left">
    <hr>
    Scripts by Mark Crossley - version <span id="scriptVer"></span><br>
    Gauges drawn using Gerrit Grunwald\'s <a href="http://harmoniccode.blogspot.com" target="_blank">SteelSeries</a> <a href="https://github.com/HanSolo/SteelSeries-Canvas">JavaScript library</a>
    <span id="rgraph_attrib"><br>Wind Rose drawn using <a href="http://www.rgraph.net/">RGraph</a></span>
    <br>
    powered by <span id="programName"></span> v<span id="programVersion"></span> (b<span id="programBuild"></span>)
  </div><!-- Credits -->
  <!-- Included Scripts -->
  <!-- Google CDN hosted JQuery library -->
  <script src="https://ajax.googleapis.com/ajax/libs/jquery/1.8.2/jquery.min.js"></script>
  <!-- or... -->
  <!-- Local JQuery library, do not use if your containing page already pulls in a copy of JQuery -->
  <!-- <script src="scripts/jquery-1.8.2.min.js"></script> -->
  <!-- Combined steelseries.js & tween.js -->
  <script src="'.$ssgDir.'scripts/steelseries_tween.min.js"></script>
  <!-- Once you have customised this scripts to your requirements you should minimise
       and concatenate them into a single file in the same order  as below -->
  <script src="'.$ssgDir.'scripts/language.min.js"></script>
  <script src="'.$ssgDir.'scripts/gauges.js"></script>
  <!--Optional Wind Rose scripts -->
  <script src="'.$ssgDir.'scripts/windrose.js"></script>
  <script src="'.$ssgDir.'scripts/RGraph.common.core.min.js"></script>
  <script src="'.$ssgDir.'scripts/RGraph.radar.min.js"></script>
return;
?><?php
############################################################################
# A Project of TNET Services, Inc. and Saratoga-Weather.org (WD-USA template set)
############################################################################
#   Project:    Sample Included Website Design
#   Module:     sample.php
#   Purpose:    Sample Page
#   Authors:    Kevin W. Reed <kreed@tnet.com>
#               TNET Services, Inc.
# 	Copyright:	(c) 1992-2007 Copyright TNET Services, Inc.
############################################################################
# This program is free software; you can redistribute it and/or
# modify it under the terms of the GNU General Public License
# as published by the Free Software Foundation; either version 2
# of the License, or (at your option) any later version.
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
# You should have received a copy of the GNU General Public License
# along with this program; if not, write to the Free Software
# Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA
############################################################################
#	This document uses Tab 4 Settings
############################################################################
//Version - 1.01 - 17-Feb-2011 - fixed date issue with ##-##-#### dates and deprecated use of split()
//Version - 1.02 - 11-Jun-2011 - fixed NOAA report check for WL and VWS
//Version - 1.03 - 07-Aug-2011 - added support for Meteohub 
//Version - 1.04 - 17-Nov-2011 - added translation capability to status
//Version - 1.05 - 20-Nov-2011 - corrected check for WD clientraw.txt realtime file
//Version - 1.06 - 21-Nov-2011 - standard checks moved to include-wxstatus.php, custom checks should be added to this page
require_once("Settings.php");
require_once("common.php");
############################################################################
$TITLE= $SITE['organ'] . " - " . langtransstr("Station Status");
$showGizmo = true;  // set to false to exclude the gizmo
include("top.php");
############################################################################
</head>
<body>
<?php
############################################################################
include("header.php");
############################################################################
include("menubar.php");
############################################################################
<div id="main-copy">
 <h1><?php langtrans('Weather Station Status'); ?></h1>
  <?php
    if(isset($SITE['WXsoftware']) and $SITE['WXsoftware'] <> '' ) {
	include_once($SITE['WXtags']);
	global $SITE;
  ?>
   <p><?php 
   langtransstr('This page shows the current status of the weather software used in the operation of this website.'); ?>
   <br/><br/>
   <?php if(isset($windowsuptime)) { ?>
  <?php langtrans('Station system up for'); ?> <b><?php print $windowsuptime; ?></b><br/>
  <?php } // end $windowsuptime ?>
   <?php if(isset($freememory)) { ?>
   <?php langtrans('Station system free memory'); ?> <b><?php print $freememory; ?></b><br/>
  <?php } // end $freememory ?>
   <?php langtrans('This website uses'); ?> <b><?php echo $SITE['WXsoftwareLongName'];?> 
  <?php if(isset($wdversion)) {echo " (".$wdversion.")";} ?></b> <?php langtrans('for weather conditions reporting') ?>.<br/>  
  <?php if(isset($Startimedate)) { langtrans("It was last started"); echo " <b>$Startimedate</b>."; } ?><br/></p>
  <table width="620" border="0" cellspacing="6" cellpadding="3" style="border-collapse:collapse">
    <tr>
      <th style="width: 40%" scope="col"><?php langtrans('Component'); ?></th>
      <th style="width: 15%" scope="col" align="center"><?php langtrans('Status'); ?></th>
      <th style="width: 10%" scope="col" align="right"><?php langtrans('Age'); ?><br />h:m:s</th>
      <th style="width: 35%" scope="col" align="right"><?php langtrans('Latest update time as of'); ?><br/> <?php print date($SITE['timeFormat'],time()); ?></th>
    </tr>
<?php 
// insert standard checks for software
  if(file_exists('include-wxstatus.php')) {
	  include_once('include-wxstatus.php');
  } else {
	  print "<tr><td colspan=\"4\" align=\"center\">";
	  print "Note: include-wxstatus.php not found .. no checks done.";
	  print "</td></tr>\n";
############################################################################
# Add your custom checks below using the commented examples
# the do_check function has four arguments:
#   do_check($text,$target,$maxtime,$checktype);
# where:
#   $text is the text to display on the page.. always a good idea to run it
#        through langtransstr($text) for multilanguage support
#   $target is the item to be checked .. type of item is determined by $checktype
#     $target = relative file location/name if $checktype = 'file'
#     $target = unix timestamp (like from time() ) if $checktyp = 'application'
#   $maxtime is number of SECONDS expected between updates .. always allow a cushion
#        (extra time) to allow for delays in updates via FTP
#   $checktype defaults to 'file' type, use 'application' for timestamp checking from
#         applications.
############################################################################
// example check for 'file' update time
        $tDir = './';
		if(file_exists($tDir.'somefile.ext')) {
           do_check(langtransstr("Some File"),$tDir.'somefile.ext',10*60+15,'file');
        }
// example check for 'application' update time (this WXSIM check is already in wxstatus.php)
		if(isset($SITE['WXSIM']) and file_exists('plaintext.txt')) {
	       $doPrint = false;
		   include_once($SITE['WXSIMscript']);
		   print "<!-- wdate='$wdate' -->\n";
		   $lastWXSIM = strtotime($wdate);
		   // note: '6*60*60 + 2*60' is 6:02:00 hms
           do_check(langtransstr("WXSIM forecast"),$lastWXSIM,6*60*60 + 2*60,'application');
        }
############################################################################
# start of custom checks (put your custom checks below)		
# end of custom checks
############################################################################
  </table>
  <?php } else { // software not defined yet ?>
  <p>&nbsp;</p>
  <p>Weather Software not yet specified .. no status to report.</p>
  <p>&nbsp;</p>
  <p>&nbsp;</p>
  <p>&nbsp;</p>
  <?php } // end software not defined ?>
</div><!-- end main-copy -->
<?php
############################################################################
include("footer.php");
############################################################################
# End of Page
############################################################################
?><?php
############################################################################
# A Project of TNET Services, Inc. and Saratoga-Weather.org (Canada/World-ML template set)
############################################################################
#   Project:    Sample Included Website Design
#   Module:     sample.php
#   Purpose:    Sample Page
#   Authors:    Kevin W. Reed <kreed@tnet.com>
#               TNET Services, Inc.
# 	Copyright:	(c) 1992-2007 Copyright TNET Services, Inc.
############################################################################
# This program is free software; you can redistribute it and/or
# modify it under the terms of the GNU General Public License
# as published by the Free Software Foundation; either version 2
# of the License, or (at your option) any later version.
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
# You should have received a copy of the GNU General Public License
# along with this program; if not, write to the Free Software
# Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA
############################################################################
#	This document uses Tab 4 Settings
############################################################################
require_once("Settings.php");
require_once("common.php");
############################################################################
$TITLE= langtransstr($SITE['organ']) . " - ". langtransstr('Daily Statistics');;
$showGizmo = true;  // set to false to exclude the gizmo
include("top.php");
############################################################################
</head>
<body>
<?php
############################################################################
include("header.php");
############################################################################
include("menubar.php");
############################################################################
<div id="main-copy">
   <?php if(isset($SITE['trendsPage']) and file_exists($SITE['trendsPage'])) {
	   include_once($SITE['trendsPage']);
   } else { 
		print "<p>&nbsp;</p>\n";
		print "<p>&nbsp;</p>\n";
		print "<p>Note: trends not available since weather station not yet specified.</p>\n";
        for ($i=0;$i<10;$i++) {
			print "<p>&nbsp;</p>\n"; 
        }
   }?>     
</div><!-- end main-copy -->
<?php
############################################################################
include("footer.php");
############################################################################
# End of Page
############################################################################
?><?php
############################################################################
# A Project of TNET Services, Inc. and Saratoga-Weather.org (Canada/World-ML template sets)
############################################################################
#   Project:    Sample Included Website Design
#   Module:     sample.php
#   Purpose:    Sample Page
#   Authors:    Kevin W. Reed <kreed@tnet.com>
#               TNET Services, Inc.
# 	Copyright:	(c) 1992-2007 Copyright TNET Services, Inc.
############################################################################
# This program is free software; you can redistribute it and/or
# modify it under the terms of the GNU General Public License
# as published by the Free Software Foundation; either version 2
# of the License, or (at your option) any later version.
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
# You should have received a copy of the GNU General Public License
# along with this program; if not, write to the Free Software
# Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA
############################################################################
#	This document uses Tab 4 Settings
############################################################################
# Version 1.01 - 31-Mar-2012 - day-of-week fix for get-UV-forecast-inc.php V1.07
require_once("Settings.php");
require_once("common.php");
############################################################################
$TITLE= $SITE['organ'] . " - ". langtransstr('UV Index Forecast');
$showGizmo = true;  // set to false to exclude the gizmo
include("top.php");
############################################################################
</head>
<body>
<?php
############################################################################
include("header.php");
############################################################################
include("menubar.php");
############################################################################
$UVscript		= 'get-UV-forecast-inc.php'; // worldwide forecast script for UV Index
$ourTZ = "PST8PDT";  
$maxIcons = 7;  // maximum number of icons to display
// overrides from Settings.php if available
global $SITE;
if (isset($SITE['tz'])) 		{$ourTZ = $SITE['tz'];}
if (isset($SITE['UVscript'])) 	{$UVscript = $SITE['UVscript'];}
// end of overrides from Settings.php if available 
/*if (isset($UVscript) and ! isset($UVfcstDate[0])) { // load up the UV forecast script
  $UVfcstDate = array_fill(0,9,'');   // initialize the return arrays
  $UVfcstUVI  = array();
  include_once($UVscript);
  $maxIcons = min($maxIcons,count($UVfcstUVI));  // use lesser of number of icons available
# Set timezone in PHP5/PHP4 manner
  if (!function_exists('date_default_timezone_set')) {
	  if (! ini_get('safe_mode') ) {
		 putenv("TZ=$ourTZ");  // set our timezone for 'as of' date on file
	  }  
    } else {
	date_default_timezone_set("$ourTZ");
   }
<div id="main-copy">
  <!-- wxuvforecast.php (ML) V1.01 - 06-Oct-2009 -->
  <h1><?php langtrans('UV Index Forecast'); ?></h1>
  <p>&nbsp;</p>
  <div align="center">
  <?php if($UVfcstUVI[0] == "n/a") {
   ?>
  <h2><?php langtrans('The UV Index Forecast is not currently available'); ?></h2>
   <?php } else { ?>
      <table width="620" style="border: none" cellspacing="3" cellpadding="3">
         <tr class="column-dark">
          <?php for ($i=0;$i < $maxIcons;$i++) {  ?>
          <td align="center"><?php langtrans(date('D',strtotime($UVfcstYMD[$i]))); ?></td>
          <?php } // end for
		  ?>
        </tr>
        <tr class="column-light">
          <?php for ($i=0;$i < $maxIcons;$i++) {  ?>
          <td align="center"><?php echo gen_uv_icon($UVfcstUVI[$i]); ?></td>
          <?php } // end for
		  ?>
        </tr>
        <tr class="column-dark">
          <?php for ($i=0;$i < $maxIcons;$i++) {  ?>
          <td align="center"><strong><?php echo $UVfcstUVI[$i]; ?></strong></td>
          <?php } // end for
		  ?>
        </tr>
        <tr class="column-light">
          <?php for ($i=0;$i < $maxIcons;$i++) {  ?>
          <td align="center"><?php echo get_uv_word(round($UVfcstUVI[$i],0)); ?></td>
          <?php } // end for
		  ?>
        </tr>
      </table>
    <p>
    <a href="<?php echo htmlspecialchars($UV_URL); ?>"><small>
	<?php langtrans(
		'UV forecast courtesy of and Copyright &copy; KNMI/ESA (http://www.temis.nl/). Used with permission.'); ?>
     </small></a>
    </p>
    <img src="<?php print $SITE['imagesDir']; ?>uv_image.jpg" alt="UV Index Legend" style="border: none" /><br />
    <img src="<?php print $SITE['imagesDir']; ?>UVI_maplegend_H.gif" alt="UV Index Scale" style="border: none" />
    <?php } ?>
  </div> 
</div><!-- end main-copy -->
<?php 
function gen_uv_icon($inUV) {
	global $SITE;
	if($inUV == 'n/a') { return( ''); }
	$uv = preg_replace('|,|','.',$inUV);
	$ourUVrounded = round($uv,0);
	if ($ourUVrounded > 11) {$ourUVrounded = 11; }
	if ($ourUVrounded < 1 ) {$ourUVrounded = 1; }
	$ourUVicon = "uv" . sprintf("%02d",$ourUVrounded) . ".gif";
	return( '<img src="'.$SITE['imagesDir']. $ourUVicon . 
	  '" height="76" width="40"  alt="UV Index" title="UV Index" />');
//=========================================================================
//  decode UV to word+color for display
function get_uv_word ( $inUV ) {
	global $SITE;
// figure out a text value and color for UV exposure text
//  0 to 2  Low
//  3 to 5     Moderate
//  6 to 7     High
//  8 to 10 Very High
//  11+     Extreme
   $uv = preg_replace('|,|','.',$inUV);
   switch (TRUE) {
	 case ($uv == 'n/a'):
	   $uv = '';
	 break;
     case ($uv == 0):
       $uv = langtransstr('None');
     break;
     case (($uv > 0) and ($uv < 3)):
       $uv = '<span style="border: solid 1px; background-color: #A4CE6a;">&nbsp;'.langtransstr('Low').'&nbsp;</span>';
     break;
     case (($uv >= 3) and ($uv < 6)):
       $uv = '<span style="border: solid 1px;background-color: #FBEE09;">&nbsp;'.langtransstr('Medium').'&nbsp;</span>';
     break;
     case (($uv >=6 ) and ($uv < 8)):
       $uv = '<span style="border: solid 1px; background-color: #FD9125;">&nbsp;'.langtransstr('High').'&nbsp;</span>';
     break;
     case (($uv >=8 ) and ($uv < 11)):
       $uv = '<span style="border: solid 1px; color: #FFFFFF; background-color: #F63F37;">&nbsp;'.langtransstr('Very&nbsp;High').'&nbsp;</span>';
     break;
     case (($uv >= 11) ):
       $uv = '<span style="border: solid 1px; color: #FFFF00; background-color: #807780;">&nbsp;'.langtransstr('Extreme').'&nbsp;</span>';
     break;
   } // end switch
   return $uv;
} // end getUVword
//=========================================================================
<?php
############################################################################
include("footer.php");
############################################################################
# End of Page
############################################################################
